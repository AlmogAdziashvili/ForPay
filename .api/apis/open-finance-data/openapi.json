{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://{API_PREFIX}.open-finance.ai/v2",
      "variables": {
        "API_PREFIX": {
          "enum": [
            "api"
          ],
          "default": "api",
          "description": "This prefix defines which API you want to use, for example a Sandbox API or Production API"
        }
      }
    }
  ],
  "info": {
    "version": "1.0.0",
    "title": "Data"
  },
  "paths": {
    "/data/monthly-report/{userId}": {
      "get": {
        "summary": "Get a user's open banking report",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The id of the customer that the report is required for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "openBankingReportId": {
                      "type": "string",
                      "description": "A unique identifier for the report"
                    },
                    "openBankingReportBalances": {
                      "type": "object",
                      "properties": {
                        "incomes": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "The total amount of incomes"
                            },
                            "incomeFromSalary": {
                              "type": "number",
                              "description": "The total amount of incomes from salary"
                            },
                            "incomeFromChecks": {
                              "type": "number",
                              "description": "The total amount of incomes from checks"
                            },
                            "regularIncomesSum": {
                              "type": "number",
                              "description": "The total amount of regular incomes"
                            }
                          }
                        },
                        "expenses": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "description": "The total amount of expenses"
                            },
                            "expensesFromMortgage": {
                              "type": "number",
                              "description": "The total amount of expenses on mortgage"
                            },
                            "expensesFromChecks": {
                              "type": "number",
                              "description": "The total amount of expenses from checks"
                            },
                            "regularExpensesSum": {
                              "type": "number",
                              "description": "The total amount of regular expenses"
                            }
                          }
                        },
                        "canceledChecks": {
                          "type": "number",
                          "description": "Number of times checks were canceled"
                        },
                        "standingOrdersReturns": {
                          "type": "number",
                          "description": "Number of times standing orders were returned"
                        },
                        "irregularWarnings": {
                          "type": "number",
                          "description": "Number of irregular warnings"
                        },
                        "accountForeclosure": {
                          "type": "number",
                          "description": "Number of account foreclosures"
                        },
                        "nsf": {
                          "type": "number",
                          "description": "Number of NSF times"
                        },
                        "transfersForFallingBehind": {
                          "type": "number",
                          "description": "Number of times money was transferred to cover falling behind"
                        },
                        "limitationAlert": {
                          "type": "number",
                          "description": "Number of limitation alerts"
                        },
                        "fallingBehindWarnings": {
                          "type": "number",
                          "description": "Number of falling behind warnings"
                        }
                      }
                    },
                    "MonthlyReportGeneralDetails": {
                      "type": "object",
                      "properties": {
                        "loans": {
                          "type": "object",
                          "properties": {
                            "totalLoansAmount": {
                              "type": "number",
                              "description": "Current total loans amount"
                            },
                            "bankLoans": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "The total amount of the loan"
                                  }
                                }
                              }
                            },
                            "creditCardLoans": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "The total amount of the loan"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "savings": {
                          "type": "object",
                          "properties": {
                            "totalSavingsAmount": {
                              "type": "number",
                              "description": "Current total savings amount"
                            },
                            "savingsDetails": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "type": "number",
                                      "description": "Total amount of savings account"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the savings accounts"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "accounts": {
                          "type": "object",
                          "properties": {
                            "checking": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "A unique identifier for the account"
                                  },
                                  "userId": {
                                    "type": "string",
                                    "description": "A unique identifier for the user"
                                  },
                                  "providerId": {
                                    "type": "string",
                                    "description": "A unique identifier for the provider"
                                  },
                                  "connectionId": {
                                    "type": "string",
                                    "description": "A unique identifier for the connection"
                                  },
                                  "accountNumber": {
                                    "type": "string",
                                    "description": "A bank account number"
                                  },
                                  "product": {
                                    "type": "string",
                                    "description": "The product of this account"
                                  },
                                  "parsedAccount": {
                                    "type": "object",
                                    "description": "Account iban number parsed",
                                    "properties": {
                                      "bank": {
                                        "type": "string",
                                        "description": "Bank number"
                                      },
                                      "branch": {
                                        "type": "string",
                                        "description": "Branch number"
                                      },
                                      "number": {
                                        "type": "string",
                                        "description": "Account number"
                                      }
                                    }
                                  },
                                  "accountType": {
                                    "type": "string",
                                    "description": "The type of the account"
                                  },
                                  "creditStatus": {
                                    "type": "string",
                                    "enum": [
                                      "deleted",
                                      "enabled",
                                      "disabled"
                                    ],
                                    "description": "The status of a credit card"
                                  },
                                  "cardDueDate": {
                                    "type": "string",
                                    "description": "A card due date"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The currency of which the account transacts in"
                                  },
                                  "ownerInfo": {
                                    "type": "object",
                                    "description": "Information of the account owner",
                                    "properties": {
                                      "nationalId": {
                                        "type": "string",
                                        "description": "Legal national ID"
                                      },
                                      "fullName": {
                                        "type": "string",
                                        "description": "Legal full name"
                                      }
                                    }
                                  },
                                  "accountName": {
                                    "type": "string",
                                    "description": "The name of the account"
                                  },
                                  "balances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "The amount value",
                                          "example": 11
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    }
                                  },
                                  "interst": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "rate": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "precentage": {
                                                "type": "number",
                                                "example": 4.5
                                              }
                                            }
                                          },
                                          "description": "Array of the different interest rates"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the interest. FIXD or INDE"
                                        },
                                        "relatedIndecies": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "index": {
                                                "type": "string",
                                                "description": "The index of the variable interest, if there is one"
                                              },
                                              "additionalInformation": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    },
                                    "description": "Interest information, only for savings and loans"
                                  },
                                  "relatedDates": {
                                    "type": "object",
                                    "properties": {
                                      "contractAvailabilityDate": {
                                        "type": "string"
                                      },
                                      "contractEndDate": {
                                        "type": "string"
                                      },
                                      "contractStartDate": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "usage": {
                                    "type": "string",
                                    "description": "The type of usage of the account. Private or business"
                                  },
                                  "creditLimit": {
                                    "type": "number",
                                    "description": "The credit limit of the account"
                                  },
                                  "transactions": {
                                    "type": "number",
                                    "description": "Number of transactions the account has"
                                  },
                                  "applicableFees": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "typeProprietary": {
                                          "type": "string"
                                        },
                                        "applicableFrom": {
                                          "type": "string"
                                        },
                                        "additionalInformation": {
                                          "type": "string"
                                        },
                                        "applicableTo": {
                                          "type": "string"
                                        },
                                        "feeRules": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "percentage": {
                                                "type": "number"
                                              },
                                              "minimumAmount": {
                                                "type": "object",
                                                "properties": {
                                                  "amount": {
                                                    "type": "number",
                                                    "description": "The amount value",
                                                    "example": 11
                                                  },
                                                  "currency": {
                                                    "type": "string",
                                                    "description": "The amount currency",
                                                    "example": "ILS"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "securityPositions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "financialInstrument": {
                                          "type": "object",
                                          "properties": {
                                            "isin": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "normalisedPrice": {
                                              "type": "object",
                                              "properties": {
                                                "amount": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount value",
                                                      "example": 11
                                                    },
                                                    "currency": {
                                                      "type": "string",
                                                      "description": "The amount currency",
                                                      "example": "ILS"
                                                    }
                                                  }
                                                },
                                                "priceDateTime": {
                                                  "type": "string"
                                                },
                                                "priceType": {
                                                  "type": "string",
                                                  "enum": [
                                                    "BIDE",
                                                    "OFFR",
                                                    "NAVL",
                                                    "CREA",
                                                    "CANC",
                                                    "INTE",
                                                    "SWNG",
                                                    "MIDD",
                                                    "RINV",
                                                    "SWIC",
                                                    "MRKT",
                                                    "INDC",
                                                    "DDVR",
                                                    "ACTU"
                                                  ]
                                                },
                                                "sourceOfPrice": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "FUND",
                                                        "LMAR",
                                                        "THEO",
                                                        "VEND"
                                                      ]
                                                    },
                                                    "mic": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "unitsNumber": {
                                              "type": "number"
                                            },
                                            "balanceType": {
                                              "type": "string",
                                              "enum": [
                                                "AVAI",
                                                "AWAS",
                                                "BTRA",
                                                "BLOK",
                                                "BLOV",
                                                "BLCA",
                                                "BLOT",
                                                "BORR",
                                                "COLI",
                                                "COLO",
                                                "MARG",
                                                "DRAW",
                                                "COLA",
                                                "TRAN",
                                                "ISSU",
                                                "DIRT",
                                                "LOAN",
                                                "REGO",
                                                "BODE",
                                                "BORE",
                                                "PEDA",
                                                "PECA",
                                                "PEND",
                                                "PDMT",
                                                "PDUM",
                                                "LODE",
                                                "LORE",
                                                "PENR",
                                                "PRMT",
                                                "PRUM",
                                                "PLED",
                                                "QUAS",
                                                "NOMI",
                                                "RSTR",
                                                "SPOS",
                                                "CLEN",
                                                "OTHR",
                                                "UNRG",
                                                "WDOC"
                                              ]
                                            },
                                            "averageBuyingPrice": {
                                              "type": "object",
                                              "properties": {
                                                "amount": {
                                                  "type": "number",
                                                  "description": "The amount value",
                                                  "example": 11
                                                },
                                                "currency": {
                                                  "type": "string",
                                                  "description": "The amount currency",
                                                  "example": "ILS"
                                                }
                                              }
                                            },
                                            "details": {
                                              "type": "string",
                                              "properties": {
                                                "symbol": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "description": "Financial instrument that was transferred within the transaction."
                                        }
                                      }
                                    }
                                  },
                                  "securityOrders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "orderId": {
                                          "type": "string"
                                        },
                                        "side": {
                                          "type": "string",
                                          "enum": [
                                            "buy",
                                            "sell",
                                            "subscription",
                                            "redemption"
                                          ]
                                        },
                                        "financialInstrument": {
                                          "type": "object",
                                          "properties": {
                                            "isin": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "unitsNumber": {
                                          "type": "string"
                                        },
                                        "orderStatus": {
                                          "type": "string",
                                          "enum": [
                                            "unknown",
                                            "new",
                                            "partiallyFilled",
                                            "filled",
                                            "doneForDay",
                                            "canceled",
                                            "replaced",
                                            "pendingCancel",
                                            "stopped",
                                            "rejected",
                                            "suspended",
                                            "pendingNew",
                                            "calculated",
                                            "expired",
                                            "acceptedForBidding",
                                            "pendingReplace"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "loanType": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "RETAIL_LOAN",
                                        "MORTGAGE",
                                        "CREDIT_LIMIT",
                                        "GUARANTEE",
                                        "CREDIT_CARD",
                                        "CHEQUE_DISCOUNTING",
                                        "FUTURE_PAYMENT"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "savings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "A unique identifier for the account"
                                  },
                                  "userId": {
                                    "type": "string",
                                    "description": "A unique identifier for the user"
                                  },
                                  "providerId": {
                                    "type": "string",
                                    "description": "A unique identifier for the provider"
                                  },
                                  "connectionId": {
                                    "type": "string",
                                    "description": "A unique identifier for the connection"
                                  },
                                  "accountNumber": {
                                    "type": "string",
                                    "description": "A bank account number"
                                  },
                                  "product": {
                                    "type": "string",
                                    "description": "The product of this account"
                                  },
                                  "parsedAccount": {
                                    "type": "object",
                                    "description": "Account iban number parsed",
                                    "properties": {
                                      "bank": {
                                        "type": "string",
                                        "description": "Bank number"
                                      },
                                      "branch": {
                                        "type": "string",
                                        "description": "Branch number"
                                      },
                                      "number": {
                                        "type": "string",
                                        "description": "Account number"
                                      }
                                    }
                                  },
                                  "accountType": {
                                    "type": "string",
                                    "description": "The type of the account"
                                  },
                                  "creditStatus": {
                                    "type": "string",
                                    "enum": [
                                      "deleted",
                                      "enabled",
                                      "disabled"
                                    ],
                                    "description": "The status of a credit card"
                                  },
                                  "cardDueDate": {
                                    "type": "string",
                                    "description": "A card due date"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The currency of which the account transacts in"
                                  },
                                  "ownerInfo": {
                                    "type": "object",
                                    "description": "Information of the account owner",
                                    "properties": {
                                      "nationalId": {
                                        "type": "string",
                                        "description": "Legal national ID"
                                      },
                                      "fullName": {
                                        "type": "string",
                                        "description": "Legal full name"
                                      }
                                    }
                                  },
                                  "accountName": {
                                    "type": "string",
                                    "description": "The name of the account"
                                  },
                                  "balances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "The amount value",
                                          "example": 11
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    }
                                  },
                                  "interst": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "rate": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "precentage": {
                                                "type": "number",
                                                "example": 4.5
                                              }
                                            }
                                          },
                                          "description": "Array of the different interest rates"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the interest. FIXD or INDE"
                                        },
                                        "relatedIndecies": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "index": {
                                                "type": "string",
                                                "description": "The index of the variable interest, if there is one"
                                              },
                                              "additionalInformation": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    },
                                    "description": "Interest information, only for savings and loans"
                                  },
                                  "relatedDates": {
                                    "type": "object",
                                    "properties": {
                                      "contractAvailabilityDate": {
                                        "type": "string"
                                      },
                                      "contractEndDate": {
                                        "type": "string"
                                      },
                                      "contractStartDate": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "usage": {
                                    "type": "string",
                                    "description": "The type of usage of the account. Private or business"
                                  },
                                  "creditLimit": {
                                    "type": "number",
                                    "description": "The credit limit of the account"
                                  },
                                  "transactions": {
                                    "type": "number",
                                    "description": "Number of transactions the account has"
                                  },
                                  "applicableFees": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "typeProprietary": {
                                          "type": "string"
                                        },
                                        "applicableFrom": {
                                          "type": "string"
                                        },
                                        "additionalInformation": {
                                          "type": "string"
                                        },
                                        "applicableTo": {
                                          "type": "string"
                                        },
                                        "feeRules": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "percentage": {
                                                "type": "number"
                                              },
                                              "minimumAmount": {
                                                "type": "object",
                                                "properties": {
                                                  "amount": {
                                                    "type": "number",
                                                    "description": "The amount value",
                                                    "example": 11
                                                  },
                                                  "currency": {
                                                    "type": "string",
                                                    "description": "The amount currency",
                                                    "example": "ILS"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "securityPositions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "financialInstrument": {
                                          "type": "object",
                                          "properties": {
                                            "isin": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "normalisedPrice": {
                                              "type": "object",
                                              "properties": {
                                                "amount": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount value",
                                                      "example": 11
                                                    },
                                                    "currency": {
                                                      "type": "string",
                                                      "description": "The amount currency",
                                                      "example": "ILS"
                                                    }
                                                  }
                                                },
                                                "priceDateTime": {
                                                  "type": "string"
                                                },
                                                "priceType": {
                                                  "type": "string",
                                                  "enum": [
                                                    "BIDE",
                                                    "OFFR",
                                                    "NAVL",
                                                    "CREA",
                                                    "CANC",
                                                    "INTE",
                                                    "SWNG",
                                                    "MIDD",
                                                    "RINV",
                                                    "SWIC",
                                                    "MRKT",
                                                    "INDC",
                                                    "DDVR",
                                                    "ACTU"
                                                  ]
                                                },
                                                "sourceOfPrice": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "FUND",
                                                        "LMAR",
                                                        "THEO",
                                                        "VEND"
                                                      ]
                                                    },
                                                    "mic": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "unitsNumber": {
                                              "type": "number"
                                            },
                                            "balanceType": {
                                              "type": "string",
                                              "enum": [
                                                "AVAI",
                                                "AWAS",
                                                "BTRA",
                                                "BLOK",
                                                "BLOV",
                                                "BLCA",
                                                "BLOT",
                                                "BORR",
                                                "COLI",
                                                "COLO",
                                                "MARG",
                                                "DRAW",
                                                "COLA",
                                                "TRAN",
                                                "ISSU",
                                                "DIRT",
                                                "LOAN",
                                                "REGO",
                                                "BODE",
                                                "BORE",
                                                "PEDA",
                                                "PECA",
                                                "PEND",
                                                "PDMT",
                                                "PDUM",
                                                "LODE",
                                                "LORE",
                                                "PENR",
                                                "PRMT",
                                                "PRUM",
                                                "PLED",
                                                "QUAS",
                                                "NOMI",
                                                "RSTR",
                                                "SPOS",
                                                "CLEN",
                                                "OTHR",
                                                "UNRG",
                                                "WDOC"
                                              ]
                                            },
                                            "averageBuyingPrice": {
                                              "type": "object",
                                              "properties": {
                                                "amount": {
                                                  "type": "number",
                                                  "description": "The amount value",
                                                  "example": 11
                                                },
                                                "currency": {
                                                  "type": "string",
                                                  "description": "The amount currency",
                                                  "example": "ILS"
                                                }
                                              }
                                            },
                                            "details": {
                                              "type": "string",
                                              "properties": {
                                                "symbol": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "description": "Financial instrument that was transferred within the transaction."
                                        }
                                      }
                                    }
                                  },
                                  "securityOrders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "orderId": {
                                          "type": "string"
                                        },
                                        "side": {
                                          "type": "string",
                                          "enum": [
                                            "buy",
                                            "sell",
                                            "subscription",
                                            "redemption"
                                          ]
                                        },
                                        "financialInstrument": {
                                          "type": "object",
                                          "properties": {
                                            "isin": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "unitsNumber": {
                                          "type": "string"
                                        },
                                        "orderStatus": {
                                          "type": "string",
                                          "enum": [
                                            "unknown",
                                            "new",
                                            "partiallyFilled",
                                            "filled",
                                            "doneForDay",
                                            "canceled",
                                            "replaced",
                                            "pendingCancel",
                                            "stopped",
                                            "rejected",
                                            "suspended",
                                            "pendingNew",
                                            "calculated",
                                            "expired",
                                            "acceptedForBidding",
                                            "pendingReplace"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "loanType": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "RETAIL_LOAN",
                                        "MORTGAGE",
                                        "CREDIT_LIMIT",
                                        "GUARANTEE",
                                        "CREDIT_CARD",
                                        "CHEQUE_DISCOUNTING",
                                        "FUTURE_PAYMENT"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "loans": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "A unique identifier for the account"
                                  },
                                  "userId": {
                                    "type": "string",
                                    "description": "A unique identifier for the user"
                                  },
                                  "providerId": {
                                    "type": "string",
                                    "description": "A unique identifier for the provider"
                                  },
                                  "connectionId": {
                                    "type": "string",
                                    "description": "A unique identifier for the connection"
                                  },
                                  "accountNumber": {
                                    "type": "string",
                                    "description": "A bank account number"
                                  },
                                  "product": {
                                    "type": "string",
                                    "description": "The product of this account"
                                  },
                                  "parsedAccount": {
                                    "type": "object",
                                    "description": "Account iban number parsed",
                                    "properties": {
                                      "bank": {
                                        "type": "string",
                                        "description": "Bank number"
                                      },
                                      "branch": {
                                        "type": "string",
                                        "description": "Branch number"
                                      },
                                      "number": {
                                        "type": "string",
                                        "description": "Account number"
                                      }
                                    }
                                  },
                                  "accountType": {
                                    "type": "string",
                                    "description": "The type of the account"
                                  },
                                  "creditStatus": {
                                    "type": "string",
                                    "enum": [
                                      "deleted",
                                      "enabled",
                                      "disabled"
                                    ],
                                    "description": "The status of a credit card"
                                  },
                                  "cardDueDate": {
                                    "type": "string",
                                    "description": "A card due date"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The currency of which the account transacts in"
                                  },
                                  "ownerInfo": {
                                    "type": "object",
                                    "description": "Information of the account owner",
                                    "properties": {
                                      "nationalId": {
                                        "type": "string",
                                        "description": "Legal national ID"
                                      },
                                      "fullName": {
                                        "type": "string",
                                        "description": "Legal full name"
                                      }
                                    }
                                  },
                                  "accountName": {
                                    "type": "string",
                                    "description": "The name of the account"
                                  },
                                  "balances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "The amount value",
                                          "example": 11
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    }
                                  },
                                  "interst": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "rate": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "precentage": {
                                                "type": "number",
                                                "example": 4.5
                                              }
                                            }
                                          },
                                          "description": "Array of the different interest rates"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the interest. FIXD or INDE"
                                        },
                                        "relatedIndecies": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "index": {
                                                "type": "string",
                                                "description": "The index of the variable interest, if there is one"
                                              },
                                              "additionalInformation": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    },
                                    "description": "Interest information, only for savings and loans"
                                  },
                                  "relatedDates": {
                                    "type": "object",
                                    "properties": {
                                      "contractAvailabilityDate": {
                                        "type": "string"
                                      },
                                      "contractEndDate": {
                                        "type": "string"
                                      },
                                      "contractStartDate": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "usage": {
                                    "type": "string",
                                    "description": "The type of usage of the account. Private or business"
                                  },
                                  "creditLimit": {
                                    "type": "number",
                                    "description": "The credit limit of the account"
                                  },
                                  "transactions": {
                                    "type": "number",
                                    "description": "Number of transactions the account has"
                                  },
                                  "applicableFees": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "typeProprietary": {
                                          "type": "string"
                                        },
                                        "applicableFrom": {
                                          "type": "string"
                                        },
                                        "additionalInformation": {
                                          "type": "string"
                                        },
                                        "applicableTo": {
                                          "type": "string"
                                        },
                                        "feeRules": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "percentage": {
                                                "type": "number"
                                              },
                                              "minimumAmount": {
                                                "type": "object",
                                                "properties": {
                                                  "amount": {
                                                    "type": "number",
                                                    "description": "The amount value",
                                                    "example": 11
                                                  },
                                                  "currency": {
                                                    "type": "string",
                                                    "description": "The amount currency",
                                                    "example": "ILS"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "securityPositions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "financialInstrument": {
                                          "type": "object",
                                          "properties": {
                                            "isin": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "normalisedPrice": {
                                              "type": "object",
                                              "properties": {
                                                "amount": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount value",
                                                      "example": 11
                                                    },
                                                    "currency": {
                                                      "type": "string",
                                                      "description": "The amount currency",
                                                      "example": "ILS"
                                                    }
                                                  }
                                                },
                                                "priceDateTime": {
                                                  "type": "string"
                                                },
                                                "priceType": {
                                                  "type": "string",
                                                  "enum": [
                                                    "BIDE",
                                                    "OFFR",
                                                    "NAVL",
                                                    "CREA",
                                                    "CANC",
                                                    "INTE",
                                                    "SWNG",
                                                    "MIDD",
                                                    "RINV",
                                                    "SWIC",
                                                    "MRKT",
                                                    "INDC",
                                                    "DDVR",
                                                    "ACTU"
                                                  ]
                                                },
                                                "sourceOfPrice": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "FUND",
                                                        "LMAR",
                                                        "THEO",
                                                        "VEND"
                                                      ]
                                                    },
                                                    "mic": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "unitsNumber": {
                                              "type": "number"
                                            },
                                            "balanceType": {
                                              "type": "string",
                                              "enum": [
                                                "AVAI",
                                                "AWAS",
                                                "BTRA",
                                                "BLOK",
                                                "BLOV",
                                                "BLCA",
                                                "BLOT",
                                                "BORR",
                                                "COLI",
                                                "COLO",
                                                "MARG",
                                                "DRAW",
                                                "COLA",
                                                "TRAN",
                                                "ISSU",
                                                "DIRT",
                                                "LOAN",
                                                "REGO",
                                                "BODE",
                                                "BORE",
                                                "PEDA",
                                                "PECA",
                                                "PEND",
                                                "PDMT",
                                                "PDUM",
                                                "LODE",
                                                "LORE",
                                                "PENR",
                                                "PRMT",
                                                "PRUM",
                                                "PLED",
                                                "QUAS",
                                                "NOMI",
                                                "RSTR",
                                                "SPOS",
                                                "CLEN",
                                                "OTHR",
                                                "UNRG",
                                                "WDOC"
                                              ]
                                            },
                                            "averageBuyingPrice": {
                                              "type": "object",
                                              "properties": {
                                                "amount": {
                                                  "type": "number",
                                                  "description": "The amount value",
                                                  "example": 11
                                                },
                                                "currency": {
                                                  "type": "string",
                                                  "description": "The amount currency",
                                                  "example": "ILS"
                                                }
                                              }
                                            },
                                            "details": {
                                              "type": "string",
                                              "properties": {
                                                "symbol": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "description": "Financial instrument that was transferred within the transaction."
                                        }
                                      }
                                    }
                                  },
                                  "securityOrders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "orderId": {
                                          "type": "string"
                                        },
                                        "side": {
                                          "type": "string",
                                          "enum": [
                                            "buy",
                                            "sell",
                                            "subscription",
                                            "redemption"
                                          ]
                                        },
                                        "financialInstrument": {
                                          "type": "object",
                                          "properties": {
                                            "isin": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "unitsNumber": {
                                          "type": "string"
                                        },
                                        "orderStatus": {
                                          "type": "string",
                                          "enum": [
                                            "unknown",
                                            "new",
                                            "partiallyFilled",
                                            "filled",
                                            "doneForDay",
                                            "canceled",
                                            "replaced",
                                            "pendingCancel",
                                            "stopped",
                                            "rejected",
                                            "suspended",
                                            "pendingNew",
                                            "calculated",
                                            "expired",
                                            "acceptedForBidding",
                                            "pendingReplace"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "loanType": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "RETAIL_LOAN",
                                        "MORTGAGE",
                                        "CREDIT_LIMIT",
                                        "GUARANTEE",
                                        "CREDIT_CARD",
                                        "CHEQUE_DISCOUNTING",
                                        "FUTURE_PAYMENT"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The user has no connections"
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "The user has no report, refreshing it's data and creating the report"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/providers": {
      "get": {
        "summary": "Get all providers",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:providers"
            ]
          }
        ],
        "parameters": [
          {
            "name": "includeFakeProviders",
            "in": "query",
            "required": false,
            "description": "Include Sandbox Providers in response",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "providerFriendlyId": {
                        "type": "string",
                        "description": "A unique identifier for the provider"
                      },
                      "name": {
                        "type": "string",
                        "description": "The bank name"
                      },
                      "nameNativeLanguage": {
                        "type": "string",
                        "description": "The bank name in it's native language"
                      },
                      "mode": {
                        "type": "string",
                        "description": "PSD2"
                      },
                      "site": {
                        "type": "string",
                        "description": "The official website or login URL of the bank"
                      },
                      "bankCode": {
                        "type": "integer",
                        "description": "The code of the bank"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL for the provider's logo or image"
                      },
                      "loginFields": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Fields required for bank login"
                        }
                      },
                      "isFake": {
                        "type": "boolean",
                        "description": "If true, the provider is fake"
                      },
                      "psd2Uris": {
                        "type": "object",
                        "properties": {
                          "cardUri": {
                            "type": "string",
                            "description": "The URI for accessing card data"
                          },
                          "loanUri": {
                            "type": "string",
                            "description": "The URI for accessing loan data"
                          },
                          "savingsUri": {
                            "type": "string",
                            "description": "The URI for accessing savings data"
                          },
                          "securitiesUri": {
                            "type": "string",
                            "description": "The URI for accessing securities data"
                          },
                          "tokenUri": {
                            "type": "string",
                            "description": "The URI for generating tokens"
                          },
                          "baseUri": {
                            "type": "string",
                            "description": "The base URI for accessing PSD2 services"
                          },
                          "paymentsUri": {
                            "type": "string",
                            "description": "The URI for accessing payment data"
                          }
                        },
                        "description": "URIs for various PSD2 services offered by the provider"
                      },
                      "psuIdTypes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the PSU ID type"
                            },
                            "nameNativeLanguage": {
                              "type": "string",
                              "description": "The name of the PSU ID type in its native language"
                            },
                            "id": {
                              "type": "string",
                              "description": "The identifier for the PSU ID type"
                            }
                          }
                        },
                        "description": "Different types of PSU IDs supported by the provider"
                      },
                      "psuIdDefaultType": {
                        "type": "string",
                        "description": "The default PSU ID type for the provider"
                      },
                      "psuCorporateIdDefaultType": {
                        "type": "string",
                        "description": "The default PSU CORPORATE ID type for the provider"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the provider, such as 'BANK', 'CARD', or 'INSURANCE'"
                      },
                      "status": {
                        "type": "object",
                        "properties": {
                          "consents": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Indicates if consents are enabled for this provider"
                              }
                            }
                          },
                          "payments": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Indicates if payments are enabled for this provider"
                              }
                            }
                          }
                        },
                        "description": "The status of different services (consents and payments) offered by the provider"
                      },
                      "successRate": {
                        "type": "object",
                        "properties": {
                          "consents": {
                            "type": "integer",
                            "description": "The success rate percentage for consents"
                          },
                          "payments": {
                            "type": "integer",
                            "description": "The success rate percentage for payments"
                          }
                        },
                        "description": "The success rates for the services provided by the provider"
                      },
                      "allowPsuCorporateIdTypeChoice": {
                        "type": "boolean",
                        "description": "Indicates if the provider allows the selection of different PSU corporate ID types"
                      },
                      "providerForcePaymentService": {
                        "type": "string",
                        "enum": [
                          "zahav",
                          "masav",
                          "fp"
                        ],
                        "description": "Does this provider have a forced payment service"
                      },
                      "psuCorporateIdTypes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the PSU Corporate ID type"
                            },
                            "nameNativeLanguage": {
                              "type": "string",
                              "description": "The name of the PSU Corporate ID type in its native language"
                            },
                            "id": {
                              "type": "string",
                              "description": "The identifier for the PSU Corporate ID type"
                            }
                          }
                        },
                        "description": "Different types of PSU Corporate IDs supported by the provider"
                      },
                      "sortIndex": {
                        "type": "number",
                        "description": "A numeric value used to sort providers by their order of preference or importance"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to perform this action"
          },
          "404": {
            "description": "Not found - no providers were found or organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "CLIENT_ERROR"
                    },
                    "message": {
                      "type": "string",
                      "example": "No providers were found"
                    }
                  }
                },
                "examples": {
                  "Providers Not Found": {
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "No providers were found"
                    }
                  },
                  "Organization Not Found": {
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Organization not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/bank-branches": {
      "get": {
        "summary": "Get all bank branches",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:providers"
            ]
          }
        ],
        "parameters": [
          {
            "name": "bankCode",
            "in": "query",
            "required": true,
            "description": "The bank code of the bank you would like to get the branches of",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "branchCode": {
                        "type": "integer",
                        "description": "The code of the branch"
                      },
                      "city": {
                        "type": "string",
                        "description": "The city where the branch is located"
                      },
                      "POB": {
                        "type": "string",
                        "nullable": true,
                        "description": "Post Office Box number"
                      },
                      "branchName": {
                        "type": "string",
                        "description": "The name of the branch"
                      },
                      "fax": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fax number of the branch"
                      },
                      "handicapAccess": {
                        "type": "string",
                        "description": "Indicates if the branch has handicap access"
                      },
                      "dayClosed": {
                        "type": "string",
                        "description": "The day the branch is closed"
                      },
                      "branchType": {
                        "type": "string",
                        "description": "The type of the branch"
                      },
                      "mergeBranch": {
                        "type": "string",
                        "nullable": true,
                        "description": "Code of the branch it merged with, if applicable"
                      },
                      "freeTel": {
                        "type": "string",
                        "nullable": true,
                        "description": "Free telephone number"
                      },
                      "closeDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The date the branch was closed"
                      },
                      "branchAddress": {
                        "type": "string",
                        "description": "The address of the branch"
                      },
                      "openDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date the branch was opened"
                      },
                      "YCoordinate": {
                        "type": "number",
                        "format": "double",
                        "description": "The Y coordinate of the branch location"
                      },
                      "XCoordinate": {
                        "type": "number",
                        "format": "double",
                        "description": "The X coordinate of the branch location"
                      },
                      "telephone": {
                        "type": "string",
                        "description": "The telephone number of the branch"
                      },
                      "zipCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The zip code of the branch"
                      },
                      "bankCode": {
                        "type": "integer",
                        "description": "The code of the bank"
                      },
                      "mergeBank": {
                        "type": "string",
                        "nullable": true,
                        "description": "Code of the bank it merged with, if applicable"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to perform this action"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/account-verification": {
      "post": {
        "summary": "Create account verification report",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "create:account_verification_reports"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "psuId": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 9,
                    "description": "The id of person to verificate the account against"
                  },
                  "accountNumber": {
                    "type": "string",
                    "pattern": "^0\\d{2}-\\d{3}-\\d{1,9}$",
                    "description": "The account number to check, formatted as '0XX-XXX-XXXXX'"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account verification report successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountNumberSent": {
                      "type": "string",
                      "description": "The account number that was asked to be verified"
                    },
                    "psuId": {
                      "type": "string",
                      "description": "The id of the person asked to be verified",
                      "minLength": 5,
                      "maxLength": 9,
                      "pattern": "^[0-9]+$"
                    },
                    "orgId": {
                      "type": "string",
                      "description": "The organization id"
                    },
                    "userId": {
                      "type": "string",
                      "description": "The user id"
                    },
                    "reportId": {
                      "type": "string",
                      "description": "The report id"
                    },
                    "verified": {
                      "type": "boolean",
                      "description": "Was the account verified or not"
                    },
                    "verificationFailedReason": {
                      "type": "string",
                      "description": "If the verification failed, what was the reason"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format or parameters, or validation error for orgId or userId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to perform this action"
          },
          "404": {
            "description": "Not found - The route or resource were not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get user account verification reports",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:account_verification_reports"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountNumberSent": {
                        "type": "string",
                        "description": "The account number that was asked to be verified"
                      },
                      "psuId": {
                        "type": "string",
                        "description": "The id of the person asked to be verified",
                        "minLength": 5,
                        "maxLength": 9,
                        "pattern": "^[0-9]+$"
                      },
                      "orgId": {
                        "type": "string",
                        "description": "The organization id"
                      },
                      "userId": {
                        "type": "string",
                        "description": "The user id"
                      },
                      "reportId": {
                        "type": "string",
                        "description": "The report id"
                      },
                      "verified": {
                        "type": "boolean",
                        "description": "Was the account verified or not"
                      },
                      "verificationFailedReason": {
                        "type": "string",
                        "description": "If the verification failed, what was the reason"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error - orgId was not provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Not found - The route or resource were not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/account-number-verification": {
      "post": {
        "summary": "Check if a certain account is restricted",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:restricted_accounts"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountNumber": {
                    "type": "string",
                    "pattern": "^\\d+-\\d+-\\d+$",
                    "description": "The bban account number to check, formatted as 'XX-XXX-XXXXX'"
                  },
                  "accountIbanNumber": {
                    "type": "string",
                    "pattern": "^\\d+-\\d+-\\d+$",
                    "description": "The iban account number to check, formatted as 'ILXXXXXXXXXXXXXXXXXXX'"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "INVALID",
                      "enum": [
                        "RESTRICTED",
                        "VALID",
                        "INVALID"
                      ],
                      "description": "Returns whether the account is restricted, and if not then if the account number is valid or not"
                    },
                    "reason": {
                      "type": "string",
                      "enum": [
                        "BANK_INVALID",
                        "BRANCH_INVALID",
                        "ACCOUNT_INVALID",
                        "BRANCH_CLOSED"
                      ],
                      "description": "If the account is invalid, the reason will be displayed here"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format or parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Not found - The route or resource were not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/payments/{paymentId}/refund": {
      "post": {
        "summary": "Refund a payment",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "create:payments"
            ]
          }
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the payment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "description",
                  "amount"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The description of the refund payment",
                    "example": "Refund for TV purchase"
                  },
                  "psuId": {
                    "type": "string",
                    "description": "The national id of the merchant making the refund",
                    "example": "321654544"
                  },
                  "psuCorporateId": {
                    "type": "string",
                    "description": "The business id of the merchant making the refund",
                    "example": "321654544"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "The phone number of the merchant making the refund",
                    "example": "0545483765"
                  },
                  "sendSMS": {
                    "type": "boolean",
                    "description": "Send an SMS to the merchant with the refund journey",
                    "default": false
                  },
                  "amount": {
                    "type": "number",
                    "description": "The refund amount"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The payment id of the refund payment"
                    },
                    "payUrl": {
                      "type": "string",
                      "description": "The journey url for the refund"
                    },
                    "sentMerchantSMS": {
                      "type": "boolean",
                      "description": "Was sn SMS sent to the merchant"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format or parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Not found - The route or resource were not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/aggregations": {
      "post": {
        "summary": "Get users by ids",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:aggregation"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userIds": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The id of the desired user"
                        },
                        "segmentType": {
                          "type": "number",
                          "description": "The user's segment to check"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          }
                        },
                        "description": "Parameter details"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No id or segmentType were found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Not found - The route or resource were not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/aggregate/financial-data-email": {
      "post": {
        "summary": "Send financial data by email",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:accounts",
              "read:transactions"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "detailsToShare": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "CHECKING",
                        "CARD",
                        "LOAN",
                        "SAVINGS",
                        "INSURANCE"
                      ]
                    }
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "detailsToShare",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "description": "The data represented in base64"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing detailsToShare or email in request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Not found - The route or resource were not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/completion/wh/incoming": {
      "post": {
        "summary": "Send a link via whatsapp message",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Body": {
                    "type": "string"
                  },
                  "From": {
                    "type": "string"
                  }
                },
                "required": [
                  "Body",
                  "From"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Missing Body or From in request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - missing authorization"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Not found - The route or resource were not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/connect/open-banking-init": {
      "post": {
        "summary": "Initiate a connection to open banking",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "create:connections"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "providerId": {
                    "type": "string",
                    "description": "A unique identifier for the provider",
                    "enum": [
                      "yahav-sandbox",
                      "yahav",
                      "undefined",
                      "ubank-sandbox",
                      "ubank",
                      "pepper",
                      "pagi-sandbox",
                      "pagi",
                      "otsarHahayal-sandbox",
                      "otsarHahayal",
                      "open-finance-sandbox",
                      "open-finance-card-sandbox",
                      "mizrahi-sandbox",
                      "mizrahi",
                      "mercantile-sandbox",
                      "mercantile",
                      "menora-sandbox",
                      "max-sandbox",
                      "max",
                      "masad-sandbox",
                      "masad",
                      "leumi-sandbox",
                      "leumi",
                      "isracard-sandbox",
                      "isracard",
                      "hapoalim-sandbox",
                      "hapoalim",
                      "discount-sandbox",
                      "discount",
                      "cal-sandbox",
                      "cal",
                      "beinleumi-sandbox",
                      "beinleumi",
                      "americanExpress"
                    ]
                  },
                  "connectionId": {
                    "type": "string",
                    "description": "A unique identifier for the connection"
                  },
                  "psuId": {
                    "type": "string",
                    "description": "The national ID or passport number of the user",
                    "minLength": 5,
                    "maxLength": 9,
                    "pattern": "^[0-9]+$"
                  },
                  "psuIdType": {
                    "type": "string",
                    "description": "The type of the PSU ID"
                  },
                  "psuCorporateId": {
                    "type": "string",
                    "description": "The ID of a customer (business ID / national ID)",
                    "minLength": 8,
                    "maxLength": 9,
                    "pattern": "^[0-9]+$"
                  },
                  "psuCorporateIdType": {
                    "type": "string",
                    "description": "The type of the corporate PSU ID"
                  }
                },
                "required": [
                  "providerId",
                  "connectionId",
                  "psuId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response - successfully handled process",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "A unique identifier for the connection"
                        },
                        "userId": {
                          "type": "string",
                          "description": "A unique identifier for the user"
                        },
                        "psuId": {
                          "type": "string",
                          "description": "The national id or passport number of the user"
                        },
                        "psuCorporateId": {
                          "type": "string",
                          "description": "The ID of a customer (business ID / national ID)"
                        },
                        "providerId": {
                          "type": "string",
                          "description": "A unique identifier for the provider"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "ACTIVE",
                            "CONNECTED",
                            "FETCHING",
                            "ERROR",
                            "FETCHING_ERROR",
                            "INACTIVE",
                            "COMPLETED",
                            "CREDENTIALS_ERROR",
                            "REJECTED",
                            "PARTIALLY_AUTHORIZED",
                            "REVOKED",
                            "REPLACED"
                          ],
                          "description": "The connection status"
                        },
                        "mode": {
                          "type": "string",
                          "enum": [
                            "PSD2"
                          ],
                          "description": "The connection mode, PSD2 is open banking"
                        },
                        "expiryDate": {
                          "type": "string",
                          "format": "date",
                          "description": "The date at which the connection/consent expires"
                        },
                        "accounts": {
                          "type": "number",
                          "description": "Number of checking accounts associated with the connection"
                        },
                        "cards": {
                          "type": "number",
                          "description": "Number of credit-cards associated with the connection"
                        },
                        "savings": {
                          "type": "number",
                          "description": "Number of savings accounts associated with the connection"
                        },
                        "loans": {
                          "type": "number",
                          "description": "Number of loans accounts associated with the connection"
                        },
                        "securities": {
                          "type": "number",
                          "description": "Number of security accounts associated with the connection"
                        },
                        "transactions": {
                          "type": "number",
                          "description": "Number of transactions associated with the connection"
                        },
                        "providerIds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "leumi",
                              "mizrahi",
                              "hapoalim",
                              "otsarHahayal",
                              "discount",
                              "beinleumi",
                              "yahav",
                              "union",
                              "masad",
                              "pagi",
                              "ubank",
                              "mercantile",
                              "jerusalem",
                              "pepper",
                              "digiBank"
                            ],
                            "description": "A unique identifier for the provider"
                          }
                        },
                        "includeFakeProviders": {
                          "type": "boolean",
                          "default": false,
                          "description": "If true, allow usage of dummy bank"
                        },
                        "callbackInformation": {
                          "type": "object",
                          "properties": {
                            "webhooks": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "If true, enable webhooks"
                                },
                                "successUrl": {
                                  "type": "string",
                                  "description": "The url endpoint for success events"
                                },
                                "failUrl": {
                                  "type": "string",
                                  "description": "The url endpoint for fail events"
                                },
                                "abortUrl": {
                                  "type": "string",
                                  "description": "The url endpoint for abort events"
                                },
                                "oauth": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Do we need to use oauth protocol to send requests to the webhook"
                                    },
                                    "clientId": {
                                      "type": "string"
                                    },
                                    "clientSecret": {
                                      "type": "string"
                                    },
                                    "audience": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "tokenUrl": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "refreshSettings": {
                          "type": "object",
                          "properties": {
                            "refreshData:": {
                              "type": "boolean",
                              "description": "If true, the connection will refresh TX data in the background"
                            },
                            "lastFetchedDataDate:": {
                              "type": "string",
                              "format": "date",
                              "description": "Last date at which TX's have been fetched"
                            }
                          }
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "Error message"
                            },
                            "type": {
                              "type": "string",
                              "description": "Error type"
                            }
                          }
                        },
                        "organization": {
                          "type": "string",
                          "description": "org Name"
                        },
                        "isFake": {
                          "type": "boolean",
                          "description": "If true, the connection is fake (for testing purposes, sandbox bank)"
                        },
                        "restrictedTo": {
                          "type": "array",
                          "description": "The restrictedTo object is used to define the permissions you want to give to the connection",
                          "items": {
                            "type": "string",
                            "enum": [
                              "CACC",
                              "CARD",
                              "LOAN",
                              "SVGS"
                            ]
                          }
                        },
                        "iframe": {
                          "type": "boolean",
                          "description": "indicates whether the consent joureny for this connection should display as iframe or not"
                        },
                        "access": {
                          "type": "object",
                          "description": "The access object is used to define the permissions you want to give to the connection",
                          "properties": {
                            "accounts": {
                              "type": "array",
                              "minItems": 0,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "iban": {
                                    "type": "string",
                                    "description": "The account iban number",
                                    "example": "IL123456789012345678901"
                                  },
                                  "bban": {
                                    "type": "string",
                                    "description": "The account bban number",
                                    "example": "10-944-50151142"
                                  }
                                }
                              }
                            },
                            "balances": {
                              "type": "array",
                              "minItems": 0,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "iban": {
                                    "type": "string",
                                    "description": "The account iban number",
                                    "example": "IL123456789012345678901"
                                  },
                                  "bban": {
                                    "type": "string",
                                    "description": "The account bban number",
                                    "example": "10-944-50151142"
                                  }
                                }
                              }
                            },
                            "transactions": {
                              "type": "array",
                              "minItems": 0,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "iban": {
                                    "type": "string",
                                    "description": "The account iban number",
                                    "example": "IL123456789012345678901"
                                  },
                                  "bban": {
                                    "type": "string",
                                    "description": "The account bban number",
                                    "example": "10-944-50151142"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "contactId": {
                          "type": "string",
                          "description": "The phone number of a contact created through an extended journey (like loans)"
                        },
                        "redirectUrl": {
                          "type": "string",
                          "description": "An optional URL to be redirected after a successful connection"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date",
                          "description": "The date from which transactions would be collected"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp in UTC when the connection was created"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp in UTC when the connection was last updated"
                        },
                        "scaOAuth": {
                          "type": "string",
                          "description": "URL for OAuth-based Strong Customer Authentication"
                        },
                        "verifier": {
                          "type": "string",
                          "description": "Verifier used for verifying the connection"
                        },
                        "lastFetchedDataDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Last date at which transactions have been fetched"
                        },
                        "allowBusiness": {
                          "type": "boolean",
                          "description": "Indicates if the connection allows business accounts"
                        },
                        "allowInsurance": {
                          "type": "boolean",
                          "description": "Indicates if the connection allows insurance-related data"
                        }
                      }
                    },
                    "scaOAuth": {
                      "description": "The link to the bank",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "the provider does not match the connection settings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "provider not found - providerId didn't match any provider"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/connect/open-banking-finalize": {
      "get": {
        "summary": "Finalize a connection to open banking",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "The code parameter (optional, can be empty string)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "description": "The state parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "description": "The error parameter (optional)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connectionId": {
                      "type": "string",
                      "description": "Unique identifier for the connection"
                    },
                    "connectionStatus": {
                      "type": "string",
                      "description": "Status of the connection (e.g., CONNECTED)"
                    },
                    "paymentStatus": {
                      "type": "string",
                      "description": "Status of the payment (e.g., ACTC)"
                    },
                    "orgId": {
                      "type": "string",
                      "description": "Organization identifier"
                    },
                    "userId": {
                      "type": "string",
                      "description": "User identifier"
                    },
                    "paymentId": {
                      "type": "string",
                      "description": "Payment identifier"
                    },
                    "token": {
                      "type": "string",
                      "description": "Token value"
                    },
                    "isIframe": {
                      "type": "boolean",
                      "description": "Indicates if the connection is using iframe"
                    },
                    "isPayment": {
                      "type": "boolean",
                      "description": "Indicates if finalizing a payment"
                    },
                    "psuId": {
                      "type": "string",
                      "description": "PSU (Payment Service User) identifier"
                    },
                    "redirectUrl": {
                      "type": "string",
                      "description": "The URL to redirect to after finalizing the connection"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "state is required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Not found - The route or resource were not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/payments": {
      "post": {
        "summary": "Create payment",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "create:payments"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "paymentInformation"
                ],
                "properties": {
                  "merchantId": {
                    "type": "string",
                    "description": "A unique identifier for the merchant, required if orgMerchantId is not configured."
                  },
                  "redirectUrl": {
                    "type": "string",
                    "description": "An optional url link to which the user will be redirected after the journey is done. If nothing is set than the url will be taken from the organization settings or the journey will just close"
                  },
                  "externalId": {
                    "type": "object",
                    "description": "An optional id that can be given to a payment"
                  },
                  "redirectFinalizePath": {
                    "type": "string",
                    "description": "An optional path that is appended to the tppRedirectUrl in open banking payments. During the finalize step of the payment process, the user will be redirected to this specified path instead of the Open-Finance URL."
                  },
                  "psuId": {
                    "type": "string",
                    "description": "The national id or passport number of the person paying",
                    "minLength": 5,
                    "maxLength": 9,
                    "pattern": "^[0-9]+$"
                  },
                  "psuCorporateId": {
                    "type": "string",
                    "description": "The ID of a customer (business ID / national ID)",
                    "minLength": 8,
                    "maxLength": 9,
                    "pattern": "^[0-9]+$"
                  },
                  "psuIdType": {
                    "type": "string"
                  },
                  "providerIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "yahav-sandbox",
                        "yahav",
                        "undefined",
                        "ubank-sandbox",
                        "ubank",
                        "pepper",
                        "pagi-sandbox",
                        "pagi",
                        "otsarHahayal-sandbox",
                        "otsarHahayal",
                        "open-finance-sandbox",
                        "open-finance-card-sandbox",
                        "mizrahi-sandbox",
                        "mizrahi",
                        "mercantile-sandbox",
                        "mercantile",
                        "menora-sandbox",
                        "max-sandbox",
                        "max",
                        "masad-sandbox",
                        "masad",
                        "leumi-sandbox",
                        "leumi",
                        "isracard-sandbox",
                        "isracard",
                        "hapoalim-sandbox",
                        "hapoalim",
                        "discount-sandbox",
                        "discount",
                        "cal-sandbox",
                        "cal",
                        "beinleumi-sandbox",
                        "beinleumi",
                        "americanExpress"
                      ],
                      "description": "Array of friendly bank IDs, the payment will be limited to the provided IDs, if none sent default will allow all providers"
                    }
                  },
                  "allowBusiness": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true this payment will allow business accounts"
                  },
                  "isBusiness": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true this payment will be only of business type"
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "he",
                      "en"
                    ],
                    "description": "The language to use in the consent journey, if not set the user will be able to choose the language"
                  },
                  "paymentProduct": {
                    "type": "string"
                  },
                  "paymentService": {
                    "type": "string",
                    "enum": [
                      "masav",
                      "fp",
                      "zahav"
                    ],
                    "description": "The type of the payment service"
                  },
                  "iframe": {
                    "type": "boolean",
                    "description": "indicates whether the payment journey would be displayed inside an iframe"
                  },
                  "directPayOnly": {
                    "type": "boolean",
                    "description": "Activates Direct Payment method, used to complete a payment without the need of an Open Banking connection"
                  },
                  "paymentInformation": {
                    "required": [
                      "amount",
                      "currency",
                      "description"
                    ],
                    "description": "The information of the payment. amount, currency and description are required.",
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "description": "The amount of the payment"
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency of the payment"
                      },
                      "description": {
                        "type": "string",
                        "description": "the description of the payment"
                      },
                      "creditorAccountType": {
                        "type": "string",
                        "description": "The type of the account number of the creditor",
                        "enum": [
                          "bban",
                          "iban"
                        ]
                      },
                      "creditorAccountNumber": {
                        "type": "string",
                        "description": "The account number of the creditor. Must be in bban format if creditorAccountType is bban, and in iban format if creditorAccountType is iban. Example of bban: '10-944-50151142'. Example of iban: 'IL123456789012345678901'"
                      },
                      "debtorAccountType": {
                        "type": "string",
                        "description": "The type of the account number of the debtor",
                        "enum": [
                          "bban",
                          "iban"
                        ]
                      },
                      "debtorAccountNumber": {
                        "type": "string",
                        "description": "The account number of the debtor. Must be in bban format if debtorAccountType is bban, and in iban format if debtorAccountType is iban. Example of bban: '10-944-50151142'. Example of iban: 'IL123456789012345678901'"
                      },
                      "creditorName": {
                        "type": "string",
                        "description": "The name of the creditor"
                      }
                    }
                  },
                  "callbackInformation": {
                    "type": "object",
                    "description": "Information regarding callbacks and webhooks for the payment",
                    "properties": {
                      "webhooks": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "Indicates if webhooks are enabled"
                          },
                          "successUrl": {
                            "type": "string",
                            "description": "URL to be called upon successful payment"
                          },
                          "failUrl": {
                            "type": "string",
                            "description": "URL to be called upon failed payment"
                          },
                          "oauth": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Indicates if OAuth is enabled"
                              },
                              "clientId": {
                                "type": "string",
                                "description": "OAuth client ID"
                              },
                              "clientSecret": {
                                "type": "string",
                                "description": "OAuth client secret"
                              },
                              "audience": {
                                "type": "string",
                                "description": "OAuth audience"
                              },
                              "scope": {
                                "type": "string",
                                "description": "OAuth scope"
                              },
                              "tokenUrl": {
                                "type": "string",
                                "description": "OAuth token URL"
                              }
                            }
                          },
                          "customHeaders": {
                            "type": "object",
                            "description": "Custom headers to include in the callback",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "A unique identifier for the payment"
                    },
                    "connectUrl": {
                      "type": "string",
                      "description": "A link forwarding the end-user to the payment journey"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Possible validation errors or missing required fields.",
            "content": {
              "application/json": {
                "examples": {
                  "MissingFields": {
                    "summary": "Missing required fields",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "[\"clientSecret is required\"]"
                    }
                  },
                  "InvalidPaymentInfo": {
                    "summary": "Invalid payment information",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "[\"paymentInformation is required\"]"
                    }
                  },
                  "MissingMerchantOrCreditor": {
                    "summary": "Merchant ID or creditor information required",
                    "value": {
                      "type": "VALIDATION_ERROR",
                      "message": "Merchant Id or creditor info is required"
                    }
                  },
                  "IncludeFakeProviders": {
                    "summary": "Include fake providers or contact us",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Production access is not enabled for this organization, you must include fake providers or contact us"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing access token",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "summary": "Unauthorized access",
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access token missing required permissions"
          },
          "404": {
            "description": "Not found - Merchant or token-related issues",
            "content": {
              "application/json": {
                "examples": {
                  "InvalidToken": {
                    "summary": "Invalid token",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Invalid token"
                    }
                  },
                  "MerchantNotFound": {
                    "summary": "Merchant not found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Merchant not found in db"
                    }
                  },
                  "PaymentNotFound": {
                    "summary": "Payment not found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Payment not found with this id"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "ServerError": {
                    "summary": "Unexpected server error",
                    "value": {
                      "type": "INTERNAL_ERROR",
                      "message": "An unexpected server error has occurred"
                    }
                  },
                  "ProviderError": {
                    "summary": "Provider error",
                    "value": {
                      "type": "INTERNAL_ERROR",
                      "message": "SERVER_ERROR"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get payments by user",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:payments"
            ]
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of documents to retrieve",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "1 for ascending, -1 for descending",
            "schema": {
              "type": "number",
              "enum": [
                1,
                -1
              ]
            }
          },
          {
            "name": "nextPage",
            "in": "query",
            "required": false,
            "description": "page to retrieve, used for pagination",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPage": {
                      "type": "string",
                      "nullable": true,
                      "description": "Represents the total number of items that exists after full pagination"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "A unique identifier for the payment"
                          },
                          "userId": {
                            "type": "string",
                            "description": "A unique identifier for the user"
                          },
                          "isBusiness": {
                            "type": "boolean",
                            "description": "If true this payment will be only of business type"
                          },
                          "language": {
                            "type": "string",
                            "description": "The language to use in the consent journey, if not set the user will be able to choose the language"
                          },
                          "providerId": {
                            "type": "string",
                            "description": "A unique identifier for the provider"
                          },
                          "providerIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "leumi",
                                "mizrahi",
                                "hapoalim",
                                "otsarHahayal",
                                "discount",
                                "beinleumi",
                                "yahav",
                                "union",
                                "masad",
                                "pagi",
                                "ubank",
                                "mercantile",
                                "jerusalem",
                                "pepper",
                                "digiBank"
                              ],
                              "description": "The allowed providers for the payment"
                            }
                          },
                          "merchantId": {
                            "type": "string",
                            "description": "A unique identifier for the merchant"
                          },
                          "orgId": {
                            "type": "string",
                            "description": "A unique identifier for the organization"
                          },
                          "psuId": {
                            "type": "string",
                            "description": "The national id or passport number of the person who is paying"
                          },
                          "psuIdType": {
                            "type": "string"
                          },
                          "psuCorporateId": {
                            "type": "string",
                            "description": "The corporate id of the debtor"
                          },
                          "psuCorporateIdType": {
                            "type": "string"
                          },
                          "service": {
                            "type": "string",
                            "enum": [
                              "masav",
                              "fp",
                              "zahav"
                            ],
                            "description": "The type of the payment service"
                          },
                          "product": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number",
                            "description": "The amount of the payment"
                          },
                          "currency": {
                            "type": "string",
                            "description": "The currency of the payment"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the payment",
                            "enum": [
                              "ACCC",
                              "ACSC",
                              "ACSP",
                              "ACTC",
                              "ACWC",
                              "RCVD",
                              "RJCT",
                              "CANC",
                              "ACFC",
                              "PATC",
                              "PART",
                              "PENDING",
                              "ERROR",
                              "INIT"
                            ]
                          },
                          "creditorAccountType": {
                            "type": "string",
                            "description": "The type of the acount number of the creditor",
                            "enum": [
                              "bban",
                              "iban"
                            ]
                          },
                          "creditorAccountNumber": {
                            "type": "string",
                            "description": "The account number of the creditor"
                          },
                          "debtorAccountType": {
                            "type": "string",
                            "description": "The type of the acount number of the debtor",
                            "enum": [
                              "bban",
                              "iban"
                            ]
                          },
                          "debtorAccountNumber": {
                            "type": "string",
                            "description": "The account number of the debtor"
                          },
                          "creditorName": {
                            "type": "string",
                            "description": "The name of the creditor"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the payment"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Error message"
                              },
                              "type": {
                                "type": "string",
                                "description": "Error type"
                              }
                            }
                          },
                          "isFake": {
                            "type": "boolean",
                            "description": "Indicates whether the payment is connected to a sandbox provider"
                          },
                          "authorizationMessage": {
                            "type": "string"
                          },
                          "scaStatus": {
                            "type": "string"
                          },
                          "psuMessage": {
                            "type": "string"
                          },
                          "directPayOnly": {
                            "type": "boolean",
                            "description": "Indicates whether the payment is a direct payment without an open banking consent"
                          },
                          "isIframe": {
                            "type": "boolean",
                            "description": "Indicates whether the payment journey will be displayed inside an iframe"
                          },
                          "allowBusiness": {
                            "type": "boolean",
                            "description": "Indicates whether the payment allows business accounts"
                          },
                          "redirectUrl": {
                            "type": "string",
                            "description": "The URL to which the user will be redirected after the payment is completed"
                          },
                          "providerIdentifier": {
                            "type": "string",
                            "description": "A unique identifier for the provider"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp in UTC when the payment was created"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp in UTC when the payment was updated"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "orgId was not provided"
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to perform this action"
          },
          "404": {
            "description": "Route or entities were not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/payments/sandbox/{paymentId}": {
      "patch": {
        "summary": "Update sandbox payment status",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "create:payments"
            ]
          }
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the payment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The new status to update",
                    "enum": [
                      "ACCC",
                      "ACSC",
                      "ACSP",
                      "ACTC",
                      "ACWC",
                      "RCVD",
                      "RJCT",
                      "CANC",
                      "ACFC",
                      "PATC",
                      "PART",
                      "PENDING",
                      "ERROR",
                      "INIT"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "A unique identifier for the payment"
                    },
                    "userId": {
                      "type": "string",
                      "description": "A unique identifier for the user"
                    },
                    "isBusiness": {
                      "type": "boolean",
                      "description": "If true this payment will be only of business type"
                    },
                    "language": {
                      "type": "string",
                      "description": "The language to use in the consent journey, if not set the user will be able to choose the language"
                    },
                    "providerId": {
                      "type": "string",
                      "description": "A unique identifier for the provider"
                    },
                    "providerIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "leumi",
                          "mizrahi",
                          "hapoalim",
                          "otsarHahayal",
                          "discount",
                          "beinleumi",
                          "yahav",
                          "union",
                          "masad",
                          "pagi",
                          "ubank",
                          "mercantile",
                          "jerusalem",
                          "pepper",
                          "digiBank"
                        ],
                        "description": "The allowed providers for the payment"
                      }
                    },
                    "merchantId": {
                      "type": "string",
                      "description": "A unique identifier for the merchant"
                    },
                    "orgId": {
                      "type": "string",
                      "description": "A unique identifier for the organization"
                    },
                    "psuId": {
                      "type": "string",
                      "description": "The national id or passport number of the person who is paying"
                    },
                    "psuIdType": {
                      "type": "string"
                    },
                    "psuCorporateId": {
                      "type": "string",
                      "description": "The corporate id of the debtor"
                    },
                    "psuCorporateIdType": {
                      "type": "string"
                    },
                    "service": {
                      "type": "string",
                      "enum": [
                        "masav",
                        "fp",
                        "zahav"
                      ],
                      "description": "The type of the payment service"
                    },
                    "product": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number",
                      "description": "The amount of the payment"
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency of the payment"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the payment",
                      "enum": [
                        "ACCC",
                        "ACSC",
                        "ACSP",
                        "ACTC",
                        "ACWC",
                        "RCVD",
                        "RJCT",
                        "CANC",
                        "ACFC",
                        "PATC",
                        "PART",
                        "PENDING",
                        "ERROR",
                        "INIT"
                      ]
                    },
                    "creditorAccountType": {
                      "type": "string",
                      "description": "The type of the acount number of the creditor",
                      "enum": [
                        "bban",
                        "iban"
                      ]
                    },
                    "creditorAccountNumber": {
                      "type": "string",
                      "description": "The account number of the creditor"
                    },
                    "debtorAccountType": {
                      "type": "string",
                      "description": "The type of the acount number of the debtor",
                      "enum": [
                        "bban",
                        "iban"
                      ]
                    },
                    "debtorAccountNumber": {
                      "type": "string",
                      "description": "The account number of the debtor"
                    },
                    "creditorName": {
                      "type": "string",
                      "description": "The name of the creditor"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the payment"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Error message"
                        },
                        "type": {
                          "type": "string",
                          "description": "Error type"
                        }
                      }
                    },
                    "isFake": {
                      "type": "boolean",
                      "description": "Indicates whether the payment is connected to a sandbox provider"
                    },
                    "authorizationMessage": {
                      "type": "string"
                    },
                    "scaStatus": {
                      "type": "string"
                    },
                    "psuMessage": {
                      "type": "string"
                    },
                    "directPayOnly": {
                      "type": "boolean",
                      "description": "Indicates whether the payment is a direct payment without an open banking consent"
                    },
                    "isIframe": {
                      "type": "boolean",
                      "description": "Indicates whether the payment journey will be displayed inside an iframe"
                    },
                    "allowBusiness": {
                      "type": "boolean",
                      "description": "Indicates whether the payment allows business accounts"
                    },
                    "redirectUrl": {
                      "type": "string",
                      "description": "The URL to which the user will be redirected after the payment is completed"
                    },
                    "providerIdentifier": {
                      "type": "string",
                      "description": "A unique identifier for the provider"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp in UTC when the payment was created"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp in UTC when the payment was updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Possible validation errors or missing required fields.",
            "content": {
              "application/json": {
                "examples": {
                  "MissingFields": {
                    "summary": "Missing required fields",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "[\"clientSecret is required\"]"
                    }
                  },
                  "InvalidPaymentInfo": {
                    "summary": "Invalid payment information",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "[\"paymentInformation is required\"]"
                    }
                  },
                  "MissingMerchantOrCreditor": {
                    "summary": "Merchant ID or creditor information required",
                    "value": {
                      "type": "VALIDATION_ERROR",
                      "message": "Merchant Id or creditor info is required"
                    }
                  },
                  "IncludeFakeProviders": {
                    "summary": "Include fake providers or contact us",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Production access is not enabled for this organization, you must include fake providers or contact us"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing access token",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "summary": "Unauthorized access",
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access token missing required permissions"
          },
          "404": {
            "description": "Not found - Merchant or token-related issues",
            "content": {
              "application/json": {
                "examples": {
                  "InvalidToken": {
                    "summary": "Invalid token",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Invalid token"
                    }
                  },
                  "MerchantNotFound": {
                    "summary": "Merchant not found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Merchant not found in db"
                    }
                  },
                  "PaymentNotFound": {
                    "summary": "Payment not found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Payment not found with this id"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "ServerError": {
                    "summary": "Unexpected server error",
                    "value": {
                      "type": "INTERNAL_ERROR",
                      "message": "An unexpected server error has occurred"
                    }
                  },
                  "ProviderError": {
                    "summary": "Provider error",
                    "value": {
                      "type": "INTERNAL_ERROR",
                      "message": "SERVER_ERROR"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payments/{paymentId}": {
      "get": {
        "summary": "Get payment by ID",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:payments"
            ]
          }
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the payment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "A unique identifier for the payment"
                    },
                    "userId": {
                      "type": "string",
                      "description": "A unique identifier for the user"
                    },
                    "isBusiness": {
                      "type": "boolean",
                      "description": "If true this payment will be only of business type"
                    },
                    "language": {
                      "type": "string",
                      "description": "The language to use in the consent journey, if not set the user will be able to choose the language"
                    },
                    "providerId": {
                      "type": "string",
                      "description": "A unique identifier for the provider"
                    },
                    "providerIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "leumi",
                          "mizrahi",
                          "hapoalim",
                          "otsarHahayal",
                          "discount",
                          "beinleumi",
                          "yahav",
                          "union",
                          "masad",
                          "pagi",
                          "ubank",
                          "mercantile",
                          "jerusalem",
                          "pepper",
                          "digiBank"
                        ],
                        "description": "The allowed providers for the payment"
                      }
                    },
                    "merchantId": {
                      "type": "string",
                      "description": "A unique identifier for the merchant"
                    },
                    "orgId": {
                      "type": "string",
                      "description": "A unique identifier for the organization"
                    },
                    "psuId": {
                      "type": "string",
                      "description": "The national id or passport number of the person who is paying"
                    },
                    "psuIdType": {
                      "type": "string"
                    },
                    "psuCorporateId": {
                      "type": "string",
                      "description": "The corporate id of the debtor"
                    },
                    "psuCorporateIdType": {
                      "type": "string"
                    },
                    "service": {
                      "type": "string",
                      "enum": [
                        "masav",
                        "fp",
                        "zahav"
                      ],
                      "description": "The type of the payment service"
                    },
                    "product": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number",
                      "description": "The amount of the payment"
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency of the payment"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the payment",
                      "enum": [
                        "ACCC",
                        "ACSC",
                        "ACSP",
                        "ACTC",
                        "ACWC",
                        "RCVD",
                        "RJCT",
                        "CANC",
                        "ACFC",
                        "PATC",
                        "PART",
                        "PENDING",
                        "ERROR",
                        "INIT"
                      ]
                    },
                    "creditorAccountType": {
                      "type": "string",
                      "description": "The type of the acount number of the creditor",
                      "enum": [
                        "bban",
                        "iban"
                      ]
                    },
                    "creditorAccountNumber": {
                      "type": "string",
                      "description": "The account number of the creditor"
                    },
                    "debtorAccountType": {
                      "type": "string",
                      "description": "The type of the acount number of the debtor",
                      "enum": [
                        "bban",
                        "iban"
                      ]
                    },
                    "debtorAccountNumber": {
                      "type": "string",
                      "description": "The account number of the debtor"
                    },
                    "creditorName": {
                      "type": "string",
                      "description": "The name of the creditor"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the payment"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Error message"
                        },
                        "type": {
                          "type": "string",
                          "description": "Error type"
                        }
                      }
                    },
                    "isFake": {
                      "type": "boolean",
                      "description": "Indicates whether the payment is connected to a sandbox provider"
                    },
                    "authorizationMessage": {
                      "type": "string"
                    },
                    "scaStatus": {
                      "type": "string"
                    },
                    "psuMessage": {
                      "type": "string"
                    },
                    "directPayOnly": {
                      "type": "boolean",
                      "description": "Indicates whether the payment is a direct payment without an open banking consent"
                    },
                    "isIframe": {
                      "type": "boolean",
                      "description": "Indicates whether the payment journey will be displayed inside an iframe"
                    },
                    "allowBusiness": {
                      "type": "boolean",
                      "description": "Indicates whether the payment allows business accounts"
                    },
                    "redirectUrl": {
                      "type": "string",
                      "description": "The URL to which the user will be redirected after the payment is completed"
                    },
                    "providerIdentifier": {
                      "type": "string",
                      "description": "A unique identifier for the provider"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp in UTC when the payment was created"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp in UTC when the payment was updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing orgId or invalid request",
            "content": {
              "application/json": {
                "examples": {
                  "MissingOrgId": {
                    "summary": "Missing orgId",
                    "value": {
                      "type": "VALIDATION_ERROR",
                      "message": "orgId was not provided"
                    }
                  },
                  "InvalidPaymentId": {
                    "summary": "Invalid paymentId",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Payment ID is not valid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing access token",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "summary": "Unauthorized access",
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access token missing required permissions"
          },
          "404": {
            "description": "Not found - Payment or provider not found",
            "content": {
              "application/json": {
                "examples": {
                  "PaymentNotFound": {
                    "summary": "Payment not found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "No payment was found"
                    }
                  },
                  "ProviderNotFound": {
                    "summary": "Provider not found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "provider not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "ServerError": {
                    "summary": "Unexpected server error",
                    "value": {
                      "type": "INTERNAL_ERROR",
                      "message": "An unexpected server error has occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/data/extended-securities": {
      "get": {
        "summary": "Get the list of positions and orders with extra information",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:extended-securities"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "positions": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "financialInstrument": {
                              "type": "object",
                              "properties": {
                                "isin": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "normalisedPrice": {
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "The amount value",
                                          "example": 11
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    },
                                    "priceDateTime": {
                                      "type": "string"
                                    },
                                    "priceType": {
                                      "type": "string",
                                      "enum": [
                                        "BIDE",
                                        "OFFR",
                                        "NAVL",
                                        "CREA",
                                        "CANC",
                                        "INTE",
                                        "SWNG",
                                        "MIDD",
                                        "RINV",
                                        "SWIC",
                                        "MRKT",
                                        "INDC",
                                        "DDVR",
                                        "ACTU"
                                      ]
                                    },
                                    "sourceOfPrice": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "FUND",
                                            "LMAR",
                                            "THEO",
                                            "VEND"
                                          ]
                                        },
                                        "mic": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "unitsNumber": {
                                  "type": "number"
                                },
                                "balanceType": {
                                  "type": "string",
                                  "enum": [
                                    "AVAI",
                                    "AWAS",
                                    "BTRA",
                                    "BLOK",
                                    "BLOV",
                                    "BLCA",
                                    "BLOT",
                                    "BORR",
                                    "COLI",
                                    "COLO",
                                    "MARG",
                                    "DRAW",
                                    "COLA",
                                    "TRAN",
                                    "ISSU",
                                    "DIRT",
                                    "LOAN",
                                    "REGO",
                                    "BODE",
                                    "BORE",
                                    "PEDA",
                                    "PECA",
                                    "PEND",
                                    "PDMT",
                                    "PDUM",
                                    "LODE",
                                    "LORE",
                                    "PENR",
                                    "PRMT",
                                    "PRUM",
                                    "PLED",
                                    "QUAS",
                                    "NOMI",
                                    "RSTR",
                                    "SPOS",
                                    "CLEN",
                                    "OTHR",
                                    "UNRG",
                                    "WDOC"
                                  ]
                                },
                                "averageBuyingPrice": {
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "type": "number",
                                      "description": "The amount value",
                                      "example": 11
                                    },
                                    "currency": {
                                      "type": "string",
                                      "description": "The amount currency",
                                      "example": "ILS"
                                    }
                                  }
                                },
                                "details": {
                                  "type": "string",
                                  "properties": {
                                    "symbol": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "description": "Financial instrument that was transferred within the transaction."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "providerId": {
                              "type": "string"
                            },
                            "currentPrice": {
                              "type": "integer"
                            },
                            "positionValue": {
                              "type": "integer"
                            },
                            "symbol": {
                              "type": "string"
                            },
                            "securityId": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    },
                    "totalPositionsValue": {
                      "type": "integer"
                    },
                    "orders": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "orderId": {
                              "type": "string"
                            },
                            "side": {
                              "type": "string",
                              "enum": [
                                "buy",
                                "sell",
                                "subscription",
                                "redemption"
                              ]
                            },
                            "financialInstrument": {
                              "type": "object",
                              "properties": {
                                "isin": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "unitsNumber": {
                              "type": "string"
                            },
                            "orderStatus": {
                              "type": "string",
                              "enum": [
                                "unknown",
                                "new",
                                "partiallyFilled",
                                "filled",
                                "doneForDay",
                                "canceled",
                                "replaced",
                                "pendingCancel",
                                "stopped",
                                "rejected",
                                "suspended",
                                "pendingNew",
                                "calculated",
                                "expired",
                                "acceptedForBidding",
                                "pendingReplace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "providerId": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "orgId was not provided"
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to perform this action"
          },
          "404": {
            "description": "Not found - payment not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/payments/{paymentId}/status": {
      "get": {
        "summary": "Get payment status",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:payments"
            ]
          }
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the payment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "A unique identifier for the payment"
                    },
                    "userId": {
                      "type": "string",
                      "description": "A unique identifier for the user"
                    },
                    "isBusiness": {
                      "type": "boolean",
                      "description": "If true this payment will be only of business type"
                    },
                    "language": {
                      "type": "string",
                      "description": "The language to use in the consent journey, if not set the user will be able to choose the language"
                    },
                    "providerId": {
                      "type": "string",
                      "description": "A unique identifier for the provider"
                    },
                    "providerIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "leumi",
                          "mizrahi",
                          "hapoalim",
                          "otsarHahayal",
                          "discount",
                          "beinleumi",
                          "yahav",
                          "union",
                          "masad",
                          "pagi",
                          "ubank",
                          "mercantile",
                          "jerusalem",
                          "pepper",
                          "digiBank"
                        ],
                        "description": "The allowed providers for the payment"
                      }
                    },
                    "merchantId": {
                      "type": "string",
                      "description": "A unique identifier for the merchant"
                    },
                    "orgId": {
                      "type": "string",
                      "description": "A unique identifier for the organization"
                    },
                    "psuId": {
                      "type": "string",
                      "description": "The national id or passport number of the person who is paying"
                    },
                    "psuIdType": {
                      "type": "string"
                    },
                    "psuCorporateId": {
                      "type": "string",
                      "description": "The corporate id of the debtor"
                    },
                    "psuCorporateIdType": {
                      "type": "string"
                    },
                    "service": {
                      "type": "string",
                      "enum": [
                        "masav",
                        "fp",
                        "zahav"
                      ],
                      "description": "The type of the payment service"
                    },
                    "product": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number",
                      "description": "The amount of the payment"
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency of the payment"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the payment",
                      "enum": [
                        "ACCC",
                        "ACSC",
                        "ACSP",
                        "ACTC",
                        "ACWC",
                        "RCVD",
                        "RJCT",
                        "CANC",
                        "ACFC",
                        "PATC",
                        "PART",
                        "PENDING",
                        "ERROR",
                        "INIT"
                      ]
                    },
                    "creditorAccountType": {
                      "type": "string",
                      "description": "The type of the acount number of the creditor",
                      "enum": [
                        "bban",
                        "iban"
                      ]
                    },
                    "creditorAccountNumber": {
                      "type": "string",
                      "description": "The account number of the creditor"
                    },
                    "debtorAccountType": {
                      "type": "string",
                      "description": "The type of the acount number of the debtor",
                      "enum": [
                        "bban",
                        "iban"
                      ]
                    },
                    "debtorAccountNumber": {
                      "type": "string",
                      "description": "The account number of the debtor"
                    },
                    "creditorName": {
                      "type": "string",
                      "description": "The name of the creditor"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the payment"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Error message"
                        },
                        "type": {
                          "type": "string",
                          "description": "Error type"
                        }
                      }
                    },
                    "isFake": {
                      "type": "boolean",
                      "description": "Indicates whether the payment is connected to a sandbox provider"
                    },
                    "authorizationMessage": {
                      "type": "string"
                    },
                    "scaStatus": {
                      "type": "string"
                    },
                    "psuMessage": {
                      "type": "string"
                    },
                    "directPayOnly": {
                      "type": "boolean",
                      "description": "Indicates whether the payment is a direct payment without an open banking consent"
                    },
                    "isIframe": {
                      "type": "boolean",
                      "description": "Indicates whether the payment journey will be displayed inside an iframe"
                    },
                    "allowBusiness": {
                      "type": "boolean",
                      "description": "Indicates whether the payment allows business accounts"
                    },
                    "redirectUrl": {
                      "type": "string",
                      "description": "The URL to which the user will be redirected after the payment is completed"
                    },
                    "providerIdentifier": {
                      "type": "string",
                      "description": "A unique identifier for the provider"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp in UTC when the payment was created"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp in UTC when the payment was updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Possible validation or client errors",
            "content": {
              "application/json": {
                "examples": {
                  "MissingProviderId": {
                    "summary": "Payment missing providerId",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Payment is missing providerId"
                    }
                  },
                  "PaymentNotFound": {
                    "summary": "No payment found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "No payment was found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing access token",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "summary": "Unauthorized access",
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access token missing required permissions"
          },
          "404": {
            "description": "Not found - Payment or provider not found",
            "content": {
              "application/json": {
                "examples": {
                  "PaymentNotFound": {
                    "summary": "Payment not found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "No payment was found"
                    }
                  },
                  "ProviderNotFound": {
                    "summary": "Provider not found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "provider not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "ProviderStatusError": {
                    "summary": "Provider status error",
                    "value": {
                      "type": "INTERNAL_SERVER_ERROR",
                      "message": "status from provider was not found, response.body: {body}"
                    }
                  },
                  "ServerError": {
                    "summary": "Unexpected server error",
                    "value": {
                      "type": "INTERNAL_ERROR",
                      "message": "An unexpected server error has occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pay/open-banking-init": {
      "post": {
        "summary": "Initiate a payment with a provider",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "create:peyments"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "paymentInformation",
                  "providerId"
                ],
                "properties": {
                  "psuId": {
                    "type": "string",
                    "description": "national id or passport number of the end-user",
                    "minLength": 5,
                    "maxLength": 9,
                    "pattern": "^[0-9]+$"
                  },
                  "psuCorporateId": {
                    "type": "string",
                    "description": "The business ID of a customer (business incorporation id)",
                    "minLength": 8,
                    "maxLength": 9,
                    "pattern": "^[0-9]+$"
                  },
                  "redirectFinalizePath": {
                    "type": "string",
                    "description": "An optional path that is appended to the tppRedirectUrl in open banking payments. During the finalize step of the payment process, the user will be redirected to this specified path instead of the Open-Finance URL."
                  },
                  "includeFakeProviders": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, this payment can be used for testing purposes vs. a fake bank provider"
                  },
                  "psuIdType": {
                    "type": "string"
                  },
                  "providerId": {
                    "type": "string",
                    "description": "A unique identifier for the provider",
                    "enum": [
                      "yahav-sandbox",
                      "yahav",
                      "undefined",
                      "ubank-sandbox",
                      "ubank",
                      "pepper",
                      "pagi-sandbox",
                      "pagi",
                      "otsarHahayal-sandbox",
                      "otsarHahayal",
                      "open-finance-sandbox",
                      "open-finance-card-sandbox",
                      "mizrahi-sandbox",
                      "mizrahi",
                      "mercantile-sandbox",
                      "mercantile",
                      "menora-sandbox",
                      "max-sandbox",
                      "max",
                      "masad-sandbox",
                      "masad",
                      "leumi-sandbox",
                      "leumi",
                      "isracard-sandbox",
                      "isracard",
                      "hapoalim-sandbox",
                      "hapoalim",
                      "discount-sandbox",
                      "discount",
                      "cal-sandbox",
                      "cal",
                      "beinleumi-sandbox",
                      "beinleumi",
                      "americanExpress"
                    ]
                  },
                  "paymentId": {
                    "type": "string",
                    "description": "If a payment was created before via the create-payment route you can specify its id here"
                  },
                  "paymentProduct": {
                    "type": "string"
                  },
                  "paymentService": {
                    "type": "string",
                    "enum": [
                      "masav",
                      "fp",
                      "zahav"
                    ],
                    "description": "The type of the payment service"
                  },
                  "paymentInformation": {
                    "type": "object",
                    "required": [
                      "amount",
                      "currency",
                      "description"
                    ],
                    "description": "The information of the payment",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "description": "The amount of the payment"
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency of the payment"
                      },
                      "description": {
                        "type": "string",
                        "description": "the description of the payment"
                      },
                      "creditorAccountType": {
                        "type": "string",
                        "description": "The type of the account number of the creditor",
                        "enum": [
                          "bban",
                          "iban"
                        ]
                      },
                      "creditorAccountNumber": {
                        "type": "string",
                        "description": "The account number of the creditor. Must be in bban format if creditorAccountType is bban, and in iban format if creditorAccountType is iban. Example of bban: '10-944-50151142'. Example of iban: 'IL123456789012345678901'"
                      },
                      "debtorAccountType": {
                        "type": "string",
                        "description": "The type of the account number of the debtor",
                        "enum": [
                          "bban",
                          "iban"
                        ]
                      },
                      "debtorAccountNumber": {
                        "type": "string",
                        "description": "The account number of the debtor. Must be in bban format if debtorAccountType is bban, and in iban format if debtorAccountType is iban. Example of bban: '10-944-50151142'. Example of iban: 'IL123456789012345678901'"
                      },
                      "creditorName": {
                        "type": "string",
                        "description": "The name of the creditor"
                      }
                    }
                  },
                  "redirectUrl": {
                    "type": "string",
                    "description": "The URL to which the user will be redirected after the payment is completed"
                  },
                  "merchantId": {
                    "type": "string",
                    "description": "A unique identifier for the merchant"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment was initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentId": {
                      "type": "string",
                      "description": "A unique identifier of the new payment"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the payment",
                      "enum": [
                        "ACCC",
                        "ACSC",
                        "ACSP",
                        "ACTC",
                        "ACWC",
                        "RCVD",
                        "RJCT",
                        "CANC",
                        "ACFC",
                        "PATC",
                        "PART",
                        "PENDING",
                        "ERROR",
                        "INIT"
                      ]
                    },
                    "scaOAuth": {
                      "type": "string",
                      "description": "The url forwarding the user to the provider to complete the payment"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be processed due to multiple possible reasons.",
            "content": {
              "application/json": {
                "examples": {
                  "InvalidToken": {
                    "summary": "Invalid token",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Invalid token"
                    }
                  },
                  "MissingPaymentInfo": {
                    "summary": "Needs to provide paymentId or new payment info",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Needs to provide paymentId or new payment info"
                    }
                  },
                  "InvalidProvider": {
                    "summary": "Invalid provider",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Invalid provider"
                    }
                  },
                  "MissingDebtorOrCreditor": {
                    "summary": "Missing debtor or creditor information",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Missing debtor or credit info"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid or missing access token",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "summary": "Unauthorized access",
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions"
          },
          "404": {
            "description": "Not found - Payment or provider not found",
            "content": {
              "application/json": {
                "examples": {
                  "PaymentNotFound": {
                    "summary": "Payment not found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Payment not found with this id"
                    }
                  },
                  "ProviderNotFound": {
                    "summary": "Provider not found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "provider not found"
                    }
                  },
                  "MerchantNotFound": {
                    "summary": "Merchant not found",
                    "value": {
                      "type": "CLIENT_ERROR",
                      "message": "Merchant not found in db"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "ProviderError": {
                    "summary": "Provider error",
                    "value": {
                      "type": "INTERNAL_ERROR",
                      "message": "PROVIDER_ERROR"
                    }
                  },
                  "ServerError": {
                    "summary": "Unexpected server error",
                    "value": {
                      "type": "INTERNAL_ERROR",
                      "message": "An unexpected server error has occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/atm/generate": {
      "post": {
        "summary": "Generates an ATM code for a specified payment",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:payments"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "atmId": {
                    "type": "string",
                    "description": "The unique identifier for the ATM"
                  },
                  "paymentId": {
                    "type": "string",
                    "description": "The unique identifier for the payment transaction"
                  }
                },
                "required": [
                  "atmId",
                  "paymentId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ATM code generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "atmCode": {
                      "type": "string",
                      "description": "The generated ATM code"
                    },
                    "paymentId": {
                      "type": "string",
                      "description": "The unique identifier for the payment transaction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Payment is not in a successful status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Payment not found or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/atm/verify": {
      "post": {
        "summary": "Verifies an ATM code",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:payments"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "atmId": {
                    "type": "string",
                    "description": "The unique identifier for the ATM"
                  },
                  "atmCode": {
                    "type": "string",
                    "description": "The ATM code to be verified"
                  },
                  "amount": {
                    "type": "string",
                    "description": "The amount associated with the ATM code"
                  },
                  "atmDate": {
                    "type": "string",
                    "format": "DD-MM-YYYY",
                    "description": "The date and time the ATM code was generated"
                  }
                },
                "required": [
                  "atmId",
                  "atmCode",
                  "amount",
                  "atmDate"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Valid Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dateTime": {
                      "type": "string",
                      "format": "DD-MM-YYYYTHH:mm:ss"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ATM code not found or is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "ATM code not found or is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/financial-report/{customerId}": {
      "post": {
        "summary": "Create a financial report to a customer",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:connections"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the customer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The report is being created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobId": {
                      "type": "string",
                      "description": "The jobId to refrence when checking if the report is done"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error getting financial report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/financial-report/{jobId}": {
      "get": {
        "summary": "Get a financial report by jobId",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:connections"
            ]
          }
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the job",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response for getting a report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "financialReport": {
                      "type": "object",
                      "properties": {
                        "customerId": {
                          "type": "string"
                        },
                        "ownerName": {
                          "type": "string"
                        },
                        "parsedAccountNumber": {
                          "type": "string"
                        },
                        "providerId": {
                          "type": "string"
                        },
                        "currentDate": {
                          "type": "string"
                        },
                        "connectedFinancialResources": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ownerName": {
                                "type": "string"
                              },
                              "parsedAccountNumber": {
                                "type": "string"
                              },
                              "providerId": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "checkingAccountsILS": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "customerId": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "providerId": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "checkingAccounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "customerId": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "providerId": {
                                "type": "string"
                              },
                              "accountNumber": {
                                "type": "string"
                              },
                              "accountId": {
                                "type": "string"
                              },
                              "currency": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "yearMonthBalance": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "yearMonth": {
                                "type": "string"
                              },
                              "sumIncome": {
                                "type": "number"
                              },
                              "sumExpense": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "totalIncomesOutcome": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "format": "date"
                            },
                            "customerId": {
                              "type": "string"
                            },
                            "sumIncomePerMonth": {
                              "type": "number"
                            },
                            "sumExpansesPerMonth": {
                              "type": "number"
                            },
                            "sumNetIncomePerMonth": {
                              "type": "number"
                            },
                            "regularIncomeSources": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "classificationSource": {
                                    "type": "string"
                                  },
                                  "amount": {
                                    "type": "number"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "balancesPerDays": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "accountId": {
                                "type": "string"
                              },
                              "customerId": {
                                "type": "string"
                              },
                              "adjustedProvider": {
                                "type": "string"
                              },
                              "date": {
                                "type": "string"
                              },
                              "adjustedAccountNumber": {
                                "type": "string"
                              },
                              "BalancePerEndDay": {
                                "type": "number"
                              },
                              "adjustedCreditLimit": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "monthlyAverageProviderFees": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "accountNumber": {
                                "type": "string"
                              },
                              "customerId": {
                                "type": "string"
                              },
                              "avgBankFees": {
                                "type": "number"
                              },
                              "providerId": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "creditCardOutcomes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "accountNumber": {
                                "type": "string"
                              },
                              "parsedAccountNumber": {
                                "type": "string"
                              },
                              "yearMonth": {
                                "type": "string"
                              },
                              "customerId": {
                                "type": "string"
                              },
                              "providerId": {
                                "type": "string"
                              },
                              "sumExpanse": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "creditCardOutcomesByCat": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "customerId": {
                                "type": "string"
                              },
                              "subCategory": {
                                "type": "string"
                              },
                              "avgExpanse": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "creditCardFees": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "avgCardFee": {
                                "type": "number"
                              },
                              "accountNumber": {
                                "type": "string"
                              },
                              "customerId": {
                                "type": "string"
                              },
                              "providerId": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "savingsAndSecurities": {
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "type": "string"
                            },
                            "totalSavings": {
                              "type": "number"
                            },
                            "totalSecuritiesValue": {
                              "type": "number"
                            },
                            "totalForeignCurrencyAmount": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number"
                                  },
                                  "currency": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "foreignCurrency": {
                              "type": "string"
                            }
                          }
                        },
                        "savings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "providerId": {
                                "type": "string"
                              },
                              "parsedAccountNumber": {
                                "type": "string"
                              },
                              "product": {
                                "type": "string"
                              },
                              "insertRate": {
                                "type": "number"
                              },
                              "contractAvailabilityDate": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "customerId": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "securities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "customerId": {
                                "type": "string"
                              },
                              "accountNumber": {
                                "type": "string"
                              },
                              "providerId": {
                                "type": "string"
                              },
                              "totalValue": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "countAkam": {
                          "type": "number"
                        },
                        "countAlertNotice": {
                          "type": "number"
                        },
                        "countCancelled": {
                          "type": "number"
                        },
                        "countForeclosure": {
                          "type": "number"
                        },
                        "countLoanOverDue": {
                          "type": "number"
                        },
                        "loansTotal": {
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "type": "string"
                            },
                            "totalMortgageAmount": {
                              "type": "number"
                            },
                            "totalLoansAmount": {
                              "type": "number"
                            }
                          }
                        },
                        "loans": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number"
                              },
                              "loanOriginalAmount": {
                                "type": "number"
                              },
                              "loanType": {
                                "type": "string"
                              },
                              "product": {
                                "type": "string"
                              },
                              "providerId": {
                                "type": "string"
                              },
                              "parsedAccountNumber": {
                                "type": "string"
                              },
                              "avgMonthlyLoanPay": {
                                "type": "number"
                              },
                              "interestRate": {
                                "type": "number"
                              },
                              "relatedDates": {
                                "type": "object",
                                "properties": {
                                  "contractAvailabilityDate": {
                                    "type": "string"
                                  },
                                  "contractStartDate": {
                                    "type": "string"
                                  },
                                  "contractEndDate": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "totalLoans": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastMonthPay": {
                                "type": "number"
                              },
                              "avgLoanPayment": {
                                "type": "number"
                              },
                              "typeOfLoan": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "DONE",
                        "RUNNING"
                      ],
                      "description": "The status of the report"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error getting financial report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/decision/{customerId}": {
      "post": {
        "summary": "Create a decision report to a customer",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "create:credit_scores"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the customer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The report is being created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobId": {
                      "type": "string",
                      "description": "The jobId to refrence when checking if the report is done"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error getting financial report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/decision/{jobId}": {
      "get": {
        "summary": "Get decision by jobId",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:connections"
            ]
          }
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the job",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response for getting a report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "decision": {
                      "type": "object",
                      "properties": {
                        "orgId": {
                          "type": "string",
                          "description": "Organization identifier"
                        },
                        "customerId": {
                          "type": "string",
                          "description": "Customer identifier"
                        },
                        "userId": {
                          "type": "string",
                          "description": "User identifier"
                        },
                        "isCardConnect": {
                          "type": "number",
                          "description": "Indicates if a card is connected (1 = yes, 0 = no)"
                        },
                        "cardCreditLimit": {
                          "type": "array",
                          "description": "Credit limit details for cards",
                          "items": {
                            "type": "object",
                            "properties": {
                              "accountNumber": {
                                "type": "string",
                                "description": "Credit card account number"
                              },
                              "creditLimitCard": {
                                "type": "number",
                                "description": "Credit limit for the card"
                              }
                            }
                          }
                        },
                        "checkingCreditLimit": {
                          "type": "array",
                          "description": "Credit limit usage details for checking accounts",
                          "items": {
                            "type": "object",
                            "properties": {
                              "adjustedAccountNumber": {
                                "type": "string",
                                "description": "Checking account number"
                              },
                              "adjustedCreditLimit": {
                                "type": "number",
                                "description": "Credit limit assigned to the checking account"
                              },
                              "almostExceededCredit": {
                                "type": "number",
                                "description": "Indicates if credit usage is near the limit"
                              },
                              "creditLineUsageLast3Month": {
                                "type": "number",
                                "description": "Credit line usage over the last 3 months"
                              },
                              "creditLineUsageLast6Month": {
                                "type": "number",
                                "description": "Credit line usage over the last 6 months"
                              },
                              "creditLineUsageLast12Month": {
                                "type": "number",
                                "description": "Credit line usage over the last 12 months"
                              },
                              "closingBalanceLastMonth": {
                                "type": "number",
                                "description": "Closing balance of the previous month"
                              },
                              "openBalance3MonthAgo": {
                                "type": "number",
                                "description": "Account balance from 3 months ago"
                              }
                            }
                          }
                        },
                        "savings": {
                          "type": "array",
                          "description": "Savings account information",
                          "items": {
                            "type": "object",
                            "properties": {
                              "currency": {
                                "type": "string",
                                "description": "Currency of the savings account"
                              },
                              "amount": {
                                "type": "number",
                                "description": "Current balance in the savings account"
                              }
                            }
                          }
                        },
                        "savingsTransactions": {
                          "type": "array",
                          "description": "Savings account transactions",
                          "items": {
                            "type": "object",
                            "properties": {
                              "chargedAmount": {
                                "type": "number",
                                "description": "Amount of the savings transaction"
                              },
                              "chargedCurrency": {
                                "type": "string",
                                "description": "Currency of the savings transaction"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the savings transaction"
                              }
                            }
                          }
                        },
                        "countAkamChq": {
                          "type": "number",
                          "description": "Number of 'Akam' cheques"
                        },
                        "countForAkamChqLastMonth": {
                          "type": "number",
                          "description": "Number of 'Akam' cheques in the last month"
                        },
                        "countForAkamChqLast3Month": {
                          "type": "number",
                          "description": "Number of 'Akam' cheques in the last 3 months"
                        },
                        "countForAkamChqLast6Month": {
                          "type": "number",
                          "description": "Number of 'Akam' cheques in the last 6 months"
                        },
                        "countForAkamChqLast12Month": {
                          "type": "number",
                          "description": "Number of 'Akam' cheques in the last 12 months"
                        },
                        "countCancelledChq": {
                          "type": "number",
                          "description": "Number of cancelled cheques"
                        },
                        "countAkamHok": {
                          "type": "number",
                          "description": "Number of 'Akam Hok' transactions"
                        },
                        "countForAkamHokLast3Month": {
                          "type": "number",
                          "description": "Number of 'Akam Hok' transactions in the last 3 months"
                        },
                        "countForAkamHokLast6Month": {
                          "type": "number",
                          "description": "Number of 'Akam Hok' transactions in the last 6 months"
                        },
                        "countForAkamHokLast12Month": {
                          "type": "number",
                          "description": "Number of 'Akam Hok' transactions in the last 12 months"
                        },
                        "countCancelledHok": {
                          "type": "number",
                          "description": "Number of cancelled 'Hok' transactions"
                        },
                        "countForCancellChqLast3Month": {
                          "type": "number",
                          "description": "Number of cancelled cheques in the last 3 months"
                        },
                        "countForCancellChqLast6Month": {
                          "type": "number",
                          "description": "Number of cancelled cheques in the last 6 months"
                        },
                        "countForCancellChqLast12Month": {
                          "type": "number",
                          "description": "Number of cancelled cheques in the last 12 months"
                        },
                        "countCancelledHokLast3Month": {
                          "type": "number",
                          "description": "Number of cancelled 'Hok' transactions in the last 3 months"
                        },
                        "countCancelledHokLast6Month": {
                          "type": "number",
                          "description": "Number of cancelled 'Hok' transactions in the last 6 months"
                        },
                        "countCancelledHokLast12Month": {
                          "type": "number",
                          "description": "Number of cancelled 'Hok' transactions in the last 12 months"
                        },
                        "countPigur": {
                          "type": "number",
                          "description": "Number of 'Pigur' transactions"
                        },
                        "CountForPigurLast3Month": {
                          "type": "number",
                          "description": "Number of 'Pigur' transactions in the last 3 months"
                        },
                        "CountForPigurLast6Month": {
                          "type": "number",
                          "description": "Number of 'Pigur' transactions in the last 6 months"
                        },
                        "CountForPigurLast12Month": {
                          "type": "number",
                          "description": "Number of 'Pigur' transactions in the last 12 months"
                        },
                        "countLimit": {
                          "type": "number",
                          "description": "Number of times the account was flagged for reaching credit limit"
                        },
                        "countExceededAlert": {
                          "type": "number",
                          "description": "Number of times the credit was exceeded"
                        },
                        "mortgageLastPay": {
                          "type": "number",
                          "description": "Amount of the last mortgage payment"
                        },
                        "avgMortgagePayment": {
                          "type": "number",
                          "description": "Average mortgage payment amount"
                        },
                        "creditExceeded": {
                          "type": "array",
                          "description": "Details of credit usage exceeding limits",
                          "items": {
                            "type": "object",
                            "properties": {
                              "providerId": {
                                "type": "string",
                                "description": "Provider ID (e.g., bank or credit card identifier)"
                              },
                              "accountNumber": {
                                "type": "string",
                                "description": "Account or credit card number"
                              },
                              "adjustedYearMonth": {
                                "type": "string",
                                "description": "Year and month of the credit usage"
                              },
                              "percentageOfUse": {
                                "type": "number",
                                "description": "Percentage of the credit limit used"
                              }
                            }
                          }
                        },
                        "incomeExpensesSources": {
                          "type": "array",
                          "description": "Breakdown of income and expenses by category/source",
                          "items": {
                            "type": "object",
                            "properties": {
                              "classificationSource": {
                                "type": "string",
                                "description": "Category or classification of the source"
                              },
                              "sumIncome": {
                                "type": "number",
                                "description": "Sum of income for this source"
                              },
                              "sumExpenses": {
                                "type": "number",
                                "description": "Sum of expenses for this source"
                              }
                            }
                          }
                        },
                        "indication": {
                          "type": "array",
                          "description": "List of relevant indications or indicators",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "Indicator description"
                              }
                            }
                          }
                        },
                        "loanBalance": {
                          "type": "number",
                          "description": "Outstanding balance for loans"
                        },
                        "bankLoanCount": {
                          "type": "number",
                          "description": "Number of bank loans"
                        },
                        "existMortgage": {
                          "type": "number",
                          "description": "Indicates if there is an existing mortgage (1 = yes, 0 = no)"
                        },
                        "reportedPeriodInMthsLast3": {
                          "type": "number",
                          "description": "Number of months reported for the most recent 3-month period"
                        },
                        "reportedPeriodInMths": {
                          "type": "number",
                          "description": "Number of months reported overall"
                        },
                        "incomeExpenseSourceByPeriod": {
                          "type": "array",
                          "description": "Income and expenses categorized by period and source",
                          "items": {
                            "type": "object",
                            "properties": {
                              "classificationSource": {
                                "type": "string",
                                "description": "Category or classification of the source"
                              },
                              "sumRegularIncomeLastMonth": {
                                "type": "number",
                                "description": "Sum of regular income in the last month"
                              },
                              "avgRegularIncomeLast3Month": {
                                "type": "number",
                                "description": "Average regular income over the last 3 months"
                              },
                              "avgRegularIncomeLast6Month": {
                                "type": "number",
                                "description": "Average regular income over the last 6 months"
                              },
                              "avgRegularIncomeLast12Month": {
                                "type": "number",
                                "description": "Average regular income over the last 12 months"
                              },
                              "sumExpensesLastMonth": {
                                "type": "number",
                                "description": "Sum of expenses in the last month"
                              },
                              "avgExpensesLast3Month": {
                                "type": "number",
                                "description": "Average expenses over the last 3 months"
                              },
                              "avgExpensesLast6Month": {
                                "type": "number",
                                "description": "Average expenses over the last 6 months"
                              },
                              "avgExpensesLast12Month": {
                                "type": "number",
                                "description": "Average expenses over the last 12 months"
                              }
                            }
                          }
                        },
                        "avgNonSettlementsLast3Month": {
                          "type": "number",
                          "description": "Average non-settled (unresolved) loan payments in the last 3 months"
                        },
                        "avgSettlementsLast3Month": {
                          "type": "number",
                          "description": "Average settled loan payments in the last 3 months"
                        },
                        "totalLoanPaymentsLast3Month": {
                          "type": "number",
                          "description": "Total loan payments in the last 3 months"
                        },
                        "avgRegularIncomeLast3Month": {
                          "type": "number",
                          "description": "Average regular income in the last 3 months"
                        },
                        "avgvariableIncomeLast3Month": {
                          "type": "number",
                          "description": "Average variable income in the last 3 months"
                        },
                        "avgIncome": {
                          "type": "number",
                          "description": "Overall average income"
                        },
                        "avgIncomeRecent3Mth": {
                          "type": "number",
                          "description": "Average total income in the most recent 3 months"
                        },
                        "avgSalaryRecent3Mth": {
                          "type": "number",
                          "description": "Average salary in the most recent 3 months"
                        },
                        "incomeChq": {
                          "type": "number",
                          "description": "Total income from cheques"
                        },
                        "incomeChqLast3Months": {
                          "type": "number",
                          "description": "Total income from cheques in the last 3 months"
                        },
                        "avgCashIncomesRcnt3Mth": {
                          "type": "number",
                          "description": "Average cash income in the most recent 3 months"
                        },
                        "sumCashIncomesRcntMth": {
                          "type": "number",
                          "description": "Total cash income in the most recent month"
                        },
                        "avgMinistryOfConstructionIncome": {
                          "type": "number",
                          "description": "Average income from the Ministry of Construction"
                        },
                        "avgMinistryOfConstructionIncomeRecent3Mth": {
                          "type": "number",
                          "description": "Average Ministry of Construction income in the most recent 3 months"
                        },
                        "avgNationalInsurance": {
                          "type": "number",
                          "description": "Average income from National Insurance"
                        },
                        "avgNationalInsuranceRecent3Mth": {
                          "type": "number",
                          "description": "Average National Insurance income in the most recent 3 months"
                        },
                        "daysSinceLastPigur": {
                          "type": "number",
                          "description": "Number of days since the last 'Pigur' event"
                        },
                        "daysSinceLastCancelledChq": {
                          "type": "number",
                          "description": "Number of days since the last cancelled cheque"
                        },
                        "daysSinceLastAkam": {
                          "type": "number",
                          "description": "Number of days since the last 'Akam' event"
                        },
                        "lastDayOfLimit": {
                          "type": "string",
                          "description": "Last date the account reached or triggered a credit limit event (DD/MM/YYYY)"
                        },
                        "daysSinceLastLimit": {
                          "type": "number",
                          "description": "Number of days since the last credit limit event"
                        },
                        "lastDayOfexceeded": {
                          "type": "string",
                          "description": "Last date the account exceeded its credit limit (DD/MM/YYYY)"
                        },
                        "daysSinceLastExceededAlert": {
                          "type": "number",
                          "description": "Number of days since the last credit exceeded alert"
                        },
                        "sumExpensesRcntMth": {
                          "type": "number",
                          "description": "Total expenses in the most recent month"
                        },
                        "avgExpensesMth": {
                          "type": "number",
                          "description": "Average monthly expenses"
                        },
                        "sumExpensesLast3Mth": {
                          "type": "number",
                          "description": "Total expenses in the last 3 months"
                        },
                        "countCardLoans": {
                          "type": "number",
                          "description": "Number of card-based loans"
                        },
                        "sumCardLoans": {
                          "type": "number",
                          "description": "Sum of card-based loans"
                        },
                        "decision": {
                          "type": "string",
                          "description": "Final decision based on financial data",
                          "enum": [
                            "Go",
                            "NoGo"
                          ]
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "DONE",
                        "RUNNING"
                      ],
                      "description": "The status of the report"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error getting deciosion report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/connections": {
      "post": {
        "summary": "Create connection",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "create:connections"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "string",
                    "description": "The ID of the customer (business ID / national ID) created through an extended journey (like loans)"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date which from transactions would be collected"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date at which the connection should expire"
                  },
                  "paymentId": {
                    "type": "string",
                    "description": "If this connection is created for a payment process you can define it here with a unique payment identifier"
                  },
                  "providerIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "yahav-sandbox",
                        "yahav",
                        "undefined",
                        "ubank-sandbox",
                        "ubank",
                        "pepper",
                        "pagi-sandbox",
                        "pagi",
                        "otsarHahayal-sandbox",
                        "otsarHahayal",
                        "open-finance-sandbox",
                        "open-finance-card-sandbox",
                        "mizrahi-sandbox",
                        "mizrahi",
                        "mercantile-sandbox",
                        "mercantile",
                        "menora-sandbox",
                        "max-sandbox",
                        "max",
                        "masad-sandbox",
                        "masad",
                        "leumi-sandbox",
                        "leumi",
                        "isracard-sandbox",
                        "isracard",
                        "hapoalim-sandbox",
                        "hapoalim",
                        "discount-sandbox",
                        "discount",
                        "cal-sandbox",
                        "cal",
                        "beinleumi-sandbox",
                        "beinleumi",
                        "americanExpress"
                      ],
                      "description": "Array of friendly bank IDs, the connection will be limited to the provided IDs, if none sent default will allow all providers"
                    }
                  },
                  "callbackInformation": {
                    "type": "object",
                    "properties": {
                      "webhooks": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "If true, enable webhooks"
                          },
                          "successUrl": {
                            "type": "string",
                            "description": "The url endpoint for success events"
                          },
                          "failUrl": {
                            "type": "string",
                            "description": "The url endpoint for fail events"
                          },
                          "abortUrl": {
                            "type": "string",
                            "description": "The url endpoint for abort events"
                          },
                          "oauth": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Do we need to use oauth protocol to send requests to the webhook"
                              },
                              "clientId": {
                                "type": "string"
                              },
                              "clientSecret": {
                                "type": "string"
                              },
                              "audience": {
                                "type": "string"
                              },
                              "scope": {
                                "type": "string"
                              },
                              "tokenUrl": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "includeFakeProviders": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, this connection can be used for testing purposes vs. a fake bank provider"
                  },
                  "refreshData": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, this connection will automatically get new transactions data"
                  },
                  "iframe": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, this connection send post messages for status notifications in an iframe"
                  },
                  "psuId": {
                    "type": "string",
                    "default": "",
                    "description": "incase you want to define ahead of time the user national id of passport and block him from changing it",
                    "minLength": 5,
                    "maxLength": 9,
                    "pattern": "^[0-9]+$"
                  },
                  "psuCorporateId": {
                    "type": "string",
                    "default": "",
                    "description": "incase you want to define ahead of time the user corporate id and block him from changing it",
                    "minLength": 8,
                    "maxLength": 9,
                    "pattern": "^[0-9]+$"
                  },
                  "redirectUrl": {
                    "type": "string",
                    "default": "",
                    "description": "An optional url to be redirected after a successful connection"
                  },
                  "connectionMode": {
                    "type": "string",
                    "default": "PSD2"
                  },
                  "allowBusiness": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true this connection will allow business accounts"
                  },
                  "access": {
                    "type": "object",
                    "description": "The access object is used to define the permissions you want to give to the connection",
                    "properties": {
                      "accounts": {
                        "type": "array",
                        "minItems": 0,
                        "items": {
                          "type": "object",
                          "properties": {
                            "iban": {
                              "type": "string",
                              "description": "The account iban number",
                              "example": "IL123456789012345678901"
                            },
                            "bban": {
                              "type": "string",
                              "description": "The account bban number",
                              "example": "10-944-50151142"
                            }
                          }
                        }
                      },
                      "balances": {
                        "type": "array",
                        "minItems": 0,
                        "items": {
                          "type": "object",
                          "properties": {
                            "iban": {
                              "type": "string",
                              "description": "The account iban number",
                              "example": "IL123456789012345678901"
                            },
                            "bban": {
                              "type": "string",
                              "description": "The account bban number",
                              "example": "10-944-50151142"
                            }
                          }
                        }
                      },
                      "transactions": {
                        "type": "array",
                        "minItems": 0,
                        "items": {
                          "type": "object",
                          "properties": {
                            "iban": {
                              "type": "string",
                              "description": "The account iban number",
                              "example": "IL123456789012345678901"
                            },
                            "bban": {
                              "type": "string",
                              "description": "The account bban number",
                              "example": "10-944-50151142"
                            }
                          }
                        }
                      }
                    }
                  },
                  "restrictedTo": {
                    "type": "array",
                    "description": "The restrictedTo object is used to define the permissions you want to give to the connection",
                    "items": {
                      "type": "string",
                      "enum": [
                        "CACC",
                        "CARD",
                        "LOAN",
                        "SVGS",
                        "SCTS"
                      ]
                    }
                  },
                  "psuIdType": {
                    "type": "string",
                    "description": "The type of the PSU ID, validated based on the provider ID."
                  },
                  "isPlaidSandbox": {
                    "type": "boolean",
                    "description": "If true, this connection will be treated as a sandbox connection for Plaid."
                  },
                  "redirectWithoutButtonClick": {
                    "type": "boolean",
                    "description": "If true, this connection will be redirected automatically without the user needing to click a button."
                  },
                  "allowInsurance": {
                    "type": "boolean",
                    "description": "If true, this connection will allow insurance-related data to be accessed."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "A unique identifier for the connection"
                    },
                    "connectUrl": {
                      "type": "string",
                      "description": "A link forwarding the end-user to the consent journey"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "production access is not enabled for this organization, you must include fake providers or contact us",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Organization not found in auth0 token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get connections by user",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:connections"
            ]
          }
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "description": "The ID of a customer (business ID / national ID) created through an extended journey (like loans)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "in": "query",
            "required": false,
            "description": "The phone number of a contact created through an extended journey (like loans)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of documents to retrieve",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "1 for ascending, -1 for descending",
            "schema": {
              "type": "number",
              "enum": [
                1,
                -1
              ]
            }
          },
          {
            "name": "nextPage",
            "in": "query",
            "required": false,
            "description": "page to retrieve, used for pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "status to retrieve, used for filtering",
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPage": {
                      "type": "string",
                      "nullable": true,
                      "description": "Represents the total number of items that exists after full pagination"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "A unique identifier for the connection"
                          },
                          "userId": {
                            "type": "string",
                            "description": "A unique identifier for the user"
                          },
                          "psuId": {
                            "type": "string",
                            "description": "The national id or passport number of the user"
                          },
                          "psuCorporateId": {
                            "type": "string",
                            "description": "The ID of a customer (business ID / national ID)"
                          },
                          "providerId": {
                            "type": "string",
                            "description": "A unique identifier for the provider"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "ACTIVE",
                              "CONNECTED",
                              "FETCHING",
                              "ERROR",
                              "FETCHING_ERROR",
                              "INACTIVE",
                              "COMPLETED",
                              "CREDENTIALS_ERROR",
                              "REJECTED",
                              "PARTIALLY_AUTHORIZED",
                              "REVOKED",
                              "REPLACED"
                            ],
                            "description": "The connection status"
                          },
                          "mode": {
                            "type": "string",
                            "enum": [
                              "PSD2"
                            ],
                            "description": "The connection mode, PSD2 is open banking"
                          },
                          "expiryDate": {
                            "type": "string",
                            "format": "date",
                            "description": "The date at which the connection/consent expires"
                          },
                          "accounts": {
                            "type": "number",
                            "description": "Number of checking accounts associated with the connection"
                          },
                          "cards": {
                            "type": "number",
                            "description": "Number of credit-cards associated with the connection"
                          },
                          "savings": {
                            "type": "number",
                            "description": "Number of savings accounts associated with the connection"
                          },
                          "loans": {
                            "type": "number",
                            "description": "Number of loans accounts associated with the connection"
                          },
                          "securities": {
                            "type": "number",
                            "description": "Number of security accounts associated with the connection"
                          },
                          "transactions": {
                            "type": "number",
                            "description": "Number of transactions associated with the connection"
                          },
                          "providerIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "leumi",
                                "mizrahi",
                                "hapoalim",
                                "otsarHahayal",
                                "discount",
                                "beinleumi",
                                "yahav",
                                "union",
                                "masad",
                                "pagi",
                                "ubank",
                                "mercantile",
                                "jerusalem",
                                "pepper",
                                "digiBank"
                              ],
                              "description": "A unique identifier for the provider"
                            }
                          },
                          "includeFakeProviders": {
                            "type": "boolean",
                            "default": false,
                            "description": "If true, allow usage of dummy bank"
                          },
                          "callbackInformation": {
                            "type": "object",
                            "properties": {
                              "webhooks": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "If true, enable webhooks"
                                  },
                                  "successUrl": {
                                    "type": "string",
                                    "description": "The url endpoint for success events"
                                  },
                                  "failUrl": {
                                    "type": "string",
                                    "description": "The url endpoint for fail events"
                                  },
                                  "abortUrl": {
                                    "type": "string",
                                    "description": "The url endpoint for abort events"
                                  },
                                  "oauth": {
                                    "type": "object",
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "description": "Do we need to use oauth protocol to send requests to the webhook"
                                      },
                                      "clientId": {
                                        "type": "string"
                                      },
                                      "clientSecret": {
                                        "type": "string"
                                      },
                                      "audience": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "tokenUrl": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "refreshSettings": {
                            "type": "object",
                            "properties": {
                              "refreshData:": {
                                "type": "boolean",
                                "description": "If true, the connection will refresh TX data in the background"
                              },
                              "lastFetchedDataDate:": {
                                "type": "string",
                                "format": "date",
                                "description": "Last date at which TX's have been fetched"
                              }
                            }
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Error message"
                              },
                              "type": {
                                "type": "string",
                                "description": "Error type"
                              }
                            }
                          },
                          "organization": {
                            "type": "string",
                            "description": "org Name"
                          },
                          "isFake": {
                            "type": "boolean",
                            "description": "If true, the connection is fake (for testing purposes, sandbox bank)"
                          },
                          "restrictedTo": {
                            "type": "array",
                            "description": "The restrictedTo object is used to define the permissions you want to give to the connection",
                            "items": {
                              "type": "string",
                              "enum": [
                                "CACC",
                                "CARD",
                                "LOAN",
                                "SVGS"
                              ]
                            }
                          },
                          "iframe": {
                            "type": "boolean",
                            "description": "indicates whether the consent joureny for this connection should display as iframe or not"
                          },
                          "access": {
                            "type": "object",
                            "description": "The access object is used to define the permissions you want to give to the connection",
                            "properties": {
                              "accounts": {
                                "type": "array",
                                "minItems": 0,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "iban": {
                                      "type": "string",
                                      "description": "The account iban number",
                                      "example": "IL123456789012345678901"
                                    },
                                    "bban": {
                                      "type": "string",
                                      "description": "The account bban number",
                                      "example": "10-944-50151142"
                                    }
                                  }
                                }
                              },
                              "balances": {
                                "type": "array",
                                "minItems": 0,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "iban": {
                                      "type": "string",
                                      "description": "The account iban number",
                                      "example": "IL123456789012345678901"
                                    },
                                    "bban": {
                                      "type": "string",
                                      "description": "The account bban number",
                                      "example": "10-944-50151142"
                                    }
                                  }
                                }
                              },
                              "transactions": {
                                "type": "array",
                                "minItems": 0,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "iban": {
                                      "type": "string",
                                      "description": "The account iban number",
                                      "example": "IL123456789012345678901"
                                    },
                                    "bban": {
                                      "type": "string",
                                      "description": "The account bban number",
                                      "example": "10-944-50151142"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "contactId": {
                            "type": "string",
                            "description": "The phone number of a contact created through an extended journey (like loans)"
                          },
                          "redirectUrl": {
                            "type": "string",
                            "description": "An optional URL to be redirected after a successful connection"
                          },
                          "startDate": {
                            "type": "string",
                            "format": "date",
                            "description": "The date from which transactions would be collected"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp in UTC when the connection was created"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp in UTC when the connection was last updated"
                          },
                          "scaOAuth": {
                            "type": "string",
                            "description": "URL for OAuth-based Strong Customer Authentication"
                          },
                          "verifier": {
                            "type": "string",
                            "description": "Verifier used for verifying the connection"
                          },
                          "lastFetchedDataDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Last date at which transactions have been fetched"
                          },
                          "allowBusiness": {
                            "type": "boolean",
                            "description": "Indicates if the connection allows business accounts"
                          },
                          "allowInsurance": {
                            "type": "boolean",
                            "description": "Indicates if the connection allows insurance-related data"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "userId is not allowed in query for non-admin users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Route or entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/connections/{connectionId}": {
      "get": {
        "summary": "Get connection by ID",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:connections"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the connection",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "A unique identifier for the connection"
                    },
                    "userId": {
                      "type": "string",
                      "description": "A unique identifier for the user"
                    },
                    "psuId": {
                      "type": "string",
                      "description": "The national id or passport number of the user"
                    },
                    "psuCorporateId": {
                      "type": "string",
                      "description": "The ID of a customer (business ID / national ID)"
                    },
                    "providerId": {
                      "type": "string",
                      "description": "A unique identifier for the provider"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "CONNECTED",
                        "FETCHING",
                        "ERROR",
                        "FETCHING_ERROR",
                        "INACTIVE",
                        "COMPLETED",
                        "CREDENTIALS_ERROR",
                        "REJECTED",
                        "PARTIALLY_AUTHORIZED",
                        "REVOKED",
                        "REPLACED"
                      ],
                      "description": "The connection status"
                    },
                    "mode": {
                      "type": "string",
                      "enum": [
                        "PSD2"
                      ],
                      "description": "The connection mode, PSD2 is open banking"
                    },
                    "expiryDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The date at which the connection/consent expires"
                    },
                    "accounts": {
                      "type": "number",
                      "description": "Number of checking accounts associated with the connection"
                    },
                    "cards": {
                      "type": "number",
                      "description": "Number of credit-cards associated with the connection"
                    },
                    "savings": {
                      "type": "number",
                      "description": "Number of savings accounts associated with the connection"
                    },
                    "loans": {
                      "type": "number",
                      "description": "Number of loans accounts associated with the connection"
                    },
                    "securities": {
                      "type": "number",
                      "description": "Number of security accounts associated with the connection"
                    },
                    "transactions": {
                      "type": "number",
                      "description": "Number of transactions associated with the connection"
                    },
                    "providerIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "leumi",
                          "mizrahi",
                          "hapoalim",
                          "otsarHahayal",
                          "discount",
                          "beinleumi",
                          "yahav",
                          "union",
                          "masad",
                          "pagi",
                          "ubank",
                          "mercantile",
                          "jerusalem",
                          "pepper",
                          "digiBank"
                        ],
                        "description": "A unique identifier for the provider"
                      }
                    },
                    "includeFakeProviders": {
                      "type": "boolean",
                      "default": false,
                      "description": "If true, allow usage of dummy bank"
                    },
                    "callbackInformation": {
                      "type": "object",
                      "properties": {
                        "webhooks": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "If true, enable webhooks"
                            },
                            "successUrl": {
                              "type": "string",
                              "description": "The url endpoint for success events"
                            },
                            "failUrl": {
                              "type": "string",
                              "description": "The url endpoint for fail events"
                            },
                            "abortUrl": {
                              "type": "string",
                              "description": "The url endpoint for abort events"
                            },
                            "oauth": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Do we need to use oauth protocol to send requests to the webhook"
                                },
                                "clientId": {
                                  "type": "string"
                                },
                                "clientSecret": {
                                  "type": "string"
                                },
                                "audience": {
                                  "type": "string"
                                },
                                "scope": {
                                  "type": "string"
                                },
                                "tokenUrl": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "refreshSettings": {
                      "type": "object",
                      "properties": {
                        "refreshData:": {
                          "type": "boolean",
                          "description": "If true, the connection will refresh TX data in the background"
                        },
                        "lastFetchedDataDate:": {
                          "type": "string",
                          "format": "date",
                          "description": "Last date at which TX's have been fetched"
                        }
                      }
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Error message"
                        },
                        "type": {
                          "type": "string",
                          "description": "Error type"
                        }
                      }
                    },
                    "organization": {
                      "type": "string",
                      "description": "org Name"
                    },
                    "isFake": {
                      "type": "boolean",
                      "description": "If true, the connection is fake (for testing purposes, sandbox bank)"
                    },
                    "restrictedTo": {
                      "type": "array",
                      "description": "The restrictedTo object is used to define the permissions you want to give to the connection",
                      "items": {
                        "type": "string",
                        "enum": [
                          "CACC",
                          "CARD",
                          "LOAN",
                          "SVGS"
                        ]
                      }
                    },
                    "iframe": {
                      "type": "boolean",
                      "description": "indicates whether the consent joureny for this connection should display as iframe or not"
                    },
                    "access": {
                      "type": "object",
                      "description": "The access object is used to define the permissions you want to give to the connection",
                      "properties": {
                        "accounts": {
                          "type": "array",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "properties": {
                              "iban": {
                                "type": "string",
                                "description": "The account iban number",
                                "example": "IL123456789012345678901"
                              },
                              "bban": {
                                "type": "string",
                                "description": "The account bban number",
                                "example": "10-944-50151142"
                              }
                            }
                          }
                        },
                        "balances": {
                          "type": "array",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "properties": {
                              "iban": {
                                "type": "string",
                                "description": "The account iban number",
                                "example": "IL123456789012345678901"
                              },
                              "bban": {
                                "type": "string",
                                "description": "The account bban number",
                                "example": "10-944-50151142"
                              }
                            }
                          }
                        },
                        "transactions": {
                          "type": "array",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "properties": {
                              "iban": {
                                "type": "string",
                                "description": "The account iban number",
                                "example": "IL123456789012345678901"
                              },
                              "bban": {
                                "type": "string",
                                "description": "The account bban number",
                                "example": "10-944-50151142"
                              }
                            }
                          }
                        }
                      }
                    },
                    "contactId": {
                      "type": "string",
                      "description": "The phone number of a contact created through an extended journey (like loans)"
                    },
                    "redirectUrl": {
                      "type": "string",
                      "description": "An optional URL to be redirected after a successful connection"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The date from which transactions would be collected"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp in UTC when the connection was created"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp in UTC when the connection was last updated"
                    },
                    "scaOAuth": {
                      "type": "string",
                      "description": "URL for OAuth-based Strong Customer Authentication"
                    },
                    "verifier": {
                      "type": "string",
                      "description": "Verifier used for verifying the connection"
                    },
                    "lastFetchedDataDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Last date at which transactions have been fetched"
                    },
                    "allowBusiness": {
                      "type": "boolean",
                      "description": "Indicates if the connection allows business accounts"
                    },
                    "allowInsurance": {
                      "type": "boolean",
                      "description": "Indicates if the connection allows insurance-related data"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "orgId was not provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "No connection was found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete connection by ID (user scope)",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "delete:connections"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the connection",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "userId is not allowed in query for non-admin users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "connection not found"
          },
          "423": {
            "description": "This connection is locked and cant be deleted currently. If you have big-query enabled, you can only delete connections that were created at least 90 minutes ago"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/connections/{userId}/refresh": {
      "get": {
        "summary": "Refresh all connections data by user ID",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:connections"
            ]
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "userId missing from params",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "No connection was found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/connections/refresh/{connectionId}": {
      "get": {
        "summary": "Refresh a connection by its id",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:connections"
            ]
          }
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "A unique identifier for the connection",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "connectionId missing from params",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "No connection was found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/data/accounts": {
      "get": {
        "summary": "Get accounts by user",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:accounts"
            ]
          }
        ],
        "parameters": [
          {
            "name": "nextPage",
            "in": "query",
            "required": false,
            "description": "page to retrieve, used for pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of documents to retrieve",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "includeDuplicates",
            "in": "query",
            "required": false,
            "description": "Specifies whether to return duplicates or not",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "1 for ascending, -1 for descending",
            "schema": {
              "type": "number",
              "enum": [
                1,
                -1
              ]
            }
          },
          {
            "name": "connectionId",
            "in": "query",
            "required": false,
            "description": "The unique identifier for the connection",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "description": "The unique identifier for the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountType",
            "in": "query",
            "required": false,
            "description": "The type of the account ('CHECKING' | 'CARD' | 'LOAN' | 'SAVINGS' | 'SECURITIES').",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPage": {
                      "type": "string",
                      "nullable": true,
                      "description": "Represents the total number of items that exists after full pagination"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "A unique identifier for the account"
                          },
                          "userId": {
                            "type": "string",
                            "description": "A unique identifier for the user"
                          },
                          "providerId": {
                            "type": "string",
                            "description": "A unique identifier for the provider"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "A unique identifier for the connection"
                          },
                          "accountNumber": {
                            "type": "string",
                            "description": "A bank account number"
                          },
                          "product": {
                            "type": "string",
                            "description": "The product of this account"
                          },
                          "parsedAccount": {
                            "type": "object",
                            "description": "Account iban number parsed",
                            "properties": {
                              "bank": {
                                "type": "string",
                                "description": "Bank number"
                              },
                              "branch": {
                                "type": "string",
                                "description": "Branch number"
                              },
                              "number": {
                                "type": "string",
                                "description": "Account number"
                              }
                            }
                          },
                          "accountType": {
                            "type": "string",
                            "description": "The type of the account"
                          },
                          "creditStatus": {
                            "type": "string",
                            "enum": [
                              "deleted",
                              "enabled",
                              "disabled"
                            ],
                            "description": "The status of a credit card"
                          },
                          "cardDueDate": {
                            "type": "string",
                            "description": "A card due date"
                          },
                          "currency": {
                            "type": "string",
                            "description": "The currency of which the account transacts in"
                          },
                          "ownerInfo": {
                            "type": "object",
                            "description": "Information of the account owner",
                            "properties": {
                              "nationalId": {
                                "type": "string",
                                "description": "Legal national ID"
                              },
                              "fullName": {
                                "type": "string",
                                "description": "Legal full name"
                              }
                            }
                          },
                          "accountName": {
                            "type": "string",
                            "description": "The name of the account"
                          },
                          "balances": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "number",
                                  "description": "The amount value",
                                  "example": 11
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The amount currency",
                                  "example": "ILS"
                                }
                              }
                            }
                          },
                          "interst": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rate": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "precentage": {
                                        "type": "number",
                                        "example": 4.5
                                      }
                                    }
                                  },
                                  "description": "Array of the different interest rates"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the interest. FIXD or INDE"
                                },
                                "relatedIndecies": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "index": {
                                        "type": "string",
                                        "description": "The index of the variable interest, if there is one"
                                      },
                                      "additionalInformation": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The amount currency",
                                  "example": "ILS"
                                }
                              }
                            },
                            "description": "Interest information, only for savings and loans"
                          },
                          "relatedDates": {
                            "type": "object",
                            "properties": {
                              "contractAvailabilityDate": {
                                "type": "string"
                              },
                              "contractEndDate": {
                                "type": "string"
                              },
                              "contractStartDate": {
                                "type": "string"
                              }
                            }
                          },
                          "usage": {
                            "type": "string",
                            "description": "The type of usage of the account. Private or business"
                          },
                          "creditLimit": {
                            "type": "number",
                            "description": "The credit limit of the account"
                          },
                          "transactions": {
                            "type": "number",
                            "description": "Number of transactions the account has"
                          },
                          "applicableFees": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "typeProprietary": {
                                  "type": "string"
                                },
                                "applicableFrom": {
                                  "type": "string"
                                },
                                "additionalInformation": {
                                  "type": "string"
                                },
                                "applicableTo": {
                                  "type": "string"
                                },
                                "feeRules": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "percentage": {
                                        "type": "number"
                                      },
                                      "minimumAmount": {
                                        "type": "object",
                                        "properties": {
                                          "amount": {
                                            "type": "number",
                                            "description": "The amount value",
                                            "example": 11
                                          },
                                          "currency": {
                                            "type": "string",
                                            "description": "The amount currency",
                                            "example": "ILS"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityPositions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "financialInstrument": {
                                  "type": "object",
                                  "properties": {
                                    "isin": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "normalisedPrice": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "object",
                                          "properties": {
                                            "amount": {
                                              "type": "number",
                                              "description": "The amount value",
                                              "example": 11
                                            },
                                            "currency": {
                                              "type": "string",
                                              "description": "The amount currency",
                                              "example": "ILS"
                                            }
                                          }
                                        },
                                        "priceDateTime": {
                                          "type": "string"
                                        },
                                        "priceType": {
                                          "type": "string",
                                          "enum": [
                                            "BIDE",
                                            "OFFR",
                                            "NAVL",
                                            "CREA",
                                            "CANC",
                                            "INTE",
                                            "SWNG",
                                            "MIDD",
                                            "RINV",
                                            "SWIC",
                                            "MRKT",
                                            "INDC",
                                            "DDVR",
                                            "ACTU"
                                          ]
                                        },
                                        "sourceOfPrice": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "FUND",
                                                "LMAR",
                                                "THEO",
                                                "VEND"
                                              ]
                                            },
                                            "mic": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "unitsNumber": {
                                      "type": "number"
                                    },
                                    "balanceType": {
                                      "type": "string",
                                      "enum": [
                                        "AVAI",
                                        "AWAS",
                                        "BTRA",
                                        "BLOK",
                                        "BLOV",
                                        "BLCA",
                                        "BLOT",
                                        "BORR",
                                        "COLI",
                                        "COLO",
                                        "MARG",
                                        "DRAW",
                                        "COLA",
                                        "TRAN",
                                        "ISSU",
                                        "DIRT",
                                        "LOAN",
                                        "REGO",
                                        "BODE",
                                        "BORE",
                                        "PEDA",
                                        "PECA",
                                        "PEND",
                                        "PDMT",
                                        "PDUM",
                                        "LODE",
                                        "LORE",
                                        "PENR",
                                        "PRMT",
                                        "PRUM",
                                        "PLED",
                                        "QUAS",
                                        "NOMI",
                                        "RSTR",
                                        "SPOS",
                                        "CLEN",
                                        "OTHR",
                                        "UNRG",
                                        "WDOC"
                                      ]
                                    },
                                    "averageBuyingPrice": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "The amount value",
                                          "example": 11
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    },
                                    "details": {
                                      "type": "string",
                                      "properties": {
                                        "symbol": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "description": "Financial instrument that was transferred within the transaction."
                                }
                              }
                            }
                          },
                          "securityOrders": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "orderId": {
                                  "type": "string"
                                },
                                "side": {
                                  "type": "string",
                                  "enum": [
                                    "buy",
                                    "sell",
                                    "subscription",
                                    "redemption"
                                  ]
                                },
                                "financialInstrument": {
                                  "type": "object",
                                  "properties": {
                                    "isin": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "unitsNumber": {
                                  "type": "string"
                                },
                                "orderStatus": {
                                  "type": "string",
                                  "enum": [
                                    "unknown",
                                    "new",
                                    "partiallyFilled",
                                    "filled",
                                    "doneForDay",
                                    "canceled",
                                    "replaced",
                                    "pendingCancel",
                                    "stopped",
                                    "rejected",
                                    "suspended",
                                    "pendingNew",
                                    "calculated",
                                    "expired",
                                    "acceptedForBidding",
                                    "pendingReplace"
                                  ]
                                }
                              }
                            }
                          },
                          "loanType": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "RETAIL_LOAN",
                                "MORTGAGE",
                                "CREDIT_LIMIT",
                                "GUARANTEE",
                                "CREDIT_CARD",
                                "CHEQUE_DISCOUNTING",
                                "FUTURE_PAYMENT"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "orgId was not provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Route or entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/data/accounts/{accountId}": {
      "get": {
        "summary": "Get account by ID",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:accounts"
            ]
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "A unique account identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "A unique identifier for the account"
                    },
                    "userId": {
                      "type": "string",
                      "description": "A unique identifier for the user"
                    },
                    "providerId": {
                      "type": "string",
                      "description": "A unique identifier for the provider"
                    },
                    "connectionId": {
                      "type": "string",
                      "description": "A unique identifier for the connection"
                    },
                    "accountNumber": {
                      "type": "string",
                      "description": "A bank account number"
                    },
                    "product": {
                      "type": "string",
                      "description": "The product of this account"
                    },
                    "parsedAccount": {
                      "type": "object",
                      "description": "Account iban number parsed",
                      "properties": {
                        "bank": {
                          "type": "string",
                          "description": "Bank number"
                        },
                        "branch": {
                          "type": "string",
                          "description": "Branch number"
                        },
                        "number": {
                          "type": "string",
                          "description": "Account number"
                        }
                      }
                    },
                    "accountType": {
                      "type": "string",
                      "description": "The type of the account"
                    },
                    "creditStatus": {
                      "type": "string",
                      "enum": [
                        "deleted",
                        "enabled",
                        "disabled"
                      ],
                      "description": "The status of a credit card"
                    },
                    "cardDueDate": {
                      "type": "string",
                      "description": "A card due date"
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency of which the account transacts in"
                    },
                    "ownerInfo": {
                      "type": "object",
                      "description": "Information of the account owner",
                      "properties": {
                        "nationalId": {
                          "type": "string",
                          "description": "Legal national ID"
                        },
                        "fullName": {
                          "type": "string",
                          "description": "Legal full name"
                        }
                      }
                    },
                    "accountName": {
                      "type": "string",
                      "description": "The name of the account"
                    },
                    "balances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "The amount value",
                            "example": 11
                          },
                          "currency": {
                            "type": "string",
                            "description": "The amount currency",
                            "example": "ILS"
                          }
                        }
                      }
                    },
                    "interst": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rate": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "precentage": {
                                  "type": "number",
                                  "example": 4.5
                                }
                              }
                            },
                            "description": "Array of the different interest rates"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the interest. FIXD or INDE"
                          },
                          "relatedIndecies": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "index": {
                                  "type": "string",
                                  "description": "The index of the variable interest, if there is one"
                                },
                                "additionalInformation": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "currency": {
                            "type": "string",
                            "description": "The amount currency",
                            "example": "ILS"
                          }
                        }
                      },
                      "description": "Interest information, only for savings and loans"
                    },
                    "relatedDates": {
                      "type": "object",
                      "properties": {
                        "contractAvailabilityDate": {
                          "type": "string"
                        },
                        "contractEndDate": {
                          "type": "string"
                        },
                        "contractStartDate": {
                          "type": "string"
                        }
                      }
                    },
                    "usage": {
                      "type": "string",
                      "description": "The type of usage of the account. Private or business"
                    },
                    "creditLimit": {
                      "type": "number",
                      "description": "The credit limit of the account"
                    },
                    "transactions": {
                      "type": "number",
                      "description": "Number of transactions the account has"
                    },
                    "applicableFees": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "typeProprietary": {
                            "type": "string"
                          },
                          "applicableFrom": {
                            "type": "string"
                          },
                          "additionalInformation": {
                            "type": "string"
                          },
                          "applicableTo": {
                            "type": "string"
                          },
                          "feeRules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "percentage": {
                                  "type": "number"
                                },
                                "minimumAmount": {
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "type": "number",
                                      "description": "The amount value",
                                      "example": 11
                                    },
                                    "currency": {
                                      "type": "string",
                                      "description": "The amount currency",
                                      "example": "ILS"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "securityPositions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "financialInstrument": {
                            "type": "object",
                            "properties": {
                              "isin": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "normalisedPrice": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "number",
                                        "description": "The amount value",
                                        "example": 11
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "The amount currency",
                                        "example": "ILS"
                                      }
                                    }
                                  },
                                  "priceDateTime": {
                                    "type": "string"
                                  },
                                  "priceType": {
                                    "type": "string",
                                    "enum": [
                                      "BIDE",
                                      "OFFR",
                                      "NAVL",
                                      "CREA",
                                      "CANC",
                                      "INTE",
                                      "SWNG",
                                      "MIDD",
                                      "RINV",
                                      "SWIC",
                                      "MRKT",
                                      "INDC",
                                      "DDVR",
                                      "ACTU"
                                    ]
                                  },
                                  "sourceOfPrice": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "FUND",
                                          "LMAR",
                                          "THEO",
                                          "VEND"
                                        ]
                                      },
                                      "mic": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "unitsNumber": {
                                "type": "number"
                              },
                              "balanceType": {
                                "type": "string",
                                "enum": [
                                  "AVAI",
                                  "AWAS",
                                  "BTRA",
                                  "BLOK",
                                  "BLOV",
                                  "BLCA",
                                  "BLOT",
                                  "BORR",
                                  "COLI",
                                  "COLO",
                                  "MARG",
                                  "DRAW",
                                  "COLA",
                                  "TRAN",
                                  "ISSU",
                                  "DIRT",
                                  "LOAN",
                                  "REGO",
                                  "BODE",
                                  "BORE",
                                  "PEDA",
                                  "PECA",
                                  "PEND",
                                  "PDMT",
                                  "PDUM",
                                  "LODE",
                                  "LORE",
                                  "PENR",
                                  "PRMT",
                                  "PRUM",
                                  "PLED",
                                  "QUAS",
                                  "NOMI",
                                  "RSTR",
                                  "SPOS",
                                  "CLEN",
                                  "OTHR",
                                  "UNRG",
                                  "WDOC"
                                ]
                              },
                              "averageBuyingPrice": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount value",
                                    "example": 11
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The amount currency",
                                    "example": "ILS"
                                  }
                                }
                              },
                              "details": {
                                "type": "string",
                                "properties": {
                                  "symbol": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "description": "Financial instrument that was transferred within the transaction."
                          }
                        }
                      }
                    },
                    "securityOrders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "type": "string"
                          },
                          "side": {
                            "type": "string",
                            "enum": [
                              "buy",
                              "sell",
                              "subscription",
                              "redemption"
                            ]
                          },
                          "financialInstrument": {
                            "type": "object",
                            "properties": {
                              "isin": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "unitsNumber": {
                            "type": "string"
                          },
                          "orderStatus": {
                            "type": "string",
                            "enum": [
                              "unknown",
                              "new",
                              "partiallyFilled",
                              "filled",
                              "doneForDay",
                              "canceled",
                              "replaced",
                              "pendingCancel",
                              "stopped",
                              "rejected",
                              "suspended",
                              "pendingNew",
                              "calculated",
                              "expired",
                              "acceptedForBidding",
                              "pendingReplace"
                            ]
                          }
                        }
                      }
                    },
                    "loanType": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "RETAIL_LOAN",
                          "MORTGAGE",
                          "CREDIT_LIMIT",
                          "GUARANTEE",
                          "CREDIT_CARD",
                          "CHEQUE_DISCOUNTING",
                          "FUTURE_PAYMENT"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "orgId was not provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Route or entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/data/transactions": {
      "get": {
        "summary": "Get transactions by user",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:transactions"
            ]
          }
        ],
        "parameters": [
          {
            "name": "nextPage",
            "in": "query",
            "required": false,
            "description": "page to retrieve, used for pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of documents to retrieve",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "required": false,
            "description": "Specifies the starting date from which to retrieve transactions. If you use this you cant use limit",
            "schema": {
              "type": "string",
              "example": "2024-04-03",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": false,
            "description": "Specifies the ending date until which to retrieve transactions. If you use this you cant use limit",
            "schema": {
              "type": "string",
              "example": "2024-04-03",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          },
          {
            "name": "includeDuplicates",
            "in": "query",
            "required": false,
            "description": "Specifies whether to return duplicates or not",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "1 for ascending, -1 for descending",
            "schema": {
              "type": "number",
              "enum": [
                1,
                -1
              ]
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "description": "The accountId that the transactions are linked to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "query",
            "required": false,
            "description": "The connectionId that the transactions are linked to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "The type of the provider",
            "schema": {
              "type": "string",
              "enum": [
                "BANK",
                "CARD"
              ]
            }
          },
          {
            "name": "providerId",
            "in": "query",
            "required": false,
            "description": "The providerId that the transactions are linked to",
            "schema": {
              "type": "string",
              "enum": [
                "yahav-sandbox",
                "yahav",
                "undefined",
                "ubank-sandbox",
                "ubank",
                "pepper",
                "pagi-sandbox",
                "pagi",
                "otsarHahayal-sandbox",
                "otsarHahayal",
                "open-finance-sandbox",
                "open-finance-card-sandbox",
                "mizrahi-sandbox",
                "mizrahi",
                "mercantile-sandbox",
                "mercantile",
                "menora-sandbox",
                "max-sandbox",
                "max",
                "masad-sandbox",
                "masad",
                "leumi-sandbox",
                "leumi",
                "isracard-sandbox",
                "isracard",
                "hapoalim-sandbox",
                "hapoalim",
                "discount-sandbox",
                "discount",
                "cal-sandbox",
                "cal",
                "beinleumi-sandbox",
                "beinleumi",
                "americanExpress"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPage": {
                      "type": "string",
                      "nullable": true,
                      "description": "Represents the total number of items that exists after full pagination. The max transactions per request is 500"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "A unique identifier for the transaction"
                          },
                          "SK": {
                            "type": "string",
                            "description": "Secondary key for the transaction, indicating the specific type of transaction and related metadata."
                          },
                          "userId": {
                            "type": "string",
                            "description": "A unique identifier for the user"
                          },
                          "orgId": {
                            "type": "string",
                            "description": "A unique identifier for the organization"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "A unique identifier for the connection"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "A unique identifier for the account"
                          },
                          "providerId": {
                            "type": "string",
                            "description": "A unique identifier for the provider"
                          },
                          "transactionProviderIdentifier": {
                            "type": "string",
                            "description": "A unique identifier for the provider TX"
                          },
                          "accountNumber": {
                            "type": "string",
                            "description": "A bank account number"
                          },
                          "status": {
                            "type": "string",
                            "description": "The transaction status"
                          },
                          "categoryCode": {
                            "type": "string",
                            "description": "Code representing the category of the transaction (MCC code or other)."
                          },
                          "securityDetails": {
                            "type": "object",
                            "properties": {
                              "unitsNumber": {
                                "type": "number",
                                "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
                              },
                              "unitsNominal": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount value",
                                    "example": 11
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The amount currency",
                                    "example": "ILS"
                                  }
                                }
                              },
                              "placeOfTrade": {
                                "type": "object",
                                "properties": {
                                  "marketIdentifierProprietary": {
                                    "type": "string",
                                    "description": "Proprietary Identifier of the market place."
                                  },
                                  "mic": {
                                    "type": "string",
                                    "description": "ISO 10383 code of the market place"
                                  }
                                }
                              },
                              "relevantDates": {
                                "type": "object",
                                "properties": {
                                  "effectiveSettlementDate": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The effective settlement date"
                                  },
                                  "performanceDate": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The performance date"
                                  },
                                  "settlementDate": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The settlement date"
                                  },
                                  "valueDate": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The value date"
                                  },
                                  "bookingDate": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The booking date"
                                  },
                                  "transactionsDate": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The transaction date"
                                  }
                                },
                                "description": "At least one of the listed date types must be present."
                              },
                              "orderId": {
                                "type": "string",
                                "description": "Resource Id of the order resource that triggered this transaction, if applicable."
                              },
                              "financialInstrument": {
                                "type": "object",
                                "properties": {
                                  "isin": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "normalisedPrice": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "object",
                                        "properties": {
                                          "amount": {
                                            "type": "number",
                                            "description": "The amount value",
                                            "example": 11
                                          },
                                          "currency": {
                                            "type": "string",
                                            "description": "The amount currency",
                                            "example": "ILS"
                                          }
                                        }
                                      },
                                      "priceDateTime": {
                                        "type": "string"
                                      },
                                      "priceType": {
                                        "type": "string",
                                        "enum": [
                                          "BIDE",
                                          "OFFR",
                                          "NAVL",
                                          "CREA",
                                          "CANC",
                                          "INTE",
                                          "SWNG",
                                          "MIDD",
                                          "RINV",
                                          "SWIC",
                                          "MRKT",
                                          "INDC",
                                          "DDVR",
                                          "ACTU"
                                        ]
                                      },
                                      "sourceOfPrice": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "FUND",
                                              "LMAR",
                                              "THEO",
                                              "VEND"
                                            ]
                                          },
                                          "mic": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "unitsNumber": {
                                    "type": "number"
                                  },
                                  "balanceType": {
                                    "type": "string",
                                    "enum": [
                                      "AVAI",
                                      "AWAS",
                                      "BTRA",
                                      "BLOK",
                                      "BLOV",
                                      "BLCA",
                                      "BLOT",
                                      "BORR",
                                      "COLI",
                                      "COLO",
                                      "MARG",
                                      "DRAW",
                                      "COLA",
                                      "TRAN",
                                      "ISSU",
                                      "DIRT",
                                      "LOAN",
                                      "REGO",
                                      "BODE",
                                      "BORE",
                                      "PEDA",
                                      "PECA",
                                      "PEND",
                                      "PDMT",
                                      "PDUM",
                                      "LODE",
                                      "LORE",
                                      "PENR",
                                      "PRMT",
                                      "PRUM",
                                      "PLED",
                                      "QUAS",
                                      "NOMI",
                                      "RSTR",
                                      "SPOS",
                                      "CLEN",
                                      "OTHR",
                                      "UNRG",
                                      "WDOC"
                                    ]
                                  },
                                  "averageBuyingPrice": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "number",
                                        "description": "The amount value",
                                        "example": 11
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "The amount currency",
                                        "example": "ILS"
                                      }
                                    }
                                  },
                                  "details": {
                                    "type": "string",
                                    "properties": {
                                      "symbol": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "description": "Financial instrument that was transferred within the transaction."
                              },
                              "transactionTypeCode": {
                                "type": "string",
                                "description": "Type of the transaction as code or as a proprietary string. For the code, the following values are supported: BOLE Transaction relates to lending/borrowing. CLAI Transaction relates to a market claim following a corporate action. COLL Transaction relates to collateral. CORP Transaction relates to corporate action. SETT Transaction relates to settlement and clearing."
                              },
                              "transactionTypeProperty": {
                                "type": "string",
                                "description": "Type of the transaction as code or as a proprietary string. For the code, the following values are supported: BOLE Transaction relates to lending/borrowing. CLAI Transaction relates to a market claim following a corporate action. COLL Transaction relates to collateral. CORP Transaction relates to corporate action. SETT Transaction relates to settlement and clearing."
                              },
                              "amountIncludesFees": {
                                "type": "boolean",
                                "description": "Indicates whether the transactionAmount is including fees"
                              },
                              "amountIncludesTaxes": {
                                "type": "boolean",
                                "description": "Indicates whether the transactionAmount is including taxes"
                              },
                              "relatedFees": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "The amount value",
                                          "example": 11
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    },
                                    "typeCode": {
                                      "type": "string",
                                      "description": "Initially, the following codes are defined to indicate different fee types in the context of Securities transactions. Please note, that these codes are not based on an ISO code list and might be changed in later versions of this document: transactionFee, brokerageFee, managementFee, courtage, custodyFee, exchangeFee, thirdPartyFee, otherFee",
                                      "enum": [
                                        "transactionFee",
                                        "brokerageFee",
                                        "managementFee",
                                        "courtage",
                                        "custodyFee",
                                        "exchangeFee",
                                        "thirdPartyFee",
                                        "otherFee"
                                      ]
                                    },
                                    "typeProprietary": {
                                      "type": "string",
                                      "description": "Proprietary fee type"
                                    },
                                    "feeType": {
                                      "type": "string",
                                      "description": "The type of the fee"
                                    },
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "description": "Only allowed if amountIncludesFees = true. In that case Details of the fees that have been applied to this transaction (and therefore represent additional costs of the transaction beyond the transactionAmount). Fees with positive amount are debited by the PSU, only in the rare case of a fee credited to the PSU (e.g. in case of a reversal) negative amounts are used."
                              },
                              "reversalIndicator": {
                                "type": "boolean",
                                "description": "Indicates whether it is the reversal of a previously reported movement."
                              },
                              "reversedTransactionId": {
                                "type": "string",
                                "description": "transactionId of the reversed transaction, if applicable and supported by the ASPSP."
                              },
                              "unitsNumberBeforeTx": {
                                "type": "number",
                                "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction before this transaction has been executed. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
                              },
                              "unitsNominalBeforeTx": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount value",
                                    "example": 11
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The amount currency",
                                    "example": "ILS"
                                  }
                                }
                              },
                              "unitsNumberAfterTx": {
                                "type": "number",
                                "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction after this transaction has been executed. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
                              },
                              "unitsNominalAfterTx": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount value",
                                    "example": 11
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The amount currency",
                                    "example": "ILS"
                                  }
                                }
                              },
                              "accruedInterest": {
                                "type": "object",
                                "properties": {
                                  "daysAccrued": {
                                    "type": "number",
                                    "description": "Specifies the number of days used for calculating the accrued interest amount."
                                  },
                                  "amounts": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "The amount value",
                                          "example": 11
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    },
                                    "description": "Amount of the accrued interest. Each item represents the same monetary value in different currencies, e.g. account currency, currency of the security's denomination."
                                  }
                                }
                              },
                              "details": {
                                "type": "string",
                                "description": "Additional details related to the transaction."
                              }
                            }
                          },
                          "amount": {
                            "type": "object",
                            "properties": {
                              "originalAmount": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount value",
                                    "example": 11
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The amount currency",
                                    "example": "ILS"
                                  }
                                }
                              },
                              "chargedAmount": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount value",
                                    "example": 11
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The amount currency",
                                    "example": "ILS"
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "The TX description"
                              },
                              "additionalInfo": {
                                "type": "string",
                                "description": "Any additional TX info"
                              }
                            }
                          },
                          "category": {
                            "type": "object",
                            "description": "Categorized TX label",
                            "properties": {
                              "main": {
                                "type": "string",
                                "description": "Main category"
                              },
                              "sub": {
                                "type": "string",
                                "description": "Subcategory"
                              }
                            }
                          },
                          "changedCategory": {
                            "type": "object",
                            "description": "Details about the changed category of the transaction.",
                            "properties": {
                              "main": {
                                "type": "string",
                                "description": "Main changed category"
                              },
                              "sub": {
                                "type": "string",
                                "description": "Sub changed category"
                              }
                            }
                          },
                          "installments": {
                            "type": "object",
                            "description": "Details about installments.",
                            "properties": {
                              "number": {
                                "type": "number",
                                "description": "The current installment number"
                              },
                              "total": {
                                "type": "number",
                                "description": "The total number of installments"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "description": "Transaction type, NORMAL or INSTALLMENT"
                          },
                          "date": {
                            "type": "object",
                            "properties": {
                              "valueDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "bookingDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "transactionDate": {
                                "type": "string",
                                "format": "date"
                              }
                            }
                          },
                          "markupFee": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "description": "The amount of the markup fee."
                              },
                              "currency": {
                                "type": "string",
                                "description": "The currency of the markup fee."
                              }
                            }
                          },
                          "merchantName": {
                            "type": "string",
                            "description": "The name of the merchant involved in the transaction."
                          },
                          "details": {
                            "type": "string",
                            "description": "Detailed information about the transaction."
                          },
                          "isInvoiced": {
                            "type": "boolean",
                            "description": "Indicates whether the transaction is invoiced."
                          },
                          "code": {
                            "type": "string",
                            "description": "A code representing the transaction."
                          },
                          "merchantAddress": {
                            "type": "object",
                            "properties": {
                              "streetName": {
                                "type": "string",
                                "description": "The street name of the merchant."
                              },
                              "buildingNumber": {
                                "type": "string",
                                "description": "The building number of the merchant."
                              },
                              "townName": {
                                "type": "string",
                                "description": "The town name of the merchant."
                              },
                              "postCode": {
                                "type": "string",
                                "description": "The postal code of the merchant."
                              },
                              "country": {
                                "type": "string",
                                "description": "The country of the merchant."
                              }
                            }
                          },
                          "classification": {
                            "type": "object",
                            "description": "Details about the classification of the transaction.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The type of classification (e.g., REGULAR_EXPENSE)."
                              },
                              "source": {
                                "type": "string",
                                "description": "The source of classification (e.g., SYSTEM)."
                              }
                            }
                          },
                          "changedClassification": {
                            "type": "object",
                            "description": "Details about any changes in the classification of the transaction.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The type of classification (e.g., REGULAR_EXPENSE)."
                              },
                              "source": {
                                "type": "string",
                                "description": "The source of classification (e.g., USER)."
                              }
                            }
                          },
                          "labels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Labels associated with the transaction."
                          },
                          "balancePerEndDay": {
                            "type": "number",
                            "description": "The balance at the end of the day for the transaction."
                          },
                          "isDuplicate": {
                            "type": "boolean",
                            "description": "Indicates if the transaction is a duplicate - when a user connects the same credit card from a bank provider and from a credit card \n when not send includeDuplicates filter the default will be that no duplicate transactions will be returned \n if the transactions for the user contains more than 500 items, duplicates will be returned regardless of the used filters"
                          },
                          "creditorAccount": {
                            "type": "object",
                            "properties": {
                              "iban": {
                                "type": "string",
                                "description": "IBAN of the creditor account"
                              },
                              "bban": {
                                "type": "string",
                                "description": "BBAN of the creditor account"
                              },
                              "maskedPan": {
                                "type": "string",
                                "description": "Masked PAN of the creditor account"
                              },
                              "msisdn": {
                                "type": "string",
                                "description": "MSISDN of the creditor account"
                              },
                              "currency": {
                                "type": "string",
                                "description": "Currency of the creditor account"
                              },
                              "other": {
                                "type": "string",
                                "description": "Other of the creditor account"
                              },
                              "cashAccountType": {
                                "type": "string",
                                "description": "Type of the creditor account"
                              }
                            }
                          },
                          "debtorAccount": {
                            "type": "object",
                            "properties": {
                              "iban": {
                                "type": "string",
                                "description": "IBAN of the debtor account"
                              },
                              "bban": {
                                "type": "string",
                                "description": "BBAN of the debtor account"
                              },
                              "maskedPan": {
                                "type": "string",
                                "description": "Masked PAN of the debtor account"
                              },
                              "msisdn": {
                                "type": "string",
                                "description": "MSISDN of the debtor account"
                              },
                              "currency": {
                                "type": "string",
                                "description": "Currency of the debtor account"
                              },
                              "other": {
                                "type": "string",
                                "description": "Other of the debtor account"
                              },
                              "cashAccountType": {
                                "type": "string",
                                "description": "Type of the debtor account"
                              }
                            }
                          },
                          "endToEndId": {
                            "type": "string",
                            "description": "The end-to-end identifier of the transaction.\nThis field is crucial for transferring the reference number of the payment, ensuring traceability and consistency across different financial institutions and systems."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "userId is not allowed in query for non-admin users"
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Route or entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/data/transactions/{SK}": {
      "get": {
        "summary": "Get transactions by ID",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:transactions"
            ]
          }
        ],
        "parameters": [
          {
            "name": "SK",
            "in": "path",
            "required": true,
            "description": "A unique transaction SK",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "A unique identifier for the transaction"
                    },
                    "SK": {
                      "type": "string",
                      "description": "Secondary key for the transaction, indicating the specific type of transaction and related metadata."
                    },
                    "userId": {
                      "type": "string",
                      "description": "A unique identifier for the user"
                    },
                    "orgId": {
                      "type": "string",
                      "description": "A unique identifier for the organization"
                    },
                    "connectionId": {
                      "type": "string",
                      "description": "A unique identifier for the connection"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "A unique identifier for the account"
                    },
                    "providerId": {
                      "type": "string",
                      "description": "A unique identifier for the provider"
                    },
                    "transactionProviderIdentifier": {
                      "type": "string",
                      "description": "A unique identifier for the provider TX"
                    },
                    "accountNumber": {
                      "type": "string",
                      "description": "A bank account number"
                    },
                    "status": {
                      "type": "string",
                      "description": "The transaction status"
                    },
                    "categoryCode": {
                      "type": "string",
                      "description": "Code representing the category of the transaction (MCC code or other)."
                    },
                    "securityDetails": {
                      "type": "object",
                      "properties": {
                        "unitsNumber": {
                          "type": "number",
                          "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
                        },
                        "unitsNominal": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "description": "The amount value",
                              "example": 11
                            },
                            "currency": {
                              "type": "string",
                              "description": "The amount currency",
                              "example": "ILS"
                            }
                          }
                        },
                        "placeOfTrade": {
                          "type": "object",
                          "properties": {
                            "marketIdentifierProprietary": {
                              "type": "string",
                              "description": "Proprietary Identifier of the market place."
                            },
                            "mic": {
                              "type": "string",
                              "description": "ISO 10383 code of the market place"
                            }
                          }
                        },
                        "relevantDates": {
                          "type": "object",
                          "properties": {
                            "effectiveSettlementDate": {
                              "type": "string",
                              "format": "date",
                              "description": "The effective settlement date"
                            },
                            "performanceDate": {
                              "type": "string",
                              "format": "date",
                              "description": "The performance date"
                            },
                            "settlementDate": {
                              "type": "string",
                              "format": "date",
                              "description": "The settlement date"
                            },
                            "valueDate": {
                              "type": "string",
                              "format": "date",
                              "description": "The value date"
                            },
                            "bookingDate": {
                              "type": "string",
                              "format": "date",
                              "description": "The booking date"
                            },
                            "transactionsDate": {
                              "type": "string",
                              "format": "date",
                              "description": "The transaction date"
                            }
                          },
                          "description": "At least one of the listed date types must be present."
                        },
                        "orderId": {
                          "type": "string",
                          "description": "Resource Id of the order resource that triggered this transaction, if applicable."
                        },
                        "financialInstrument": {
                          "type": "object",
                          "properties": {
                            "isin": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "normalisedPrice": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "type": "number",
                                      "description": "The amount value",
                                      "example": 11
                                    },
                                    "currency": {
                                      "type": "string",
                                      "description": "The amount currency",
                                      "example": "ILS"
                                    }
                                  }
                                },
                                "priceDateTime": {
                                  "type": "string"
                                },
                                "priceType": {
                                  "type": "string",
                                  "enum": [
                                    "BIDE",
                                    "OFFR",
                                    "NAVL",
                                    "CREA",
                                    "CANC",
                                    "INTE",
                                    "SWNG",
                                    "MIDD",
                                    "RINV",
                                    "SWIC",
                                    "MRKT",
                                    "INDC",
                                    "DDVR",
                                    "ACTU"
                                  ]
                                },
                                "sourceOfPrice": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "FUND",
                                        "LMAR",
                                        "THEO",
                                        "VEND"
                                      ]
                                    },
                                    "mic": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "unitsNumber": {
                              "type": "number"
                            },
                            "balanceType": {
                              "type": "string",
                              "enum": [
                                "AVAI",
                                "AWAS",
                                "BTRA",
                                "BLOK",
                                "BLOV",
                                "BLCA",
                                "BLOT",
                                "BORR",
                                "COLI",
                                "COLO",
                                "MARG",
                                "DRAW",
                                "COLA",
                                "TRAN",
                                "ISSU",
                                "DIRT",
                                "LOAN",
                                "REGO",
                                "BODE",
                                "BORE",
                                "PEDA",
                                "PECA",
                                "PEND",
                                "PDMT",
                                "PDUM",
                                "LODE",
                                "LORE",
                                "PENR",
                                "PRMT",
                                "PRUM",
                                "PLED",
                                "QUAS",
                                "NOMI",
                                "RSTR",
                                "SPOS",
                                "CLEN",
                                "OTHR",
                                "UNRG",
                                "WDOC"
                              ]
                            },
                            "averageBuyingPrice": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "number",
                                  "description": "The amount value",
                                  "example": 11
                                },
                                "currency": {
                                  "type": "string",
                                  "description": "The amount currency",
                                  "example": "ILS"
                                }
                              }
                            },
                            "details": {
                              "type": "string",
                              "properties": {
                                "symbol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "description": "Financial instrument that was transferred within the transaction."
                        },
                        "transactionTypeCode": {
                          "type": "string",
                          "description": "Type of the transaction as code or as a proprietary string. For the code, the following values are supported: BOLE Transaction relates to lending/borrowing. CLAI Transaction relates to a market claim following a corporate action. COLL Transaction relates to collateral. CORP Transaction relates to corporate action. SETT Transaction relates to settlement and clearing."
                        },
                        "transactionTypeProperty": {
                          "type": "string",
                          "description": "Type of the transaction as code or as a proprietary string. For the code, the following values are supported: BOLE Transaction relates to lending/borrowing. CLAI Transaction relates to a market claim following a corporate action. COLL Transaction relates to collateral. CORP Transaction relates to corporate action. SETT Transaction relates to settlement and clearing."
                        },
                        "amountIncludesFees": {
                          "type": "boolean",
                          "description": "Indicates whether the transactionAmount is including fees"
                        },
                        "amountIncludesTaxes": {
                          "type": "boolean",
                          "description": "Indicates whether the transactionAmount is including taxes"
                        },
                        "relatedFees": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount value",
                                    "example": 11
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The amount currency",
                                    "example": "ILS"
                                  }
                                }
                              },
                              "typeCode": {
                                "type": "string",
                                "description": "Initially, the following codes are defined to indicate different fee types in the context of Securities transactions. Please note, that these codes are not based on an ISO code list and might be changed in later versions of this document: transactionFee, brokerageFee, managementFee, courtage, custodyFee, exchangeFee, thirdPartyFee, otherFee",
                                "enum": [
                                  "transactionFee",
                                  "brokerageFee",
                                  "managementFee",
                                  "courtage",
                                  "custodyFee",
                                  "exchangeFee",
                                  "thirdPartyFee",
                                  "otherFee"
                                ]
                              },
                              "typeProprietary": {
                                "type": "string",
                                "description": "Proprietary fee type"
                              },
                              "feeType": {
                                "type": "string",
                                "description": "The type of the fee"
                              },
                              "_links": {
                                "type": "object",
                                "properties": {
                                  "self": {
                                    "type": "object",
                                    "properties": {
                                      "href": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "description": "Only allowed if amountIncludesFees = true. In that case Details of the fees that have been applied to this transaction (and therefore represent additional costs of the transaction beyond the transactionAmount). Fees with positive amount are debited by the PSU, only in the rare case of a fee credited to the PSU (e.g. in case of a reversal) negative amounts are used."
                        },
                        "reversalIndicator": {
                          "type": "boolean",
                          "description": "Indicates whether it is the reversal of a previously reported movement."
                        },
                        "reversedTransactionId": {
                          "type": "string",
                          "description": "transactionId of the reversed transaction, if applicable and supported by the ASPSP."
                        },
                        "unitsNumberBeforeTx": {
                          "type": "number",
                          "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction before this transaction has been executed. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
                        },
                        "unitsNominalBeforeTx": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "description": "The amount value",
                              "example": 11
                            },
                            "currency": {
                              "type": "string",
                              "description": "The amount currency",
                              "example": "ILS"
                            }
                          }
                        },
                        "unitsNumberAfterTx": {
                          "type": "number",
                          "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction after this transaction has been executed. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
                        },
                        "unitsNominalAfterTx": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "description": "The amount value",
                              "example": 11
                            },
                            "currency": {
                              "type": "string",
                              "description": "The amount currency",
                              "example": "ILS"
                            }
                          }
                        },
                        "accruedInterest": {
                          "type": "object",
                          "properties": {
                            "daysAccrued": {
                              "type": "number",
                              "description": "Specifies the number of days used for calculating the accrued interest amount."
                            },
                            "amounts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount value",
                                    "example": 11
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The amount currency",
                                    "example": "ILS"
                                  }
                                }
                              },
                              "description": "Amount of the accrued interest. Each item represents the same monetary value in different currencies, e.g. account currency, currency of the security's denomination."
                            }
                          }
                        },
                        "details": {
                          "type": "string",
                          "description": "Additional details related to the transaction."
                        }
                      }
                    },
                    "amount": {
                      "type": "object",
                      "properties": {
                        "originalAmount": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "description": "The amount value",
                              "example": 11
                            },
                            "currency": {
                              "type": "string",
                              "description": "The amount currency",
                              "example": "ILS"
                            }
                          }
                        },
                        "chargedAmount": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "description": "The amount value",
                              "example": 11
                            },
                            "currency": {
                              "type": "string",
                              "description": "The amount currency",
                              "example": "ILS"
                            }
                          }
                        }
                      }
                    },
                    "description": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "The TX description"
                        },
                        "additionalInfo": {
                          "type": "string",
                          "description": "Any additional TX info"
                        }
                      }
                    },
                    "category": {
                      "type": "object",
                      "description": "Categorized TX label",
                      "properties": {
                        "main": {
                          "type": "string",
                          "description": "Main category"
                        },
                        "sub": {
                          "type": "string",
                          "description": "Subcategory"
                        }
                      }
                    },
                    "changedCategory": {
                      "type": "object",
                      "description": "Details about the changed category of the transaction.",
                      "properties": {
                        "main": {
                          "type": "string",
                          "description": "Main changed category"
                        },
                        "sub": {
                          "type": "string",
                          "description": "Sub changed category"
                        }
                      }
                    },
                    "installments": {
                      "type": "object",
                      "description": "Details about installments.",
                      "properties": {
                        "number": {
                          "type": "number",
                          "description": "The current installment number"
                        },
                        "total": {
                          "type": "number",
                          "description": "The total number of installments"
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Transaction type, NORMAL or INSTALLMENT"
                    },
                    "date": {
                      "type": "object",
                      "properties": {
                        "valueDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "bookingDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "transactionDate": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    },
                    "markupFee": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "description": "The amount of the markup fee."
                        },
                        "currency": {
                          "type": "string",
                          "description": "The currency of the markup fee."
                        }
                      }
                    },
                    "merchantName": {
                      "type": "string",
                      "description": "The name of the merchant involved in the transaction."
                    },
                    "details": {
                      "type": "string",
                      "description": "Detailed information about the transaction."
                    },
                    "isInvoiced": {
                      "type": "boolean",
                      "description": "Indicates whether the transaction is invoiced."
                    },
                    "code": {
                      "type": "string",
                      "description": "A code representing the transaction."
                    },
                    "merchantAddress": {
                      "type": "object",
                      "properties": {
                        "streetName": {
                          "type": "string",
                          "description": "The street name of the merchant."
                        },
                        "buildingNumber": {
                          "type": "string",
                          "description": "The building number of the merchant."
                        },
                        "townName": {
                          "type": "string",
                          "description": "The town name of the merchant."
                        },
                        "postCode": {
                          "type": "string",
                          "description": "The postal code of the merchant."
                        },
                        "country": {
                          "type": "string",
                          "description": "The country of the merchant."
                        }
                      }
                    },
                    "classification": {
                      "type": "object",
                      "description": "Details about the classification of the transaction.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of classification (e.g., REGULAR_EXPENSE)."
                        },
                        "source": {
                          "type": "string",
                          "description": "The source of classification (e.g., SYSTEM)."
                        }
                      }
                    },
                    "changedClassification": {
                      "type": "object",
                      "description": "Details about any changes in the classification of the transaction.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of classification (e.g., REGULAR_EXPENSE)."
                        },
                        "source": {
                          "type": "string",
                          "description": "The source of classification (e.g., USER)."
                        }
                      }
                    },
                    "labels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Labels associated with the transaction."
                    },
                    "balancePerEndDay": {
                      "type": "number",
                      "description": "The balance at the end of the day for the transaction."
                    },
                    "isDuplicate": {
                      "type": "boolean",
                      "description": "Indicates if the transaction is a duplicate - when a user connects the same credit card from a bank provider and from a credit card \n when not send includeDuplicates filter the default will be that no duplicate transactions will be returned \n if the transactions for the user contains more than 500 items, duplicates will be returned regardless of the used filters"
                    },
                    "creditorAccount": {
                      "type": "object",
                      "properties": {
                        "iban": {
                          "type": "string",
                          "description": "IBAN of the creditor account"
                        },
                        "bban": {
                          "type": "string",
                          "description": "BBAN of the creditor account"
                        },
                        "maskedPan": {
                          "type": "string",
                          "description": "Masked PAN of the creditor account"
                        },
                        "msisdn": {
                          "type": "string",
                          "description": "MSISDN of the creditor account"
                        },
                        "currency": {
                          "type": "string",
                          "description": "Currency of the creditor account"
                        },
                        "other": {
                          "type": "string",
                          "description": "Other of the creditor account"
                        },
                        "cashAccountType": {
                          "type": "string",
                          "description": "Type of the creditor account"
                        }
                      }
                    },
                    "debtorAccount": {
                      "type": "object",
                      "properties": {
                        "iban": {
                          "type": "string",
                          "description": "IBAN of the debtor account"
                        },
                        "bban": {
                          "type": "string",
                          "description": "BBAN of the debtor account"
                        },
                        "maskedPan": {
                          "type": "string",
                          "description": "Masked PAN of the debtor account"
                        },
                        "msisdn": {
                          "type": "string",
                          "description": "MSISDN of the debtor account"
                        },
                        "currency": {
                          "type": "string",
                          "description": "Currency of the debtor account"
                        },
                        "other": {
                          "type": "string",
                          "description": "Other of the debtor account"
                        },
                        "cashAccountType": {
                          "type": "string",
                          "description": "Type of the debtor account"
                        }
                      }
                    },
                    "endToEndId": {
                      "type": "string",
                      "description": "The end-to-end identifier of the transaction.\nThis field is crucial for transferring the reference number of the payment, ensuring traceability and consistency across different financial institutions and systems."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "transactionId is missing from request params"
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Route or entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update a transaction by ID",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "update:transactions"
            ]
          }
        ],
        "parameters": [
          {
            "name": "SK",
            "in": "path",
            "required": true,
            "description": "A unique transaction identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transactionSk": {
                    "type": "string"
                  },
                  "customerId": {
                    "type": "string"
                  },
                  "mainCategory": {
                    "type": "string",
                    "nullable": true
                  },
                  "subCategory": {
                    "type": "string",
                    "nullable": true
                  },
                  "classification": {
                    "type": "string",
                    "nullable": true
                  },
                  "classificationSource": {
                    "type": "string",
                    "nullable": true
                  },
                  "labels": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [
                  "transactionSk"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction successfully updated"
          },
          "400": {
            "description": "Invalid request format or missing required fields"
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to perform this action"
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/merchants": {
      "get": {
        "summary": "Get all merchants",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:merchants"
            ]
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Limit the amount of merchants returned by the server (max value is 500)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Order for the sorting algorithm, accepts -1 or 1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "nextPage",
            "in": "query",
            "required": false,
            "description": "Next page value for pagination",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextPage": {
                      "type": "string",
                      "nullable": true,
                      "description": "Represents the total number of items that exists after full pagination. The max merchant per request is 500"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The merchant name"
                          },
                          "bban": {
                            "type": "string",
                            "description": "The merchant bank account bban"
                          },
                          "iban": {
                            "type": "string",
                            "description": "The merchant bank account iban"
                          },
                          "id": {
                            "type": "string",
                            "description": "The merchant unique identifier"
                          },
                          "psuId": {
                            "type": "string",
                            "description": "National id of the merchant"
                          },
                          "psuCorporateId": {
                            "type": "string",
                            "description": "Business id of the merchant"
                          },
                          "phoneNumber": {
                            "type": "string",
                            "description": "Phone number of the merchant"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The merchant display name"
                          },
                          "logoUrl": {
                            "type": "string",
                            "description": "The url of the logo file"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The timestamp in UTC when the marchant was created"
                          },
                          "isDeleted": {
                            "type": "boolean",
                            "description": "Indicates if the merchant is deleted"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "orgId was not provided"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to perform this action"
          },
          "404": {
            "description": "Missing ordId or userId in token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a merchant",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "create:merchants"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The merchant name",
                    "example": "Company LTD"
                  },
                  "bban": {
                    "type": "string",
                    "description": "The merchant bank account bban",
                    "example": "10-944-50151142"
                  },
                  "iban": {
                    "type": "string",
                    "description": "The merchant bank account iban",
                    "example": "IL123456789012345678901"
                  },
                  "psuId": {
                    "type": "string",
                    "description": "The merchant national id",
                    "example": "321765667"
                  },
                  "psuCorporateId": {
                    "type": "string",
                    "description": "The merchant business id",
                    "example": "321987876"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "The merchant phone number",
                    "example": "0543765674"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The merchant display name"
                  },
                  "logo": {
                    "type": "object",
                    "description": "A logo of the merchant",
                    "properties": {
                      "file": {
                        "type": "string",
                        "description": "The file in base64"
                      },
                      "fileName": {
                        "type": "string",
                        "description": "The file name"
                      },
                      "fileType": {
                        "type": "string",
                        "description": "The file type"
                      }
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the new merchant"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format or invalid body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Missing ordId or userId in token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/merchants/{merchantId}": {
      "put": {
        "summary": "Update a merchant",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "update:merchants"
            ]
          }
        ],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "description": "The merchant unique identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The merchant name"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The merchant display name"
                  },
                  "logo": {
                    "type": "object",
                    "description": "A logo of the merchant",
                    "properties": {
                      "file": {
                        "type": "string",
                        "description": "The file in base64"
                      },
                      "fileName": {
                        "type": "string",
                        "description": "The file name"
                      },
                      "fileType": {
                        "type": "string",
                        "description": "The file type"
                      }
                    }
                  },
                  "bban": {
                    "type": "string",
                    "description": "The merchant bank account bban"
                  },
                  "iban": {
                    "type": "string",
                    "description": "The merchant bank account iban"
                  },
                  "psuId": {
                    "type": "string",
                    "description": "The merchant national id",
                    "example": "321765667"
                  },
                  "psuCorporateId": {
                    "type": "string",
                    "description": "The merchant business id",
                    "example": "321987876"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "The merchant phone number",
                    "example": "0543765674"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The merchant name"
                    },
                    "bban": {
                      "type": "string",
                      "description": "The merchant bank account bban"
                    },
                    "iban": {
                      "type": "string",
                      "description": "The merchant bank account iban"
                    },
                    "id": {
                      "type": "string",
                      "description": "The merchant unique identifier"
                    },
                    "psuId": {
                      "type": "string",
                      "description": "National id of the merchant"
                    },
                    "psuCorporateId": {
                      "type": "string",
                      "description": "Business id of the merchant"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "Phone number of the merchant"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "The merchant display name"
                    },
                    "logoUrl": {
                      "type": "string",
                      "description": "The url of the logo file"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "The timestamp in UTC when the marchant was created"
                    },
                    "isDeleted": {
                      "type": "boolean",
                      "description": "Indicates if the merchant is deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format or parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "Missing ordId or userId in token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get merchant by id",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "read:merchants"
            ]
          }
        ],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "description": "The merchant unique identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The merchant name"
                    },
                    "bban": {
                      "type": "string",
                      "description": "The merchant bank account bban"
                    },
                    "iban": {
                      "type": "string",
                      "description": "The merchant bank account iban"
                    },
                    "id": {
                      "type": "string",
                      "description": "The merchant unique identifier"
                    },
                    "psuId": {
                      "type": "string",
                      "description": "National id of the merchant"
                    },
                    "psuCorporateId": {
                      "type": "string",
                      "description": "Business id of the merchant"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "Phone number of the merchant"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "The merchant display name"
                    },
                    "logoUrl": {
                      "type": "string",
                      "description": "The url of the logo file"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "The timestamp in UTC when the marchant was created"
                    },
                    "isDeleted": {
                      "type": "boolean",
                      "description": "Indicates if the merchant is deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to perform this action"
          },
          "404": {
            "description": "Missing ordId or userId in token"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete merchant by ID",
        "security": [
          {
            "oAuth2ClientCredentials": [
              "delete:merchants"
            ]
          }
        ],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "description": "The merchant unique identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access - Invalid access token"
          },
          "403": {
            "description": "Forbidden - Access token missing the required permissions to preform this action"
          },
          "404": {
            "description": "merchant not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oAuth2ClientCredentials": {
        "type": "oauth2",
        "description": "See https://docs.open-finance.ai/reference/post_token",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.open-finance.ai/oauth/token",
            "scopes": {
              "read:transactions": "Read user transactions",
              "read:accounts": "Read user accounts",
              "read:connections": "Read user connections",
              "create:connections": "Create a new connection",
              "update:connections": "Update a connection",
              "delete:connections": "Delete a connection",
              "read:providers": "Read all providers",
              "delete:organization_connections": "Delete organization connection",
              "read:organization_transactions": "Read organization transactions",
              "read:organization_accounts": "Read organization accounts",
              "read:organization_connections": "Read organization connections",
              "create:organization_connections": "Create a new organization connection"
            }
          }
        }
      }
    },
    "schemas": {
      "AccountVerificationReport": {
        "type": "object",
        "properties": {
          "accountNumberSent": {
            "type": "string",
            "description": "The account number that was asked to be verified"
          },
          "psuId": {
            "type": "string",
            "description": "The id of the person asked to be verified",
            "minLength": 5,
            "maxLength": 9,
            "pattern": "^[0-9]+$"
          },
          "orgId": {
            "type": "string",
            "description": "The organization id"
          },
          "userId": {
            "type": "string",
            "description": "The user id"
          },
          "reportId": {
            "type": "string",
            "description": "The report id"
          },
          "verified": {
            "type": "boolean",
            "description": "Was the account verified or not"
          },
          "verificationFailedReason": {
            "type": "string",
            "description": "If the verification failed, what was the reason"
          }
        }
      },
      "OpenBankingReport": {
        "type": "object",
        "properties": {
          "openBankingReportId": {
            "type": "string",
            "description": "A unique identifier for the report"
          },
          "openBankingReportBalances": {
            "type": "object",
            "properties": {
              "incomes": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number",
                    "description": "The total amount of incomes"
                  },
                  "incomeFromSalary": {
                    "type": "number",
                    "description": "The total amount of incomes from salary"
                  },
                  "incomeFromChecks": {
                    "type": "number",
                    "description": "The total amount of incomes from checks"
                  },
                  "regularIncomesSum": {
                    "type": "number",
                    "description": "The total amount of regular incomes"
                  }
                }
              },
              "expenses": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number",
                    "description": "The total amount of expenses"
                  },
                  "expensesFromMortgage": {
                    "type": "number",
                    "description": "The total amount of expenses on mortgage"
                  },
                  "expensesFromChecks": {
                    "type": "number",
                    "description": "The total amount of expenses from checks"
                  },
                  "regularExpensesSum": {
                    "type": "number",
                    "description": "The total amount of regular expenses"
                  }
                }
              },
              "canceledChecks": {
                "type": "number",
                "description": "Number of times checks were canceled"
              },
              "standingOrdersReturns": {
                "type": "number",
                "description": "Number of times standing orders were returned"
              },
              "irregularWarnings": {
                "type": "number",
                "description": "Number of irregular warnings"
              },
              "accountForeclosure": {
                "type": "number",
                "description": "Number of account foreclosures"
              },
              "nsf": {
                "type": "number",
                "description": "Number of NSF times"
              },
              "transfersForFallingBehind": {
                "type": "number",
                "description": "Number of times money was transferred to cover falling behind"
              },
              "limitationAlert": {
                "type": "number",
                "description": "Number of limitation alerts"
              },
              "fallingBehindWarnings": {
                "type": "number",
                "description": "Number of falling behind warnings"
              }
            }
          },
          "MonthlyReportGeneralDetails": {
            "type": "object",
            "properties": {
              "loans": {
                "type": "object",
                "properties": {
                  "totalLoansAmount": {
                    "type": "number",
                    "description": "Current total loans amount"
                  },
                  "bankLoans": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "description": "The total amount of the loan"
                        }
                      }
                    }
                  },
                  "creditCardLoans": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "description": "The total amount of the loan"
                        }
                      }
                    }
                  }
                }
              },
              "savings": {
                "type": "object",
                "properties": {
                  "totalSavingsAmount": {
                    "type": "number",
                    "description": "Current total savings amount"
                  },
                  "savingsDetails": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "Total amount of savings account"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the savings accounts"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "accounts": {
                "type": "object",
                "properties": {
                  "checking": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "A unique identifier for the account"
                        },
                        "userId": {
                          "type": "string",
                          "description": "A unique identifier for the user"
                        },
                        "providerId": {
                          "type": "string",
                          "description": "A unique identifier for the provider"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "A unique identifier for the connection"
                        },
                        "accountNumber": {
                          "type": "string",
                          "description": "A bank account number"
                        },
                        "product": {
                          "type": "string",
                          "description": "The product of this account"
                        },
                        "parsedAccount": {
                          "type": "object",
                          "description": "Account iban number parsed",
                          "properties": {
                            "bank": {
                              "type": "string",
                              "description": "Bank number"
                            },
                            "branch": {
                              "type": "string",
                              "description": "Branch number"
                            },
                            "number": {
                              "type": "string",
                              "description": "Account number"
                            }
                          }
                        },
                        "accountType": {
                          "type": "string",
                          "description": "The type of the account"
                        },
                        "creditStatus": {
                          "type": "string",
                          "enum": [
                            "deleted",
                            "enabled",
                            "disabled"
                          ],
                          "description": "The status of a credit card"
                        },
                        "cardDueDate": {
                          "type": "string",
                          "description": "A card due date"
                        },
                        "currency": {
                          "type": "string",
                          "description": "The currency of which the account transacts in"
                        },
                        "ownerInfo": {
                          "type": "object",
                          "description": "Information of the account owner",
                          "properties": {
                            "nationalId": {
                              "type": "string",
                              "description": "Legal national ID"
                            },
                            "fullName": {
                              "type": "string",
                              "description": "Legal full name"
                            }
                          }
                        },
                        "accountName": {
                          "type": "string",
                          "description": "The name of the account"
                        },
                        "balances": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "description": "The amount value",
                                "example": 11
                              },
                              "currency": {
                                "type": "string",
                                "description": "The amount currency",
                                "example": "ILS"
                              }
                            }
                          }
                        },
                        "interst": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rate": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "precentage": {
                                      "type": "number",
                                      "example": 4.5
                                    }
                                  }
                                },
                                "description": "Array of the different interest rates"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the interest. FIXD or INDE"
                              },
                              "relatedIndecies": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "index": {
                                      "type": "string",
                                      "description": "The index of the variable interest, if there is one"
                                    },
                                    "additionalInformation": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "currency": {
                                "type": "string",
                                "description": "The amount currency",
                                "example": "ILS"
                              }
                            }
                          },
                          "description": "Interest information, only for savings and loans"
                        },
                        "relatedDates": {
                          "type": "object",
                          "properties": {
                            "contractAvailabilityDate": {
                              "type": "string"
                            },
                            "contractEndDate": {
                              "type": "string"
                            },
                            "contractStartDate": {
                              "type": "string"
                            }
                          }
                        },
                        "usage": {
                          "type": "string",
                          "description": "The type of usage of the account. Private or business"
                        },
                        "creditLimit": {
                          "type": "number",
                          "description": "The credit limit of the account"
                        },
                        "transactions": {
                          "type": "number",
                          "description": "Number of transactions the account has"
                        },
                        "applicableFees": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "typeProprietary": {
                                "type": "string"
                              },
                              "applicableFrom": {
                                "type": "string"
                              },
                              "additionalInformation": {
                                "type": "string"
                              },
                              "applicableTo": {
                                "type": "string"
                              },
                              "feeRules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "percentage": {
                                      "type": "number"
                                    },
                                    "minimumAmount": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "The amount value",
                                          "example": 11
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "securityPositions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "financialInstrument": {
                                "type": "object",
                                "properties": {
                                  "isin": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "normalisedPrice": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "object",
                                        "properties": {
                                          "amount": {
                                            "type": "number",
                                            "description": "The amount value",
                                            "example": 11
                                          },
                                          "currency": {
                                            "type": "string",
                                            "description": "The amount currency",
                                            "example": "ILS"
                                          }
                                        }
                                      },
                                      "priceDateTime": {
                                        "type": "string"
                                      },
                                      "priceType": {
                                        "type": "string",
                                        "enum": [
                                          "BIDE",
                                          "OFFR",
                                          "NAVL",
                                          "CREA",
                                          "CANC",
                                          "INTE",
                                          "SWNG",
                                          "MIDD",
                                          "RINV",
                                          "SWIC",
                                          "MRKT",
                                          "INDC",
                                          "DDVR",
                                          "ACTU"
                                        ]
                                      },
                                      "sourceOfPrice": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "FUND",
                                              "LMAR",
                                              "THEO",
                                              "VEND"
                                            ]
                                          },
                                          "mic": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "unitsNumber": {
                                    "type": "number"
                                  },
                                  "balanceType": {
                                    "type": "string",
                                    "enum": [
                                      "AVAI",
                                      "AWAS",
                                      "BTRA",
                                      "BLOK",
                                      "BLOV",
                                      "BLCA",
                                      "BLOT",
                                      "BORR",
                                      "COLI",
                                      "COLO",
                                      "MARG",
                                      "DRAW",
                                      "COLA",
                                      "TRAN",
                                      "ISSU",
                                      "DIRT",
                                      "LOAN",
                                      "REGO",
                                      "BODE",
                                      "BORE",
                                      "PEDA",
                                      "PECA",
                                      "PEND",
                                      "PDMT",
                                      "PDUM",
                                      "LODE",
                                      "LORE",
                                      "PENR",
                                      "PRMT",
                                      "PRUM",
                                      "PLED",
                                      "QUAS",
                                      "NOMI",
                                      "RSTR",
                                      "SPOS",
                                      "CLEN",
                                      "OTHR",
                                      "UNRG",
                                      "WDOC"
                                    ]
                                  },
                                  "averageBuyingPrice": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "number",
                                        "description": "The amount value",
                                        "example": 11
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "The amount currency",
                                        "example": "ILS"
                                      }
                                    }
                                  },
                                  "details": {
                                    "type": "string",
                                    "properties": {
                                      "symbol": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "description": "Financial instrument that was transferred within the transaction."
                              }
                            }
                          }
                        },
                        "securityOrders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "orderId": {
                                "type": "string"
                              },
                              "side": {
                                "type": "string",
                                "enum": [
                                  "buy",
                                  "sell",
                                  "subscription",
                                  "redemption"
                                ]
                              },
                              "financialInstrument": {
                                "type": "object",
                                "properties": {
                                  "isin": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              },
                              "unitsNumber": {
                                "type": "string"
                              },
                              "orderStatus": {
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "new",
                                  "partiallyFilled",
                                  "filled",
                                  "doneForDay",
                                  "canceled",
                                  "replaced",
                                  "pendingCancel",
                                  "stopped",
                                  "rejected",
                                  "suspended",
                                  "pendingNew",
                                  "calculated",
                                  "expired",
                                  "acceptedForBidding",
                                  "pendingReplace"
                                ]
                              }
                            }
                          }
                        },
                        "loanType": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "RETAIL_LOAN",
                              "MORTGAGE",
                              "CREDIT_LIMIT",
                              "GUARANTEE",
                              "CREDIT_CARD",
                              "CHEQUE_DISCOUNTING",
                              "FUTURE_PAYMENT"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "savings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "A unique identifier for the account"
                        },
                        "userId": {
                          "type": "string",
                          "description": "A unique identifier for the user"
                        },
                        "providerId": {
                          "type": "string",
                          "description": "A unique identifier for the provider"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "A unique identifier for the connection"
                        },
                        "accountNumber": {
                          "type": "string",
                          "description": "A bank account number"
                        },
                        "product": {
                          "type": "string",
                          "description": "The product of this account"
                        },
                        "parsedAccount": {
                          "type": "object",
                          "description": "Account iban number parsed",
                          "properties": {
                            "bank": {
                              "type": "string",
                              "description": "Bank number"
                            },
                            "branch": {
                              "type": "string",
                              "description": "Branch number"
                            },
                            "number": {
                              "type": "string",
                              "description": "Account number"
                            }
                          }
                        },
                        "accountType": {
                          "type": "string",
                          "description": "The type of the account"
                        },
                        "creditStatus": {
                          "type": "string",
                          "enum": [
                            "deleted",
                            "enabled",
                            "disabled"
                          ],
                          "description": "The status of a credit card"
                        },
                        "cardDueDate": {
                          "type": "string",
                          "description": "A card due date"
                        },
                        "currency": {
                          "type": "string",
                          "description": "The currency of which the account transacts in"
                        },
                        "ownerInfo": {
                          "type": "object",
                          "description": "Information of the account owner",
                          "properties": {
                            "nationalId": {
                              "type": "string",
                              "description": "Legal national ID"
                            },
                            "fullName": {
                              "type": "string",
                              "description": "Legal full name"
                            }
                          }
                        },
                        "accountName": {
                          "type": "string",
                          "description": "The name of the account"
                        },
                        "balances": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "description": "The amount value",
                                "example": 11
                              },
                              "currency": {
                                "type": "string",
                                "description": "The amount currency",
                                "example": "ILS"
                              }
                            }
                          }
                        },
                        "interst": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rate": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "precentage": {
                                      "type": "number",
                                      "example": 4.5
                                    }
                                  }
                                },
                                "description": "Array of the different interest rates"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the interest. FIXD or INDE"
                              },
                              "relatedIndecies": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "index": {
                                      "type": "string",
                                      "description": "The index of the variable interest, if there is one"
                                    },
                                    "additionalInformation": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "currency": {
                                "type": "string",
                                "description": "The amount currency",
                                "example": "ILS"
                              }
                            }
                          },
                          "description": "Interest information, only for savings and loans"
                        },
                        "relatedDates": {
                          "type": "object",
                          "properties": {
                            "contractAvailabilityDate": {
                              "type": "string"
                            },
                            "contractEndDate": {
                              "type": "string"
                            },
                            "contractStartDate": {
                              "type": "string"
                            }
                          }
                        },
                        "usage": {
                          "type": "string",
                          "description": "The type of usage of the account. Private or business"
                        },
                        "creditLimit": {
                          "type": "number",
                          "description": "The credit limit of the account"
                        },
                        "transactions": {
                          "type": "number",
                          "description": "Number of transactions the account has"
                        },
                        "applicableFees": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "typeProprietary": {
                                "type": "string"
                              },
                              "applicableFrom": {
                                "type": "string"
                              },
                              "additionalInformation": {
                                "type": "string"
                              },
                              "applicableTo": {
                                "type": "string"
                              },
                              "feeRules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "percentage": {
                                      "type": "number"
                                    },
                                    "minimumAmount": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "The amount value",
                                          "example": 11
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "securityPositions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "financialInstrument": {
                                "type": "object",
                                "properties": {
                                  "isin": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "normalisedPrice": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "object",
                                        "properties": {
                                          "amount": {
                                            "type": "number",
                                            "description": "The amount value",
                                            "example": 11
                                          },
                                          "currency": {
                                            "type": "string",
                                            "description": "The amount currency",
                                            "example": "ILS"
                                          }
                                        }
                                      },
                                      "priceDateTime": {
                                        "type": "string"
                                      },
                                      "priceType": {
                                        "type": "string",
                                        "enum": [
                                          "BIDE",
                                          "OFFR",
                                          "NAVL",
                                          "CREA",
                                          "CANC",
                                          "INTE",
                                          "SWNG",
                                          "MIDD",
                                          "RINV",
                                          "SWIC",
                                          "MRKT",
                                          "INDC",
                                          "DDVR",
                                          "ACTU"
                                        ]
                                      },
                                      "sourceOfPrice": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "FUND",
                                              "LMAR",
                                              "THEO",
                                              "VEND"
                                            ]
                                          },
                                          "mic": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "unitsNumber": {
                                    "type": "number"
                                  },
                                  "balanceType": {
                                    "type": "string",
                                    "enum": [
                                      "AVAI",
                                      "AWAS",
                                      "BTRA",
                                      "BLOK",
                                      "BLOV",
                                      "BLCA",
                                      "BLOT",
                                      "BORR",
                                      "COLI",
                                      "COLO",
                                      "MARG",
                                      "DRAW",
                                      "COLA",
                                      "TRAN",
                                      "ISSU",
                                      "DIRT",
                                      "LOAN",
                                      "REGO",
                                      "BODE",
                                      "BORE",
                                      "PEDA",
                                      "PECA",
                                      "PEND",
                                      "PDMT",
                                      "PDUM",
                                      "LODE",
                                      "LORE",
                                      "PENR",
                                      "PRMT",
                                      "PRUM",
                                      "PLED",
                                      "QUAS",
                                      "NOMI",
                                      "RSTR",
                                      "SPOS",
                                      "CLEN",
                                      "OTHR",
                                      "UNRG",
                                      "WDOC"
                                    ]
                                  },
                                  "averageBuyingPrice": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "number",
                                        "description": "The amount value",
                                        "example": 11
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "The amount currency",
                                        "example": "ILS"
                                      }
                                    }
                                  },
                                  "details": {
                                    "type": "string",
                                    "properties": {
                                      "symbol": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "description": "Financial instrument that was transferred within the transaction."
                              }
                            }
                          }
                        },
                        "securityOrders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "orderId": {
                                "type": "string"
                              },
                              "side": {
                                "type": "string",
                                "enum": [
                                  "buy",
                                  "sell",
                                  "subscription",
                                  "redemption"
                                ]
                              },
                              "financialInstrument": {
                                "type": "object",
                                "properties": {
                                  "isin": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              },
                              "unitsNumber": {
                                "type": "string"
                              },
                              "orderStatus": {
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "new",
                                  "partiallyFilled",
                                  "filled",
                                  "doneForDay",
                                  "canceled",
                                  "replaced",
                                  "pendingCancel",
                                  "stopped",
                                  "rejected",
                                  "suspended",
                                  "pendingNew",
                                  "calculated",
                                  "expired",
                                  "acceptedForBidding",
                                  "pendingReplace"
                                ]
                              }
                            }
                          }
                        },
                        "loanType": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "RETAIL_LOAN",
                              "MORTGAGE",
                              "CREDIT_LIMIT",
                              "GUARANTEE",
                              "CREDIT_CARD",
                              "CHEQUE_DISCOUNTING",
                              "FUTURE_PAYMENT"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "loans": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "A unique identifier for the account"
                        },
                        "userId": {
                          "type": "string",
                          "description": "A unique identifier for the user"
                        },
                        "providerId": {
                          "type": "string",
                          "description": "A unique identifier for the provider"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "A unique identifier for the connection"
                        },
                        "accountNumber": {
                          "type": "string",
                          "description": "A bank account number"
                        },
                        "product": {
                          "type": "string",
                          "description": "The product of this account"
                        },
                        "parsedAccount": {
                          "type": "object",
                          "description": "Account iban number parsed",
                          "properties": {
                            "bank": {
                              "type": "string",
                              "description": "Bank number"
                            },
                            "branch": {
                              "type": "string",
                              "description": "Branch number"
                            },
                            "number": {
                              "type": "string",
                              "description": "Account number"
                            }
                          }
                        },
                        "accountType": {
                          "type": "string",
                          "description": "The type of the account"
                        },
                        "creditStatus": {
                          "type": "string",
                          "enum": [
                            "deleted",
                            "enabled",
                            "disabled"
                          ],
                          "description": "The status of a credit card"
                        },
                        "cardDueDate": {
                          "type": "string",
                          "description": "A card due date"
                        },
                        "currency": {
                          "type": "string",
                          "description": "The currency of which the account transacts in"
                        },
                        "ownerInfo": {
                          "type": "object",
                          "description": "Information of the account owner",
                          "properties": {
                            "nationalId": {
                              "type": "string",
                              "description": "Legal national ID"
                            },
                            "fullName": {
                              "type": "string",
                              "description": "Legal full name"
                            }
                          }
                        },
                        "accountName": {
                          "type": "string",
                          "description": "The name of the account"
                        },
                        "balances": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "description": "The amount value",
                                "example": 11
                              },
                              "currency": {
                                "type": "string",
                                "description": "The amount currency",
                                "example": "ILS"
                              }
                            }
                          }
                        },
                        "interst": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rate": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "precentage": {
                                      "type": "number",
                                      "example": 4.5
                                    }
                                  }
                                },
                                "description": "Array of the different interest rates"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the interest. FIXD or INDE"
                              },
                              "relatedIndecies": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "index": {
                                      "type": "string",
                                      "description": "The index of the variable interest, if there is one"
                                    },
                                    "additionalInformation": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "currency": {
                                "type": "string",
                                "description": "The amount currency",
                                "example": "ILS"
                              }
                            }
                          },
                          "description": "Interest information, only for savings and loans"
                        },
                        "relatedDates": {
                          "type": "object",
                          "properties": {
                            "contractAvailabilityDate": {
                              "type": "string"
                            },
                            "contractEndDate": {
                              "type": "string"
                            },
                            "contractStartDate": {
                              "type": "string"
                            }
                          }
                        },
                        "usage": {
                          "type": "string",
                          "description": "The type of usage of the account. Private or business"
                        },
                        "creditLimit": {
                          "type": "number",
                          "description": "The credit limit of the account"
                        },
                        "transactions": {
                          "type": "number",
                          "description": "Number of transactions the account has"
                        },
                        "applicableFees": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "typeProprietary": {
                                "type": "string"
                              },
                              "applicableFrom": {
                                "type": "string"
                              },
                              "additionalInformation": {
                                "type": "string"
                              },
                              "applicableTo": {
                                "type": "string"
                              },
                              "feeRules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "percentage": {
                                      "type": "number"
                                    },
                                    "minimumAmount": {
                                      "type": "object",
                                      "properties": {
                                        "amount": {
                                          "type": "number",
                                          "description": "The amount value",
                                          "example": 11
                                        },
                                        "currency": {
                                          "type": "string",
                                          "description": "The amount currency",
                                          "example": "ILS"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "securityPositions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "financialInstrument": {
                                "type": "object",
                                "properties": {
                                  "isin": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "normalisedPrice": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "object",
                                        "properties": {
                                          "amount": {
                                            "type": "number",
                                            "description": "The amount value",
                                            "example": 11
                                          },
                                          "currency": {
                                            "type": "string",
                                            "description": "The amount currency",
                                            "example": "ILS"
                                          }
                                        }
                                      },
                                      "priceDateTime": {
                                        "type": "string"
                                      },
                                      "priceType": {
                                        "type": "string",
                                        "enum": [
                                          "BIDE",
                                          "OFFR",
                                          "NAVL",
                                          "CREA",
                                          "CANC",
                                          "INTE",
                                          "SWNG",
                                          "MIDD",
                                          "RINV",
                                          "SWIC",
                                          "MRKT",
                                          "INDC",
                                          "DDVR",
                                          "ACTU"
                                        ]
                                      },
                                      "sourceOfPrice": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "FUND",
                                              "LMAR",
                                              "THEO",
                                              "VEND"
                                            ]
                                          },
                                          "mic": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "unitsNumber": {
                                    "type": "number"
                                  },
                                  "balanceType": {
                                    "type": "string",
                                    "enum": [
                                      "AVAI",
                                      "AWAS",
                                      "BTRA",
                                      "BLOK",
                                      "BLOV",
                                      "BLCA",
                                      "BLOT",
                                      "BORR",
                                      "COLI",
                                      "COLO",
                                      "MARG",
                                      "DRAW",
                                      "COLA",
                                      "TRAN",
                                      "ISSU",
                                      "DIRT",
                                      "LOAN",
                                      "REGO",
                                      "BODE",
                                      "BORE",
                                      "PEDA",
                                      "PECA",
                                      "PEND",
                                      "PDMT",
                                      "PDUM",
                                      "LODE",
                                      "LORE",
                                      "PENR",
                                      "PRMT",
                                      "PRUM",
                                      "PLED",
                                      "QUAS",
                                      "NOMI",
                                      "RSTR",
                                      "SPOS",
                                      "CLEN",
                                      "OTHR",
                                      "UNRG",
                                      "WDOC"
                                    ]
                                  },
                                  "averageBuyingPrice": {
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "type": "number",
                                        "description": "The amount value",
                                        "example": 11
                                      },
                                      "currency": {
                                        "type": "string",
                                        "description": "The amount currency",
                                        "example": "ILS"
                                      }
                                    }
                                  },
                                  "details": {
                                    "type": "string",
                                    "properties": {
                                      "symbol": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "description": "Financial instrument that was transferred within the transaction."
                              }
                            }
                          }
                        },
                        "securityOrders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "orderId": {
                                "type": "string"
                              },
                              "side": {
                                "type": "string",
                                "enum": [
                                  "buy",
                                  "sell",
                                  "subscription",
                                  "redemption"
                                ]
                              },
                              "financialInstrument": {
                                "type": "object",
                                "properties": {
                                  "isin": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              },
                              "unitsNumber": {
                                "type": "string"
                              },
                              "orderStatus": {
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "new",
                                  "partiallyFilled",
                                  "filled",
                                  "doneForDay",
                                  "canceled",
                                  "replaced",
                                  "pendingCancel",
                                  "stopped",
                                  "rejected",
                                  "suspended",
                                  "pendingNew",
                                  "calculated",
                                  "expired",
                                  "acceptedForBidding",
                                  "pendingReplace"
                                ]
                              }
                            }
                          }
                        },
                        "loanType": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "RETAIL_LOAN",
                              "MORTGAGE",
                              "CREDIT_LIMIT",
                              "GUARANTEE",
                              "CREDIT_CARD",
                              "CHEQUE_DISCOUNTING",
                              "FUTURE_PAYMENT"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BankBranch": {
        "type": "object",
        "properties": {
          "branchCode": {
            "type": "integer",
            "description": "The code of the branch"
          },
          "city": {
            "type": "string",
            "description": "The city where the branch is located"
          },
          "POB": {
            "type": "string",
            "nullable": true,
            "description": "Post Office Box number"
          },
          "branchName": {
            "type": "string",
            "description": "The name of the branch"
          },
          "fax": {
            "type": "string",
            "nullable": true,
            "description": "The fax number of the branch"
          },
          "handicapAccess": {
            "type": "string",
            "description": "Indicates if the branch has handicap access"
          },
          "dayClosed": {
            "type": "string",
            "description": "The day the branch is closed"
          },
          "branchType": {
            "type": "string",
            "description": "The type of the branch"
          },
          "mergeBranch": {
            "type": "string",
            "nullable": true,
            "description": "Code of the branch it merged with, if applicable"
          },
          "freeTel": {
            "type": "string",
            "nullable": true,
            "description": "Free telephone number"
          },
          "closeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date the branch was closed"
          },
          "branchAddress": {
            "type": "string",
            "description": "The address of the branch"
          },
          "openDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the branch was opened"
          },
          "YCoordinate": {
            "type": "number",
            "format": "double",
            "description": "The Y coordinate of the branch location"
          },
          "XCoordinate": {
            "type": "number",
            "format": "double",
            "description": "The X coordinate of the branch location"
          },
          "telephone": {
            "type": "string",
            "description": "The telephone number of the branch"
          },
          "zipCode": {
            "type": "string",
            "nullable": true,
            "description": "The zip code of the branch"
          },
          "bankCode": {
            "type": "integer",
            "description": "The code of the bank"
          },
          "mergeBank": {
            "type": "string",
            "nullable": true,
            "description": "Code of the bank it merged with, if applicable"
          }
        }
      },
      "Provider": {
        "type": "object",
        "properties": {
          "providerFriendlyId": {
            "type": "string",
            "description": "A unique identifier for the provider"
          },
          "name": {
            "type": "string",
            "description": "The bank name"
          },
          "nameNativeLanguage": {
            "type": "string",
            "description": "The bank name in it's native language"
          },
          "mode": {
            "type": "string",
            "description": "PSD2"
          },
          "site": {
            "type": "string",
            "description": "The official website or login URL of the bank"
          },
          "bankCode": {
            "type": "integer",
            "description": "The code of the bank"
          },
          "image": {
            "type": "string",
            "description": "URL for the provider's logo or image"
          },
          "loginFields": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Fields required for bank login"
            }
          },
          "isFake": {
            "type": "boolean",
            "description": "If true, the provider is fake"
          },
          "psd2Uris": {
            "type": "object",
            "properties": {
              "cardUri": {
                "type": "string",
                "description": "The URI for accessing card data"
              },
              "loanUri": {
                "type": "string",
                "description": "The URI for accessing loan data"
              },
              "savingsUri": {
                "type": "string",
                "description": "The URI for accessing savings data"
              },
              "securitiesUri": {
                "type": "string",
                "description": "The URI for accessing securities data"
              },
              "tokenUri": {
                "type": "string",
                "description": "The URI for generating tokens"
              },
              "baseUri": {
                "type": "string",
                "description": "The base URI for accessing PSD2 services"
              },
              "paymentsUri": {
                "type": "string",
                "description": "The URI for accessing payment data"
              }
            },
            "description": "URIs for various PSD2 services offered by the provider"
          },
          "psuIdTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the PSU ID type"
                },
                "nameNativeLanguage": {
                  "type": "string",
                  "description": "The name of the PSU ID type in its native language"
                },
                "id": {
                  "type": "string",
                  "description": "The identifier for the PSU ID type"
                }
              }
            },
            "description": "Different types of PSU IDs supported by the provider"
          },
          "psuIdDefaultType": {
            "type": "string",
            "description": "The default PSU ID type for the provider"
          },
          "psuCorporateIdDefaultType": {
            "type": "string",
            "description": "The default PSU CORPORATE ID type for the provider"
          },
          "type": {
            "type": "string",
            "description": "The type of the provider, such as 'BANK', 'CARD', or 'INSURANCE'"
          },
          "status": {
            "type": "object",
            "properties": {
              "consents": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Indicates if consents are enabled for this provider"
                  }
                }
              },
              "payments": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Indicates if payments are enabled for this provider"
                  }
                }
              }
            },
            "description": "The status of different services (consents and payments) offered by the provider"
          },
          "successRate": {
            "type": "object",
            "properties": {
              "consents": {
                "type": "integer",
                "description": "The success rate percentage for consents"
              },
              "payments": {
                "type": "integer",
                "description": "The success rate percentage for payments"
              }
            },
            "description": "The success rates for the services provided by the provider"
          },
          "allowPsuCorporateIdTypeChoice": {
            "type": "boolean",
            "description": "Indicates if the provider allows the selection of different PSU corporate ID types"
          },
          "providerForcePaymentService": {
            "type": "string",
            "enum": [
              "zahav",
              "masav",
              "fp"
            ],
            "description": "Does this provider have a forced payment service"
          },
          "psuCorporateIdTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the PSU Corporate ID type"
                },
                "nameNativeLanguage": {
                  "type": "string",
                  "description": "The name of the PSU Corporate ID type in its native language"
                },
                "id": {
                  "type": "string",
                  "description": "The identifier for the PSU Corporate ID type"
                }
              }
            },
            "description": "Different types of PSU Corporate IDs supported by the provider"
          },
          "sortIndex": {
            "type": "number",
            "description": "A numeric value used to sort providers by their order of preference or importance"
          }
        }
      },
      "Connection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the connection"
          },
          "userId": {
            "type": "string",
            "description": "A unique identifier for the user"
          },
          "psuId": {
            "type": "string",
            "description": "The national id or passport number of the user"
          },
          "psuCorporateId": {
            "type": "string",
            "description": "The ID of a customer (business ID / national ID)"
          },
          "providerId": {
            "type": "string",
            "description": "A unique identifier for the provider"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "CONNECTED",
              "FETCHING",
              "ERROR",
              "FETCHING_ERROR",
              "INACTIVE",
              "COMPLETED",
              "CREDENTIALS_ERROR",
              "REJECTED",
              "PARTIALLY_AUTHORIZED",
              "REVOKED",
              "REPLACED"
            ],
            "description": "The connection status"
          },
          "mode": {
            "type": "string",
            "enum": [
              "PSD2"
            ],
            "description": "The connection mode, PSD2 is open banking"
          },
          "expiryDate": {
            "type": "string",
            "format": "date",
            "description": "The date at which the connection/consent expires"
          },
          "accounts": {
            "type": "number",
            "description": "Number of checking accounts associated with the connection"
          },
          "cards": {
            "type": "number",
            "description": "Number of credit-cards associated with the connection"
          },
          "savings": {
            "type": "number",
            "description": "Number of savings accounts associated with the connection"
          },
          "loans": {
            "type": "number",
            "description": "Number of loans accounts associated with the connection"
          },
          "securities": {
            "type": "number",
            "description": "Number of security accounts associated with the connection"
          },
          "transactions": {
            "type": "number",
            "description": "Number of transactions associated with the connection"
          },
          "providerIds": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "leumi",
                "mizrahi",
                "hapoalim",
                "otsarHahayal",
                "discount",
                "beinleumi",
                "yahav",
                "union",
                "masad",
                "pagi",
                "ubank",
                "mercantile",
                "jerusalem",
                "pepper",
                "digiBank"
              ],
              "description": "A unique identifier for the provider"
            }
          },
          "includeFakeProviders": {
            "type": "boolean",
            "default": false,
            "description": "If true, allow usage of dummy bank"
          },
          "callbackInformation": {
            "type": "object",
            "properties": {
              "webhooks": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "If true, enable webhooks"
                  },
                  "successUrl": {
                    "type": "string",
                    "description": "The url endpoint for success events"
                  },
                  "failUrl": {
                    "type": "string",
                    "description": "The url endpoint for fail events"
                  },
                  "abortUrl": {
                    "type": "string",
                    "description": "The url endpoint for abort events"
                  },
                  "oauth": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "Do we need to use oauth protocol to send requests to the webhook"
                      },
                      "clientId": {
                        "type": "string"
                      },
                      "clientSecret": {
                        "type": "string"
                      },
                      "audience": {
                        "type": "string"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "tokenUrl": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "refreshSettings": {
            "type": "object",
            "properties": {
              "refreshData:": {
                "type": "boolean",
                "description": "If true, the connection will refresh TX data in the background"
              },
              "lastFetchedDataDate:": {
                "type": "string",
                "format": "date",
                "description": "Last date at which TX's have been fetched"
              }
            }
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Error message"
              },
              "type": {
                "type": "string",
                "description": "Error type"
              }
            }
          },
          "organization": {
            "type": "string",
            "description": "org Name"
          },
          "isFake": {
            "type": "boolean",
            "description": "If true, the connection is fake (for testing purposes, sandbox bank)"
          },
          "restrictedTo": {
            "type": "array",
            "description": "The restrictedTo object is used to define the permissions you want to give to the connection",
            "items": {
              "type": "string",
              "enum": [
                "CACC",
                "CARD",
                "LOAN",
                "SVGS"
              ]
            }
          },
          "iframe": {
            "type": "boolean",
            "description": "indicates whether the consent joureny for this connection should display as iframe or not"
          },
          "access": {
            "type": "object",
            "description": "The access object is used to define the permissions you want to give to the connection",
            "properties": {
              "accounts": {
                "type": "array",
                "minItems": 0,
                "items": {
                  "type": "object",
                  "properties": {
                    "iban": {
                      "type": "string",
                      "description": "The account iban number",
                      "example": "IL123456789012345678901"
                    },
                    "bban": {
                      "type": "string",
                      "description": "The account bban number",
                      "example": "10-944-50151142"
                    }
                  }
                }
              },
              "balances": {
                "type": "array",
                "minItems": 0,
                "items": {
                  "type": "object",
                  "properties": {
                    "iban": {
                      "type": "string",
                      "description": "The account iban number",
                      "example": "IL123456789012345678901"
                    },
                    "bban": {
                      "type": "string",
                      "description": "The account bban number",
                      "example": "10-944-50151142"
                    }
                  }
                }
              },
              "transactions": {
                "type": "array",
                "minItems": 0,
                "items": {
                  "type": "object",
                  "properties": {
                    "iban": {
                      "type": "string",
                      "description": "The account iban number",
                      "example": "IL123456789012345678901"
                    },
                    "bban": {
                      "type": "string",
                      "description": "The account bban number",
                      "example": "10-944-50151142"
                    }
                  }
                }
              }
            }
          },
          "contactId": {
            "type": "string",
            "description": "The phone number of a contact created through an extended journey (like loans)"
          },
          "redirectUrl": {
            "type": "string",
            "description": "An optional URL to be redirected after a successful connection"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "The date from which transactions would be collected"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp in UTC when the connection was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp in UTC when the connection was last updated"
          },
          "scaOAuth": {
            "type": "string",
            "description": "URL for OAuth-based Strong Customer Authentication"
          },
          "verifier": {
            "type": "string",
            "description": "Verifier used for verifying the connection"
          },
          "lastFetchedDataDate": {
            "type": "string",
            "format": "date",
            "description": "Last date at which transactions have been fetched"
          },
          "allowBusiness": {
            "type": "boolean",
            "description": "Indicates if the connection allows business accounts"
          },
          "allowInsurance": {
            "type": "boolean",
            "description": "Indicates if the connection allows insurance-related data"
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the payment"
          },
          "userId": {
            "type": "string",
            "description": "A unique identifier for the user"
          },
          "isBusiness": {
            "type": "boolean",
            "description": "If true this payment will be only of business type"
          },
          "language": {
            "type": "string",
            "description": "The language to use in the consent journey, if not set the user will be able to choose the language"
          },
          "providerId": {
            "type": "string",
            "description": "A unique identifier for the provider"
          },
          "providerIds": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "leumi",
                "mizrahi",
                "hapoalim",
                "otsarHahayal",
                "discount",
                "beinleumi",
                "yahav",
                "union",
                "masad",
                "pagi",
                "ubank",
                "mercantile",
                "jerusalem",
                "pepper",
                "digiBank"
              ],
              "description": "The allowed providers for the payment"
            }
          },
          "merchantId": {
            "type": "string",
            "description": "A unique identifier for the merchant"
          },
          "orgId": {
            "type": "string",
            "description": "A unique identifier for the organization"
          },
          "psuId": {
            "type": "string",
            "description": "The national id or passport number of the person who is paying"
          },
          "psuIdType": {
            "type": "string"
          },
          "psuCorporateId": {
            "type": "string",
            "description": "The corporate id of the debtor"
          },
          "psuCorporateIdType": {
            "type": "string"
          },
          "service": {
            "type": "string",
            "enum": [
              "masav",
              "fp",
              "zahav"
            ],
            "description": "The type of the payment service"
          },
          "product": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "description": "The amount of the payment"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the payment"
          },
          "status": {
            "type": "string",
            "description": "The status of the payment",
            "enum": [
              "ACCC",
              "ACSC",
              "ACSP",
              "ACTC",
              "ACWC",
              "RCVD",
              "RJCT",
              "CANC",
              "ACFC",
              "PATC",
              "PART",
              "PENDING",
              "ERROR",
              "INIT"
            ]
          },
          "creditorAccountType": {
            "type": "string",
            "description": "The type of the acount number of the creditor",
            "enum": [
              "bban",
              "iban"
            ]
          },
          "creditorAccountNumber": {
            "type": "string",
            "description": "The account number of the creditor"
          },
          "debtorAccountType": {
            "type": "string",
            "description": "The type of the acount number of the debtor",
            "enum": [
              "bban",
              "iban"
            ]
          },
          "debtorAccountNumber": {
            "type": "string",
            "description": "The account number of the debtor"
          },
          "creditorName": {
            "type": "string",
            "description": "The name of the creditor"
          },
          "description": {
            "type": "string",
            "description": "The description of the payment"
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Error message"
              },
              "type": {
                "type": "string",
                "description": "Error type"
              }
            }
          },
          "isFake": {
            "type": "boolean",
            "description": "Indicates whether the payment is connected to a sandbox provider"
          },
          "authorizationMessage": {
            "type": "string"
          },
          "scaStatus": {
            "type": "string"
          },
          "psuMessage": {
            "type": "string"
          },
          "directPayOnly": {
            "type": "boolean",
            "description": "Indicates whether the payment is a direct payment without an open banking consent"
          },
          "isIframe": {
            "type": "boolean",
            "description": "Indicates whether the payment journey will be displayed inside an iframe"
          },
          "allowBusiness": {
            "type": "boolean",
            "description": "Indicates whether the payment allows business accounts"
          },
          "redirectUrl": {
            "type": "string",
            "description": "The URL to which the user will be redirected after the payment is completed"
          },
          "providerIdentifier": {
            "type": "string",
            "description": "A unique identifier for the provider"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp in UTC when the payment was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp in UTC when the payment was updated"
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the account"
          },
          "userId": {
            "type": "string",
            "description": "A unique identifier for the user"
          },
          "providerId": {
            "type": "string",
            "description": "A unique identifier for the provider"
          },
          "connectionId": {
            "type": "string",
            "description": "A unique identifier for the connection"
          },
          "accountNumber": {
            "type": "string",
            "description": "A bank account number"
          },
          "product": {
            "type": "string",
            "description": "The product of this account"
          },
          "parsedAccount": {
            "type": "object",
            "description": "Account iban number parsed",
            "properties": {
              "bank": {
                "type": "string",
                "description": "Bank number"
              },
              "branch": {
                "type": "string",
                "description": "Branch number"
              },
              "number": {
                "type": "string",
                "description": "Account number"
              }
            }
          },
          "accountType": {
            "type": "string",
            "description": "The type of the account"
          },
          "creditStatus": {
            "type": "string",
            "enum": [
              "deleted",
              "enabled",
              "disabled"
            ],
            "description": "The status of a credit card"
          },
          "cardDueDate": {
            "type": "string",
            "description": "A card due date"
          },
          "currency": {
            "type": "string",
            "description": "The currency of which the account transacts in"
          },
          "ownerInfo": {
            "type": "object",
            "description": "Information of the account owner",
            "properties": {
              "nationalId": {
                "type": "string",
                "description": "Legal national ID"
              },
              "fullName": {
                "type": "string",
                "description": "Legal full name"
              }
            }
          },
          "accountName": {
            "type": "string",
            "description": "The name of the account"
          },
          "balances": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "description": "The amount value",
                  "example": 11
                },
                "currency": {
                  "type": "string",
                  "description": "The amount currency",
                  "example": "ILS"
                }
              }
            }
          },
          "interst": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rate": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "precentage": {
                        "type": "number",
                        "example": 4.5
                      }
                    }
                  },
                  "description": "Array of the different interest rates"
                },
                "type": {
                  "type": "string",
                  "description": "The type of the interest. FIXD or INDE"
                },
                "relatedIndecies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "index": {
                        "type": "string",
                        "description": "The index of the variable interest, if there is one"
                      },
                      "additionalInformation": {
                        "type": "string"
                      }
                    }
                  }
                },
                "currency": {
                  "type": "string",
                  "description": "The amount currency",
                  "example": "ILS"
                }
              }
            },
            "description": "Interest information, only for savings and loans"
          },
          "relatedDates": {
            "type": "object",
            "properties": {
              "contractAvailabilityDate": {
                "type": "string"
              },
              "contractEndDate": {
                "type": "string"
              },
              "contractStartDate": {
                "type": "string"
              }
            }
          },
          "usage": {
            "type": "string",
            "description": "The type of usage of the account. Private or business"
          },
          "creditLimit": {
            "type": "number",
            "description": "The credit limit of the account"
          },
          "transactions": {
            "type": "number",
            "description": "Number of transactions the account has"
          },
          "applicableFees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "typeProprietary": {
                  "type": "string"
                },
                "applicableFrom": {
                  "type": "string"
                },
                "additionalInformation": {
                  "type": "string"
                },
                "applicableTo": {
                  "type": "string"
                },
                "feeRules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "percentage": {
                        "type": "number"
                      },
                      "minimumAmount": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "The amount value",
                            "example": 11
                          },
                          "currency": {
                            "type": "string",
                            "description": "The amount currency",
                            "example": "ILS"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "securityPositions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "financialInstrument": {
                  "type": "object",
                  "properties": {
                    "isin": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "normalisedPrice": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "description": "The amount value",
                              "example": 11
                            },
                            "currency": {
                              "type": "string",
                              "description": "The amount currency",
                              "example": "ILS"
                            }
                          }
                        },
                        "priceDateTime": {
                          "type": "string"
                        },
                        "priceType": {
                          "type": "string",
                          "enum": [
                            "BIDE",
                            "OFFR",
                            "NAVL",
                            "CREA",
                            "CANC",
                            "INTE",
                            "SWNG",
                            "MIDD",
                            "RINV",
                            "SWIC",
                            "MRKT",
                            "INDC",
                            "DDVR",
                            "ACTU"
                          ]
                        },
                        "sourceOfPrice": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FUND",
                                "LMAR",
                                "THEO",
                                "VEND"
                              ]
                            },
                            "mic": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "unitsNumber": {
                      "type": "number"
                    },
                    "balanceType": {
                      "type": "string",
                      "enum": [
                        "AVAI",
                        "AWAS",
                        "BTRA",
                        "BLOK",
                        "BLOV",
                        "BLCA",
                        "BLOT",
                        "BORR",
                        "COLI",
                        "COLO",
                        "MARG",
                        "DRAW",
                        "COLA",
                        "TRAN",
                        "ISSU",
                        "DIRT",
                        "LOAN",
                        "REGO",
                        "BODE",
                        "BORE",
                        "PEDA",
                        "PECA",
                        "PEND",
                        "PDMT",
                        "PDUM",
                        "LODE",
                        "LORE",
                        "PENR",
                        "PRMT",
                        "PRUM",
                        "PLED",
                        "QUAS",
                        "NOMI",
                        "RSTR",
                        "SPOS",
                        "CLEN",
                        "OTHR",
                        "UNRG",
                        "WDOC"
                      ]
                    },
                    "averageBuyingPrice": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "description": "The amount value",
                          "example": 11
                        },
                        "currency": {
                          "type": "string",
                          "description": "The amount currency",
                          "example": "ILS"
                        }
                      }
                    },
                    "details": {
                      "type": "string",
                      "properties": {
                        "symbol": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Financial instrument that was transferred within the transaction."
                }
              }
            }
          },
          "securityOrders": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "orderId": {
                  "type": "string"
                },
                "side": {
                  "type": "string",
                  "enum": [
                    "buy",
                    "sell",
                    "subscription",
                    "redemption"
                  ]
                },
                "financialInstrument": {
                  "type": "object",
                  "properties": {
                    "isin": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "unitsNumber": {
                  "type": "string"
                },
                "orderStatus": {
                  "type": "string",
                  "enum": [
                    "unknown",
                    "new",
                    "partiallyFilled",
                    "filled",
                    "doneForDay",
                    "canceled",
                    "replaced",
                    "pendingCancel",
                    "stopped",
                    "rejected",
                    "suspended",
                    "pendingNew",
                    "calculated",
                    "expired",
                    "acceptedForBidding",
                    "pendingReplace"
                  ]
                }
              }
            }
          },
          "loanType": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "RETAIL_LOAN",
                "MORTGAGE",
                "CREDIT_LIMIT",
                "GUARANTEE",
                "CREDIT_CARD",
                "CHEQUE_DISCOUNTING",
                "FUTURE_PAYMENT"
              ]
            }
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the transaction"
          },
          "SK": {
            "type": "string",
            "description": "Secondary key for the transaction, indicating the specific type of transaction and related metadata."
          },
          "userId": {
            "type": "string",
            "description": "A unique identifier for the user"
          },
          "orgId": {
            "type": "string",
            "description": "A unique identifier for the organization"
          },
          "connectionId": {
            "type": "string",
            "description": "A unique identifier for the connection"
          },
          "accountId": {
            "type": "string",
            "description": "A unique identifier for the account"
          },
          "providerId": {
            "type": "string",
            "description": "A unique identifier for the provider"
          },
          "transactionProviderIdentifier": {
            "type": "string",
            "description": "A unique identifier for the provider TX"
          },
          "accountNumber": {
            "type": "string",
            "description": "A bank account number"
          },
          "status": {
            "type": "string",
            "description": "The transaction status"
          },
          "categoryCode": {
            "type": "string",
            "description": "Code representing the category of the transaction (MCC code or other)."
          },
          "securityDetails": {
            "type": "object",
            "properties": {
              "unitsNumber": {
                "type": "number",
                "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
              },
              "unitsNominal": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "The amount value",
                    "example": 11
                  },
                  "currency": {
                    "type": "string",
                    "description": "The amount currency",
                    "example": "ILS"
                  }
                }
              },
              "placeOfTrade": {
                "type": "object",
                "properties": {
                  "marketIdentifierProprietary": {
                    "type": "string",
                    "description": "Proprietary Identifier of the market place."
                  },
                  "mic": {
                    "type": "string",
                    "description": "ISO 10383 code of the market place"
                  }
                }
              },
              "relevantDates": {
                "type": "object",
                "properties": {
                  "effectiveSettlementDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The effective settlement date"
                  },
                  "performanceDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The performance date"
                  },
                  "settlementDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The settlement date"
                  },
                  "valueDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The value date"
                  },
                  "bookingDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The booking date"
                  },
                  "transactionsDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The transaction date"
                  }
                },
                "description": "At least one of the listed date types must be present."
              },
              "orderId": {
                "type": "string",
                "description": "Resource Id of the order resource that triggered this transaction, if applicable."
              },
              "financialInstrument": {
                "type": "object",
                "properties": {
                  "isin": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "normalisedPrice": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "The amount value",
                            "example": 11
                          },
                          "currency": {
                            "type": "string",
                            "description": "The amount currency",
                            "example": "ILS"
                          }
                        }
                      },
                      "priceDateTime": {
                        "type": "string"
                      },
                      "priceType": {
                        "type": "string",
                        "enum": [
                          "BIDE",
                          "OFFR",
                          "NAVL",
                          "CREA",
                          "CANC",
                          "INTE",
                          "SWNG",
                          "MIDD",
                          "RINV",
                          "SWIC",
                          "MRKT",
                          "INDC",
                          "DDVR",
                          "ACTU"
                        ]
                      },
                      "sourceOfPrice": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "FUND",
                              "LMAR",
                              "THEO",
                              "VEND"
                            ]
                          },
                          "mic": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "unitsNumber": {
                    "type": "number"
                  },
                  "balanceType": {
                    "type": "string",
                    "enum": [
                      "AVAI",
                      "AWAS",
                      "BTRA",
                      "BLOK",
                      "BLOV",
                      "BLCA",
                      "BLOT",
                      "BORR",
                      "COLI",
                      "COLO",
                      "MARG",
                      "DRAW",
                      "COLA",
                      "TRAN",
                      "ISSU",
                      "DIRT",
                      "LOAN",
                      "REGO",
                      "BODE",
                      "BORE",
                      "PEDA",
                      "PECA",
                      "PEND",
                      "PDMT",
                      "PDUM",
                      "LODE",
                      "LORE",
                      "PENR",
                      "PRMT",
                      "PRUM",
                      "PLED",
                      "QUAS",
                      "NOMI",
                      "RSTR",
                      "SPOS",
                      "CLEN",
                      "OTHR",
                      "UNRG",
                      "WDOC"
                    ]
                  },
                  "averageBuyingPrice": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "description": "The amount value",
                        "example": 11
                      },
                      "currency": {
                        "type": "string",
                        "description": "The amount currency",
                        "example": "ILS"
                      }
                    }
                  },
                  "details": {
                    "type": "string",
                    "properties": {
                      "symbol": {
                        "type": "string"
                      }
                    }
                  }
                },
                "description": "Financial instrument that was transferred within the transaction."
              },
              "transactionTypeCode": {
                "type": "string",
                "description": "Type of the transaction as code or as a proprietary string. For the code, the following values are supported: BOLE Transaction relates to lending/borrowing. CLAI Transaction relates to a market claim following a corporate action. COLL Transaction relates to collateral. CORP Transaction relates to corporate action. SETT Transaction relates to settlement and clearing."
              },
              "transactionTypeProperty": {
                "type": "string",
                "description": "Type of the transaction as code or as a proprietary string. For the code, the following values are supported: BOLE Transaction relates to lending/borrowing. CLAI Transaction relates to a market claim following a corporate action. COLL Transaction relates to collateral. CORP Transaction relates to corporate action. SETT Transaction relates to settlement and clearing."
              },
              "amountIncludesFees": {
                "type": "boolean",
                "description": "Indicates whether the transactionAmount is including fees"
              },
              "amountIncludesTaxes": {
                "type": "boolean",
                "description": "Indicates whether the transactionAmount is including taxes"
              },
              "relatedFees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "description": "The amount value",
                          "example": 11
                        },
                        "currency": {
                          "type": "string",
                          "description": "The amount currency",
                          "example": "ILS"
                        }
                      }
                    },
                    "typeCode": {
                      "type": "string",
                      "description": "Initially, the following codes are defined to indicate different fee types in the context of Securities transactions. Please note, that these codes are not based on an ISO code list and might be changed in later versions of this document: transactionFee, brokerageFee, managementFee, courtage, custodyFee, exchangeFee, thirdPartyFee, otherFee",
                      "enum": [
                        "transactionFee",
                        "brokerageFee",
                        "managementFee",
                        "courtage",
                        "custodyFee",
                        "exchangeFee",
                        "thirdPartyFee",
                        "otherFee"
                      ]
                    },
                    "typeProprietary": {
                      "type": "string",
                      "description": "Proprietary fee type"
                    },
                    "feeType": {
                      "type": "string",
                      "description": "The type of the fee"
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Only allowed if amountIncludesFees = true. In that case Details of the fees that have been applied to this transaction (and therefore represent additional costs of the transaction beyond the transactionAmount). Fees with positive amount are debited by the PSU, only in the rare case of a fee credited to the PSU (e.g. in case of a reversal) negative amounts are used."
              },
              "reversalIndicator": {
                "type": "boolean",
                "description": "Indicates whether it is the reversal of a previously reported movement."
              },
              "reversedTransactionId": {
                "type": "string",
                "description": "transactionId of the reversed transaction, if applicable and supported by the ASPSP."
              },
              "unitsNumberBeforeTx": {
                "type": "number",
                "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction before this transaction has been executed. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
              },
              "unitsNominalBeforeTx": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "The amount value",
                    "example": 11
                  },
                  "currency": {
                    "type": "string",
                    "description": "The amount currency",
                    "example": "ILS"
                  }
                }
              },
              "unitsNumberAfterTx": {
                "type": "number",
                "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction after this transaction has been executed. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
              },
              "unitsNominalAfterTx": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "The amount value",
                    "example": 11
                  },
                  "currency": {
                    "type": "string",
                    "description": "The amount currency",
                    "example": "ILS"
                  }
                }
              },
              "accruedInterest": {
                "type": "object",
                "properties": {
                  "daysAccrued": {
                    "type": "number",
                    "description": "Specifies the number of days used for calculating the accrued interest amount."
                  },
                  "amounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "description": "The amount value",
                          "example": 11
                        },
                        "currency": {
                          "type": "string",
                          "description": "The amount currency",
                          "example": "ILS"
                        }
                      }
                    },
                    "description": "Amount of the accrued interest. Each item represents the same monetary value in different currencies, e.g. account currency, currency of the security's denomination."
                  }
                }
              },
              "details": {
                "type": "string",
                "description": "Additional details related to the transaction."
              }
            }
          },
          "amount": {
            "type": "object",
            "properties": {
              "originalAmount": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "The amount value",
                    "example": 11
                  },
                  "currency": {
                    "type": "string",
                    "description": "The amount currency",
                    "example": "ILS"
                  }
                }
              },
              "chargedAmount": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "The amount value",
                    "example": 11
                  },
                  "currency": {
                    "type": "string",
                    "description": "The amount currency",
                    "example": "ILS"
                  }
                }
              }
            }
          },
          "description": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "The TX description"
              },
              "additionalInfo": {
                "type": "string",
                "description": "Any additional TX info"
              }
            }
          },
          "category": {
            "type": "object",
            "description": "Categorized TX label",
            "properties": {
              "main": {
                "type": "string",
                "description": "Main category"
              },
              "sub": {
                "type": "string",
                "description": "Subcategory"
              }
            }
          },
          "changedCategory": {
            "type": "object",
            "description": "Details about the changed category of the transaction.",
            "properties": {
              "main": {
                "type": "string",
                "description": "Main changed category"
              },
              "sub": {
                "type": "string",
                "description": "Sub changed category"
              }
            }
          },
          "installments": {
            "type": "object",
            "description": "Details about installments.",
            "properties": {
              "number": {
                "type": "number",
                "description": "The current installment number"
              },
              "total": {
                "type": "number",
                "description": "The total number of installments"
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Transaction type, NORMAL or INSTALLMENT"
          },
          "date": {
            "type": "object",
            "properties": {
              "valueDate": {
                "type": "string",
                "format": "date"
              },
              "bookingDate": {
                "type": "string",
                "format": "date"
              },
              "transactionDate": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "markupFee": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "The amount of the markup fee."
              },
              "currency": {
                "type": "string",
                "description": "The currency of the markup fee."
              }
            }
          },
          "merchantName": {
            "type": "string",
            "description": "The name of the merchant involved in the transaction."
          },
          "details": {
            "type": "string",
            "description": "Detailed information about the transaction."
          },
          "isInvoiced": {
            "type": "boolean",
            "description": "Indicates whether the transaction is invoiced."
          },
          "code": {
            "type": "string",
            "description": "A code representing the transaction."
          },
          "merchantAddress": {
            "type": "object",
            "properties": {
              "streetName": {
                "type": "string",
                "description": "The street name of the merchant."
              },
              "buildingNumber": {
                "type": "string",
                "description": "The building number of the merchant."
              },
              "townName": {
                "type": "string",
                "description": "The town name of the merchant."
              },
              "postCode": {
                "type": "string",
                "description": "The postal code of the merchant."
              },
              "country": {
                "type": "string",
                "description": "The country of the merchant."
              }
            }
          },
          "classification": {
            "type": "object",
            "description": "Details about the classification of the transaction.",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of classification (e.g., REGULAR_EXPENSE)."
              },
              "source": {
                "type": "string",
                "description": "The source of classification (e.g., SYSTEM)."
              }
            }
          },
          "changedClassification": {
            "type": "object",
            "description": "Details about any changes in the classification of the transaction.",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of classification (e.g., REGULAR_EXPENSE)."
              },
              "source": {
                "type": "string",
                "description": "The source of classification (e.g., USER)."
              }
            }
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Labels associated with the transaction."
          },
          "balancePerEndDay": {
            "type": "number",
            "description": "The balance at the end of the day for the transaction."
          },
          "isDuplicate": {
            "type": "boolean",
            "description": "Indicates if the transaction is a duplicate - when a user connects the same credit card from a bank provider and from a credit card \n when not send includeDuplicates filter the default will be that no duplicate transactions will be returned \n if the transactions for the user contains more than 500 items, duplicates will be returned regardless of the used filters"
          },
          "creditorAccount": {
            "type": "object",
            "properties": {
              "iban": {
                "type": "string",
                "description": "IBAN of the creditor account"
              },
              "bban": {
                "type": "string",
                "description": "BBAN of the creditor account"
              },
              "maskedPan": {
                "type": "string",
                "description": "Masked PAN of the creditor account"
              },
              "msisdn": {
                "type": "string",
                "description": "MSISDN of the creditor account"
              },
              "currency": {
                "type": "string",
                "description": "Currency of the creditor account"
              },
              "other": {
                "type": "string",
                "description": "Other of the creditor account"
              },
              "cashAccountType": {
                "type": "string",
                "description": "Type of the creditor account"
              }
            }
          },
          "debtorAccount": {
            "type": "object",
            "properties": {
              "iban": {
                "type": "string",
                "description": "IBAN of the debtor account"
              },
              "bban": {
                "type": "string",
                "description": "BBAN of the debtor account"
              },
              "maskedPan": {
                "type": "string",
                "description": "Masked PAN of the debtor account"
              },
              "msisdn": {
                "type": "string",
                "description": "MSISDN of the debtor account"
              },
              "currency": {
                "type": "string",
                "description": "Currency of the debtor account"
              },
              "other": {
                "type": "string",
                "description": "Other of the debtor account"
              },
              "cashAccountType": {
                "type": "string",
                "description": "Type of the debtor account"
              }
            }
          },
          "endToEndId": {
            "type": "string",
            "description": "The end-to-end identifier of the transaction.\nThis field is crucial for transferring the reference number of the payment, ensuring traceability and consistency across different financial institutions and systems."
          }
        }
      },
      "Amount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The amount value",
            "example": 11
          },
          "currency": {
            "type": "string",
            "description": "The amount currency",
            "example": "ILS"
          }
        }
      },
      "Interest": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "precentage": {
                  "type": "number",
                  "example": 4.5
                }
              }
            },
            "description": "Array of the different interest rates"
          },
          "type": {
            "type": "string",
            "description": "The type of the interest. FIXD or INDE"
          },
          "relatedIndecies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "index": {
                  "type": "string",
                  "description": "The index of the variable interest, if there is one"
                },
                "additionalInformation": {
                  "type": "string"
                }
              }
            }
          },
          "currency": {
            "type": "string",
            "description": "The amount currency",
            "example": "ILS"
          }
        }
      },
      "CallbackInformation": {
        "type": "object",
        "properties": {
          "webhooks": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "If true, enable webhooks"
              },
              "successUrl": {
                "type": "string",
                "description": "The url endpoint for success events"
              },
              "failUrl": {
                "type": "string",
                "description": "The url endpoint for fail events"
              },
              "abortUrl": {
                "type": "string",
                "description": "The url endpoint for abort events"
              },
              "oauth": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Do we need to use oauth protocol to send requests to the webhook"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string"
                  },
                  "audience": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "tokenUrl": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the error"
          },
          "message": {
            "type": "string",
            "description": "The message of the error"
          }
        }
      },
      "connectOBFinalizeResponse": {
        "type": "object",
        "properties": {
          "connectionId": {
            "type": "string",
            "description": "Unique identifier for the connection"
          },
          "connectionStatus": {
            "type": "string",
            "description": "Status of the connection (e.g., CONNECTED)"
          },
          "paymentStatus": {
            "type": "string",
            "description": "Status of the payment (e.g., ACTC)"
          },
          "orgId": {
            "type": "string",
            "description": "Organization identifier"
          },
          "userId": {
            "type": "string",
            "description": "User identifier"
          },
          "paymentId": {
            "type": "string",
            "description": "Payment identifier"
          },
          "token": {
            "type": "string",
            "description": "Token value"
          },
          "isIframe": {
            "type": "boolean",
            "description": "Indicates if the connection is using iframe"
          },
          "isPayment": {
            "type": "boolean",
            "description": "Indicates if finalizing a payment"
          },
          "psuId": {
            "type": "string",
            "description": "PSU (Payment Service User) identifier"
          },
          "redirectUrl": {
            "type": "string",
            "description": "The URL to redirect to after finalizing the connection"
          }
        }
      },
      "getAggregationForUserResponse": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                }
              },
              "description": "Parameter details"
            }
          }
        }
      },
      "FeeRules": {
        "type": "object",
        "properties": {
          "percentage": {
            "type": "number"
          },
          "minimumAmount": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "The amount value",
                "example": 11
              },
              "currency": {
                "type": "string",
                "description": "The amount currency",
                "example": "ILS"
              }
            }
          }
        }
      },
      "AccountApplicableFees": {
        "type": "object",
        "properties": {
          "typeProprietary": {
            "type": "string"
          },
          "applicableFrom": {
            "type": "string"
          },
          "additionalInformation": {
            "type": "string"
          },
          "applicableTo": {
            "type": "string"
          },
          "feeRules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "percentage": {
                  "type": "number"
                },
                "minimumAmount": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number",
                      "description": "The amount value",
                      "example": 11
                    },
                    "currency": {
                      "type": "string",
                      "description": "The amount currency",
                      "example": "ILS"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SecurityPosition": {
        "type": "object",
        "properties": {
          "financialInstrument": {
            "type": "object",
            "properties": {
              "isin": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "normalisedPrice": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "description": "The amount value",
                        "example": 11
                      },
                      "currency": {
                        "type": "string",
                        "description": "The amount currency",
                        "example": "ILS"
                      }
                    }
                  },
                  "priceDateTime": {
                    "type": "string"
                  },
                  "priceType": {
                    "type": "string",
                    "enum": [
                      "BIDE",
                      "OFFR",
                      "NAVL",
                      "CREA",
                      "CANC",
                      "INTE",
                      "SWNG",
                      "MIDD",
                      "RINV",
                      "SWIC",
                      "MRKT",
                      "INDC",
                      "DDVR",
                      "ACTU"
                    ]
                  },
                  "sourceOfPrice": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "FUND",
                          "LMAR",
                          "THEO",
                          "VEND"
                        ]
                      },
                      "mic": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "unitsNumber": {
                "type": "number"
              },
              "balanceType": {
                "type": "string",
                "enum": [
                  "AVAI",
                  "AWAS",
                  "BTRA",
                  "BLOK",
                  "BLOV",
                  "BLCA",
                  "BLOT",
                  "BORR",
                  "COLI",
                  "COLO",
                  "MARG",
                  "DRAW",
                  "COLA",
                  "TRAN",
                  "ISSU",
                  "DIRT",
                  "LOAN",
                  "REGO",
                  "BODE",
                  "BORE",
                  "PEDA",
                  "PECA",
                  "PEND",
                  "PDMT",
                  "PDUM",
                  "LODE",
                  "LORE",
                  "PENR",
                  "PRMT",
                  "PRUM",
                  "PLED",
                  "QUAS",
                  "NOMI",
                  "RSTR",
                  "SPOS",
                  "CLEN",
                  "OTHR",
                  "UNRG",
                  "WDOC"
                ]
              },
              "averageBuyingPrice": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "The amount value",
                    "example": 11
                  },
                  "currency": {
                    "type": "string",
                    "description": "The amount currency",
                    "example": "ILS"
                  }
                }
              },
              "details": {
                "type": "string",
                "properties": {
                  "symbol": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Financial instrument that was transferred within the transaction."
          }
        }
      },
      "SecurityPositionExtended": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "financialInstrument": {
                "type": "object",
                "properties": {
                  "isin": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "normalisedPrice": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "The amount value",
                            "example": 11
                          },
                          "currency": {
                            "type": "string",
                            "description": "The amount currency",
                            "example": "ILS"
                          }
                        }
                      },
                      "priceDateTime": {
                        "type": "string"
                      },
                      "priceType": {
                        "type": "string",
                        "enum": [
                          "BIDE",
                          "OFFR",
                          "NAVL",
                          "CREA",
                          "CANC",
                          "INTE",
                          "SWNG",
                          "MIDD",
                          "RINV",
                          "SWIC",
                          "MRKT",
                          "INDC",
                          "DDVR",
                          "ACTU"
                        ]
                      },
                      "sourceOfPrice": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "FUND",
                              "LMAR",
                              "THEO",
                              "VEND"
                            ]
                          },
                          "mic": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "unitsNumber": {
                    "type": "number"
                  },
                  "balanceType": {
                    "type": "string",
                    "enum": [
                      "AVAI",
                      "AWAS",
                      "BTRA",
                      "BLOK",
                      "BLOV",
                      "BLCA",
                      "BLOT",
                      "BORR",
                      "COLI",
                      "COLO",
                      "MARG",
                      "DRAW",
                      "COLA",
                      "TRAN",
                      "ISSU",
                      "DIRT",
                      "LOAN",
                      "REGO",
                      "BODE",
                      "BORE",
                      "PEDA",
                      "PECA",
                      "PEND",
                      "PDMT",
                      "PDUM",
                      "LODE",
                      "LORE",
                      "PENR",
                      "PRMT",
                      "PRUM",
                      "PLED",
                      "QUAS",
                      "NOMI",
                      "RSTR",
                      "SPOS",
                      "CLEN",
                      "OTHR",
                      "UNRG",
                      "WDOC"
                    ]
                  },
                  "averageBuyingPrice": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "description": "The amount value",
                        "example": 11
                      },
                      "currency": {
                        "type": "string",
                        "description": "The amount currency",
                        "example": "ILS"
                      }
                    }
                  },
                  "details": {
                    "type": "string",
                    "properties": {
                      "symbol": {
                        "type": "string"
                      }
                    }
                  }
                },
                "description": "Financial instrument that was transferred within the transaction."
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "providerId": {
                "type": "string"
              },
              "currentPrice": {
                "type": "integer"
              },
              "positionValue": {
                "type": "integer"
              },
              "symbol": {
                "type": "string"
              },
              "securityId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SecurityOrder": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "side": {
            "type": "string",
            "enum": [
              "buy",
              "sell",
              "subscription",
              "redemption"
            ]
          },
          "financialInstrument": {
            "type": "object",
            "properties": {
              "isin": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "unitsNumber": {
            "type": "string"
          },
          "orderStatus": {
            "type": "string",
            "enum": [
              "unknown",
              "new",
              "partiallyFilled",
              "filled",
              "doneForDay",
              "canceled",
              "replaced",
              "pendingCancel",
              "stopped",
              "rejected",
              "suspended",
              "pendingNew",
              "calculated",
              "expired",
              "acceptedForBidding",
              "pendingReplace"
            ]
          }
        }
      },
      "SecurityOrderExtended": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "orderId": {
                "type": "string"
              },
              "side": {
                "type": "string",
                "enum": [
                  "buy",
                  "sell",
                  "subscription",
                  "redemption"
                ]
              },
              "financialInstrument": {
                "type": "object",
                "properties": {
                  "isin": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "unitsNumber": {
                "type": "string"
              },
              "orderStatus": {
                "type": "string",
                "enum": [
                  "unknown",
                  "new",
                  "partiallyFilled",
                  "filled",
                  "doneForDay",
                  "canceled",
                  "replaced",
                  "pendingCancel",
                  "stopped",
                  "rejected",
                  "suspended",
                  "pendingNew",
                  "calculated",
                  "expired",
                  "acceptedForBidding",
                  "pendingReplace"
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "providerId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "TransactionSecurityDetails": {
        "type": "object",
        "properties": {
          "unitsNumber": {
            "type": "number",
            "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
          },
          "unitsNominal": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "The amount value",
                "example": 11
              },
              "currency": {
                "type": "string",
                "description": "The amount currency",
                "example": "ILS"
              }
            }
          },
          "placeOfTrade": {
            "type": "object",
            "properties": {
              "marketIdentifierProprietary": {
                "type": "string",
                "description": "Proprietary Identifier of the market place."
              },
              "mic": {
                "type": "string",
                "description": "ISO 10383 code of the market place"
              }
            }
          },
          "relevantDates": {
            "type": "object",
            "properties": {
              "effectiveSettlementDate": {
                "type": "string",
                "format": "date",
                "description": "The effective settlement date"
              },
              "performanceDate": {
                "type": "string",
                "format": "date",
                "description": "The performance date"
              },
              "settlementDate": {
                "type": "string",
                "format": "date",
                "description": "The settlement date"
              },
              "valueDate": {
                "type": "string",
                "format": "date",
                "description": "The value date"
              },
              "bookingDate": {
                "type": "string",
                "format": "date",
                "description": "The booking date"
              },
              "transactionsDate": {
                "type": "string",
                "format": "date",
                "description": "The transaction date"
              }
            },
            "description": "At least one of the listed date types must be present."
          },
          "orderId": {
            "type": "string",
            "description": "Resource Id of the order resource that triggered this transaction, if applicable."
          },
          "financialInstrument": {
            "type": "object",
            "properties": {
              "isin": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "normalisedPrice": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "description": "The amount value",
                        "example": 11
                      },
                      "currency": {
                        "type": "string",
                        "description": "The amount currency",
                        "example": "ILS"
                      }
                    }
                  },
                  "priceDateTime": {
                    "type": "string"
                  },
                  "priceType": {
                    "type": "string",
                    "enum": [
                      "BIDE",
                      "OFFR",
                      "NAVL",
                      "CREA",
                      "CANC",
                      "INTE",
                      "SWNG",
                      "MIDD",
                      "RINV",
                      "SWIC",
                      "MRKT",
                      "INDC",
                      "DDVR",
                      "ACTU"
                    ]
                  },
                  "sourceOfPrice": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "FUND",
                          "LMAR",
                          "THEO",
                          "VEND"
                        ]
                      },
                      "mic": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "unitsNumber": {
                "type": "number"
              },
              "balanceType": {
                "type": "string",
                "enum": [
                  "AVAI",
                  "AWAS",
                  "BTRA",
                  "BLOK",
                  "BLOV",
                  "BLCA",
                  "BLOT",
                  "BORR",
                  "COLI",
                  "COLO",
                  "MARG",
                  "DRAW",
                  "COLA",
                  "TRAN",
                  "ISSU",
                  "DIRT",
                  "LOAN",
                  "REGO",
                  "BODE",
                  "BORE",
                  "PEDA",
                  "PECA",
                  "PEND",
                  "PDMT",
                  "PDUM",
                  "LODE",
                  "LORE",
                  "PENR",
                  "PRMT",
                  "PRUM",
                  "PLED",
                  "QUAS",
                  "NOMI",
                  "RSTR",
                  "SPOS",
                  "CLEN",
                  "OTHR",
                  "UNRG",
                  "WDOC"
                ]
              },
              "averageBuyingPrice": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "The amount value",
                    "example": 11
                  },
                  "currency": {
                    "type": "string",
                    "description": "The amount currency",
                    "example": "ILS"
                  }
                }
              },
              "details": {
                "type": "string",
                "properties": {
                  "symbol": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Financial instrument that was transferred within the transaction."
          },
          "transactionTypeCode": {
            "type": "string",
            "description": "Type of the transaction as code or as a proprietary string. For the code, the following values are supported: BOLE Transaction relates to lending/borrowing. CLAI Transaction relates to a market claim following a corporate action. COLL Transaction relates to collateral. CORP Transaction relates to corporate action. SETT Transaction relates to settlement and clearing."
          },
          "transactionTypeProperty": {
            "type": "string",
            "description": "Type of the transaction as code or as a proprietary string. For the code, the following values are supported: BOLE Transaction relates to lending/borrowing. CLAI Transaction relates to a market claim following a corporate action. COLL Transaction relates to collateral. CORP Transaction relates to corporate action. SETT Transaction relates to settlement and clearing."
          },
          "amountIncludesFees": {
            "type": "boolean",
            "description": "Indicates whether the transactionAmount is including fees"
          },
          "amountIncludesTaxes": {
            "type": "boolean",
            "description": "Indicates whether the transactionAmount is including taxes"
          },
          "relatedFees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number",
                      "description": "The amount value",
                      "example": 11
                    },
                    "currency": {
                      "type": "string",
                      "description": "The amount currency",
                      "example": "ILS"
                    }
                  }
                },
                "typeCode": {
                  "type": "string",
                  "description": "Initially, the following codes are defined to indicate different fee types in the context of Securities transactions. Please note, that these codes are not based on an ISO code list and might be changed in later versions of this document: transactionFee, brokerageFee, managementFee, courtage, custodyFee, exchangeFee, thirdPartyFee, otherFee",
                  "enum": [
                    "transactionFee",
                    "brokerageFee",
                    "managementFee",
                    "courtage",
                    "custodyFee",
                    "exchangeFee",
                    "thirdPartyFee",
                    "otherFee"
                  ]
                },
                "typeProprietary": {
                  "type": "string",
                  "description": "Proprietary fee type"
                },
                "feeType": {
                  "type": "string",
                  "description": "The type of the fee"
                },
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Only allowed if amountIncludesFees = true. In that case Details of the fees that have been applied to this transaction (and therefore represent additional costs of the transaction beyond the transactionAmount). Fees with positive amount are debited by the PSU, only in the rare case of a fee credited to the PSU (e.g. in case of a reversal) negative amounts are used."
          },
          "reversalIndicator": {
            "type": "boolean",
            "description": "Indicates whether it is the reversal of a previously reported movement."
          },
          "reversedTransactionId": {
            "type": "string",
            "description": "transactionId of the reversed transaction, if applicable and supported by the ASPSP."
          },
          "unitsNumberBeforeTx": {
            "type": "number",
            "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction before this transaction has been executed. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
          },
          "unitsNominalBeforeTx": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "The amount value",
                "example": 11
              },
              "currency": {
                "type": "string",
                "description": "The amount currency",
                "example": "ILS"
              }
            }
          },
          "unitsNumberAfterTx": {
            "type": "number",
            "description": "Nominal or numeric quantification of the financial instrument that has been transferred within this transaction after this transaction has been executed. Negative values indicate that the respective quantity of the financial instrument has been taken from the securities account, positive values indicate that the quantity has been added."
          },
          "unitsNominalAfterTx": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "The amount value",
                "example": 11
              },
              "currency": {
                "type": "string",
                "description": "The amount currency",
                "example": "ILS"
              }
            }
          },
          "accruedInterest": {
            "type": "object",
            "properties": {
              "daysAccrued": {
                "type": "number",
                "description": "Specifies the number of days used for calculating the accrued interest amount."
              },
              "amounts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number",
                      "description": "The amount value",
                      "example": 11
                    },
                    "currency": {
                      "type": "string",
                      "description": "The amount currency",
                      "example": "ILS"
                    }
                  }
                },
                "description": "Amount of the accrued interest. Each item represents the same monetary value in different currencies, e.g. account currency, currency of the security's denomination."
              }
            }
          },
          "details": {
            "type": "string",
            "description": "Additional details related to the transaction."
          }
        }
      },
      "RelatedFee": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number",
                "description": "The amount value",
                "example": 11
              },
              "currency": {
                "type": "string",
                "description": "The amount currency",
                "example": "ILS"
              }
            }
          },
          "typeCode": {
            "type": "string",
            "description": "Initially, the following codes are defined to indicate different fee types in the context of Securities transactions. Please note, that these codes are not based on an ISO code list and might be changed in later versions of this document: transactionFee, brokerageFee, managementFee, courtage, custodyFee, exchangeFee, thirdPartyFee, otherFee",
            "enum": [
              "transactionFee",
              "brokerageFee",
              "managementFee",
              "courtage",
              "custodyFee",
              "exchangeFee",
              "thirdPartyFee",
              "otherFee"
            ]
          },
          "typeProprietary": {
            "type": "string",
            "description": "Proprietary fee type"
          },
          "feeType": {
            "type": "string",
            "description": "The type of the fee"
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "AccruedInterest": {
        "type": "object",
        "properties": {
          "daysAccrued": {
            "type": "number",
            "description": "Specifies the number of days used for calculating the accrued interest amount."
          },
          "amounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "description": "The amount value",
                  "example": 11
                },
                "currency": {
                  "type": "string",
                  "description": "The amount currency",
                  "example": "ILS"
                }
              }
            },
            "description": "Amount of the accrued interest. Each item represents the same monetary value in different currencies, e.g. account currency, currency of the security's denomination."
          }
        }
      },
      "LoanType": {
        "type": "string",
        "enum": [
          "RETAIL_LOAN",
          "MORTGAGE",
          "CREDIT_LIMIT",
          "GUARANTEE",
          "CREDIT_CARD",
          "CHEQUE_DISCOUNTING",
          "FUTURE_PAYMENT"
        ]
      },
      "Merchant": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The merchant name"
          },
          "bban": {
            "type": "string",
            "description": "The merchant bank account bban"
          },
          "iban": {
            "type": "string",
            "description": "The merchant bank account iban"
          },
          "id": {
            "type": "string",
            "description": "The merchant unique identifier"
          },
          "psuId": {
            "type": "string",
            "description": "National id of the merchant"
          },
          "psuCorporateId": {
            "type": "string",
            "description": "Business id of the merchant"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the merchant"
          },
          "displayName": {
            "type": "string",
            "description": "The merchant display name"
          },
          "logoUrl": {
            "type": "string",
            "description": "The url of the logo file"
          },
          "createdAt": {
            "type": "string",
            "description": "The timestamp in UTC when the marchant was created"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates if the merchant is deleted"
          }
        }
      },
      "FinancialReportData": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "ownerName": {
            "type": "string"
          },
          "parsedAccountNumber": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "currentDate": {
            "type": "string"
          },
          "connectedFinancialResources": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ownerName": {
                  "type": "string"
                },
                "parsedAccountNumber": {
                  "type": "string"
                },
                "providerId": {
                  "type": "string"
                }
              }
            }
          },
          "checkingAccountsILS": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customerId": {
                  "type": "string"
                },
                "amount": {
                  "type": "number"
                },
                "providerId": {
                  "type": "string"
                }
              }
            }
          },
          "checkingAccounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customerId": {
                  "type": "string"
                },
                "amount": {
                  "type": "number"
                },
                "providerId": {
                  "type": "string"
                },
                "accountNumber": {
                  "type": "string"
                },
                "accountId": {
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                }
              }
            }
          },
          "yearMonthBalance": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "yearMonth": {
                  "type": "string"
                },
                "sumIncome": {
                  "type": "number"
                },
                "sumExpense": {
                  "type": "number"
                }
              }
            }
          },
          "totalIncomesOutcome": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date"
              },
              "customerId": {
                "type": "string"
              },
              "sumIncomePerMonth": {
                "type": "number"
              },
              "sumExpansesPerMonth": {
                "type": "number"
              },
              "sumNetIncomePerMonth": {
                "type": "number"
              },
              "regularIncomeSources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "classificationSource": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "balancesPerDays": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "adjustedProvider": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                },
                "adjustedAccountNumber": {
                  "type": "string"
                },
                "BalancePerEndDay": {
                  "type": "number"
                },
                "adjustedCreditLimit": {
                  "type": "number"
                }
              }
            }
          },
          "monthlyAverageProviderFees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accountNumber": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "avgBankFees": {
                  "type": "number"
                },
                "providerId": {
                  "type": "string"
                }
              }
            }
          },
          "creditCardOutcomes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accountNumber": {
                  "type": "string"
                },
                "parsedAccountNumber": {
                  "type": "string"
                },
                "yearMonth": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "providerId": {
                  "type": "string"
                },
                "sumExpanse": {
                  "type": "number"
                }
              }
            }
          },
          "creditCardOutcomesByCat": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customerId": {
                  "type": "string"
                },
                "subCategory": {
                  "type": "string"
                },
                "avgExpanse": {
                  "type": "number"
                }
              }
            }
          },
          "creditCardFees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "avgCardFee": {
                  "type": "number"
                },
                "accountNumber": {
                  "type": "string"
                },
                "customerId": {
                  "type": "string"
                },
                "providerId": {
                  "type": "string"
                }
              }
            }
          },
          "savingsAndSecurities": {
            "type": "object",
            "properties": {
              "customerId": {
                "type": "string"
              },
              "totalSavings": {
                "type": "number"
              },
              "totalSecuritiesValue": {
                "type": "number"
              },
              "totalForeignCurrencyAmount": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                }
              },
              "foreignCurrency": {
                "type": "string"
              }
            }
          },
          "savings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "providerId": {
                  "type": "string"
                },
                "parsedAccountNumber": {
                  "type": "string"
                },
                "product": {
                  "type": "string"
                },
                "insertRate": {
                  "type": "number"
                },
                "contractAvailabilityDate": {
                  "type": "string"
                },
                "amount": {
                  "type": "number"
                },
                "customerId": {
                  "type": "string"
                }
              }
            }
          },
          "securities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customerId": {
                  "type": "string"
                },
                "accountNumber": {
                  "type": "string"
                },
                "providerId": {
                  "type": "string"
                },
                "totalValue": {
                  "type": "number"
                }
              }
            }
          },
          "countAkam": {
            "type": "number"
          },
          "countAlertNotice": {
            "type": "number"
          },
          "countCancelled": {
            "type": "number"
          },
          "countForeclosure": {
            "type": "number"
          },
          "countLoanOverDue": {
            "type": "number"
          },
          "loansTotal": {
            "type": "object",
            "properties": {
              "customerId": {
                "type": "string"
              },
              "totalMortgageAmount": {
                "type": "number"
              },
              "totalLoansAmount": {
                "type": "number"
              }
            }
          },
          "loans": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number"
                },
                "loanOriginalAmount": {
                  "type": "number"
                },
                "loanType": {
                  "type": "string"
                },
                "product": {
                  "type": "string"
                },
                "providerId": {
                  "type": "string"
                },
                "parsedAccountNumber": {
                  "type": "string"
                },
                "avgMonthlyLoanPay": {
                  "type": "number"
                },
                "interestRate": {
                  "type": "number"
                },
                "relatedDates": {
                  "type": "object",
                  "properties": {
                    "contractAvailabilityDate": {
                      "type": "string"
                    },
                    "contractStartDate": {
                      "type": "string"
                    },
                    "contractEndDate": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "totalLoans": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "lastMonthPay": {
                  "type": "number"
                },
                "avgLoanPayment": {
                  "type": "number"
                },
                "typeOfLoan": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "DecisionGoNogo": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string",
            "description": "Organization identifier"
          },
          "customerId": {
            "type": "string",
            "description": "Customer identifier"
          },
          "userId": {
            "type": "string",
            "description": "User identifier"
          },
          "isCardConnect": {
            "type": "number",
            "description": "Indicates if a card is connected (1 = yes, 0 = no)"
          },
          "cardCreditLimit": {
            "type": "array",
            "description": "Credit limit details for cards",
            "items": {
              "type": "object",
              "properties": {
                "accountNumber": {
                  "type": "string",
                  "description": "Credit card account number"
                },
                "creditLimitCard": {
                  "type": "number",
                  "description": "Credit limit for the card"
                }
              }
            }
          },
          "checkingCreditLimit": {
            "type": "array",
            "description": "Credit limit usage details for checking accounts",
            "items": {
              "type": "object",
              "properties": {
                "adjustedAccountNumber": {
                  "type": "string",
                  "description": "Checking account number"
                },
                "adjustedCreditLimit": {
                  "type": "number",
                  "description": "Credit limit assigned to the checking account"
                },
                "almostExceededCredit": {
                  "type": "number",
                  "description": "Indicates if credit usage is near the limit"
                },
                "creditLineUsageLast3Month": {
                  "type": "number",
                  "description": "Credit line usage over the last 3 months"
                },
                "creditLineUsageLast6Month": {
                  "type": "number",
                  "description": "Credit line usage over the last 6 months"
                },
                "creditLineUsageLast12Month": {
                  "type": "number",
                  "description": "Credit line usage over the last 12 months"
                },
                "closingBalanceLastMonth": {
                  "type": "number",
                  "description": "Closing balance of the previous month"
                },
                "openBalance3MonthAgo": {
                  "type": "number",
                  "description": "Account balance from 3 months ago"
                }
              }
            }
          },
          "savings": {
            "type": "array",
            "description": "Savings account information",
            "items": {
              "type": "object",
              "properties": {
                "currency": {
                  "type": "string",
                  "description": "Currency of the savings account"
                },
                "amount": {
                  "type": "number",
                  "description": "Current balance in the savings account"
                }
              }
            }
          },
          "savingsTransactions": {
            "type": "array",
            "description": "Savings account transactions",
            "items": {
              "type": "object",
              "properties": {
                "chargedAmount": {
                  "type": "number",
                  "description": "Amount of the savings transaction"
                },
                "chargedCurrency": {
                  "type": "string",
                  "description": "Currency of the savings transaction"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the savings transaction"
                }
              }
            }
          },
          "countAkamChq": {
            "type": "number",
            "description": "Number of 'Akam' cheques"
          },
          "countForAkamChqLastMonth": {
            "type": "number",
            "description": "Number of 'Akam' cheques in the last month"
          },
          "countForAkamChqLast3Month": {
            "type": "number",
            "description": "Number of 'Akam' cheques in the last 3 months"
          },
          "countForAkamChqLast6Month": {
            "type": "number",
            "description": "Number of 'Akam' cheques in the last 6 months"
          },
          "countForAkamChqLast12Month": {
            "type": "number",
            "description": "Number of 'Akam' cheques in the last 12 months"
          },
          "countCancelledChq": {
            "type": "number",
            "description": "Number of cancelled cheques"
          },
          "countAkamHok": {
            "type": "number",
            "description": "Number of 'Akam Hok' transactions"
          },
          "countForAkamHokLast3Month": {
            "type": "number",
            "description": "Number of 'Akam Hok' transactions in the last 3 months"
          },
          "countForAkamHokLast6Month": {
            "type": "number",
            "description": "Number of 'Akam Hok' transactions in the last 6 months"
          },
          "countForAkamHokLast12Month": {
            "type": "number",
            "description": "Number of 'Akam Hok' transactions in the last 12 months"
          },
          "countCancelledHok": {
            "type": "number",
            "description": "Number of cancelled 'Hok' transactions"
          },
          "countForCancellChqLast3Month": {
            "type": "number",
            "description": "Number of cancelled cheques in the last 3 months"
          },
          "countForCancellChqLast6Month": {
            "type": "number",
            "description": "Number of cancelled cheques in the last 6 months"
          },
          "countForCancellChqLast12Month": {
            "type": "number",
            "description": "Number of cancelled cheques in the last 12 months"
          },
          "countCancelledHokLast3Month": {
            "type": "number",
            "description": "Number of cancelled 'Hok' transactions in the last 3 months"
          },
          "countCancelledHokLast6Month": {
            "type": "number",
            "description": "Number of cancelled 'Hok' transactions in the last 6 months"
          },
          "countCancelledHokLast12Month": {
            "type": "number",
            "description": "Number of cancelled 'Hok' transactions in the last 12 months"
          },
          "countPigur": {
            "type": "number",
            "description": "Number of 'Pigur' transactions"
          },
          "CountForPigurLast3Month": {
            "type": "number",
            "description": "Number of 'Pigur' transactions in the last 3 months"
          },
          "CountForPigurLast6Month": {
            "type": "number",
            "description": "Number of 'Pigur' transactions in the last 6 months"
          },
          "CountForPigurLast12Month": {
            "type": "number",
            "description": "Number of 'Pigur' transactions in the last 12 months"
          },
          "countLimit": {
            "type": "number",
            "description": "Number of times the account was flagged for reaching credit limit"
          },
          "countExceededAlert": {
            "type": "number",
            "description": "Number of times the credit was exceeded"
          },
          "mortgageLastPay": {
            "type": "number",
            "description": "Amount of the last mortgage payment"
          },
          "avgMortgagePayment": {
            "type": "number",
            "description": "Average mortgage payment amount"
          },
          "creditExceeded": {
            "type": "array",
            "description": "Details of credit usage exceeding limits",
            "items": {
              "type": "object",
              "properties": {
                "providerId": {
                  "type": "string",
                  "description": "Provider ID (e.g., bank or credit card identifier)"
                },
                "accountNumber": {
                  "type": "string",
                  "description": "Account or credit card number"
                },
                "adjustedYearMonth": {
                  "type": "string",
                  "description": "Year and month of the credit usage"
                },
                "percentageOfUse": {
                  "type": "number",
                  "description": "Percentage of the credit limit used"
                }
              }
            }
          },
          "incomeExpensesSources": {
            "type": "array",
            "description": "Breakdown of income and expenses by category/source",
            "items": {
              "type": "object",
              "properties": {
                "classificationSource": {
                  "type": "string",
                  "description": "Category or classification of the source"
                },
                "sumIncome": {
                  "type": "number",
                  "description": "Sum of income for this source"
                },
                "sumExpenses": {
                  "type": "number",
                  "description": "Sum of expenses for this source"
                }
              }
            }
          },
          "indication": {
            "type": "array",
            "description": "List of relevant indications or indicators",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "Indicator description"
                }
              }
            }
          },
          "loanBalance": {
            "type": "number",
            "description": "Outstanding balance for loans"
          },
          "bankLoanCount": {
            "type": "number",
            "description": "Number of bank loans"
          },
          "existMortgage": {
            "type": "number",
            "description": "Indicates if there is an existing mortgage (1 = yes, 0 = no)"
          },
          "reportedPeriodInMthsLast3": {
            "type": "number",
            "description": "Number of months reported for the most recent 3-month period"
          },
          "reportedPeriodInMths": {
            "type": "number",
            "description": "Number of months reported overall"
          },
          "incomeExpenseSourceByPeriod": {
            "type": "array",
            "description": "Income and expenses categorized by period and source",
            "items": {
              "type": "object",
              "properties": {
                "classificationSource": {
                  "type": "string",
                  "description": "Category or classification of the source"
                },
                "sumRegularIncomeLastMonth": {
                  "type": "number",
                  "description": "Sum of regular income in the last month"
                },
                "avgRegularIncomeLast3Month": {
                  "type": "number",
                  "description": "Average regular income over the last 3 months"
                },
                "avgRegularIncomeLast6Month": {
                  "type": "number",
                  "description": "Average regular income over the last 6 months"
                },
                "avgRegularIncomeLast12Month": {
                  "type": "number",
                  "description": "Average regular income over the last 12 months"
                },
                "sumExpensesLastMonth": {
                  "type": "number",
                  "description": "Sum of expenses in the last month"
                },
                "avgExpensesLast3Month": {
                  "type": "number",
                  "description": "Average expenses over the last 3 months"
                },
                "avgExpensesLast6Month": {
                  "type": "number",
                  "description": "Average expenses over the last 6 months"
                },
                "avgExpensesLast12Month": {
                  "type": "number",
                  "description": "Average expenses over the last 12 months"
                }
              }
            }
          },
          "avgNonSettlementsLast3Month": {
            "type": "number",
            "description": "Average non-settled (unresolved) loan payments in the last 3 months"
          },
          "avgSettlementsLast3Month": {
            "type": "number",
            "description": "Average settled loan payments in the last 3 months"
          },
          "totalLoanPaymentsLast3Month": {
            "type": "number",
            "description": "Total loan payments in the last 3 months"
          },
          "avgRegularIncomeLast3Month": {
            "type": "number",
            "description": "Average regular income in the last 3 months"
          },
          "avgvariableIncomeLast3Month": {
            "type": "number",
            "description": "Average variable income in the last 3 months"
          },
          "avgIncome": {
            "type": "number",
            "description": "Overall average income"
          },
          "avgIncomeRecent3Mth": {
            "type": "number",
            "description": "Average total income in the most recent 3 months"
          },
          "avgSalaryRecent3Mth": {
            "type": "number",
            "description": "Average salary in the most recent 3 months"
          },
          "incomeChq": {
            "type": "number",
            "description": "Total income from cheques"
          },
          "incomeChqLast3Months": {
            "type": "number",
            "description": "Total income from cheques in the last 3 months"
          },
          "avgCashIncomesRcnt3Mth": {
            "type": "number",
            "description": "Average cash income in the most recent 3 months"
          },
          "sumCashIncomesRcntMth": {
            "type": "number",
            "description": "Total cash income in the most recent month"
          },
          "avgMinistryOfConstructionIncome": {
            "type": "number",
            "description": "Average income from the Ministry of Construction"
          },
          "avgMinistryOfConstructionIncomeRecent3Mth": {
            "type": "number",
            "description": "Average Ministry of Construction income in the most recent 3 months"
          },
          "avgNationalInsurance": {
            "type": "number",
            "description": "Average income from National Insurance"
          },
          "avgNationalInsuranceRecent3Mth": {
            "type": "number",
            "description": "Average National Insurance income in the most recent 3 months"
          },
          "daysSinceLastPigur": {
            "type": "number",
            "description": "Number of days since the last 'Pigur' event"
          },
          "daysSinceLastCancelledChq": {
            "type": "number",
            "description": "Number of days since the last cancelled cheque"
          },
          "daysSinceLastAkam": {
            "type": "number",
            "description": "Number of days since the last 'Akam' event"
          },
          "lastDayOfLimit": {
            "type": "string",
            "description": "Last date the account reached or triggered a credit limit event (DD/MM/YYYY)"
          },
          "daysSinceLastLimit": {
            "type": "number",
            "description": "Number of days since the last credit limit event"
          },
          "lastDayOfexceeded": {
            "type": "string",
            "description": "Last date the account exceeded its credit limit (DD/MM/YYYY)"
          },
          "daysSinceLastExceededAlert": {
            "type": "number",
            "description": "Number of days since the last credit exceeded alert"
          },
          "sumExpensesRcntMth": {
            "type": "number",
            "description": "Total expenses in the most recent month"
          },
          "avgExpensesMth": {
            "type": "number",
            "description": "Average monthly expenses"
          },
          "sumExpensesLast3Mth": {
            "type": "number",
            "description": "Total expenses in the last 3 months"
          },
          "countCardLoans": {
            "type": "number",
            "description": "Number of card-based loans"
          },
          "sumCardLoans": {
            "type": "number",
            "description": "Sum of card-based loans"
          },
          "decision": {
            "type": "string",
            "description": "Final decision based on financial data",
            "enum": [
              "Go",
              "NoGo"
            ]
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}